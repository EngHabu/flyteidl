// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/plugins/sagemaker/hpo_job.proto

#ifndef PROTOBUF_INCLUDED_flyteidl_2fplugins_2fsagemaker_2fhpo_5fjob_2eproto
#define PROTOBUF_INCLUDED_flyteidl_2fplugins_2fsagemaker_2fhpo_5fjob_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "flyteidl/plugins/sagemaker/parameter_ranges.pb.h"
#include "flyteidl/plugins/sagemaker/training_job.pb.h"
#include "flyteidl/core/tasks.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_flyteidl_2fplugins_2fsagemaker_2fhpo_5fjob_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_flyteidl_2fplugins_2fsagemaker_2fhpo_5fjob_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_flyteidl_2fplugins_2fsagemaker_2fhpo_5fjob_2eproto();
namespace flyteidl {
namespace plugins {
namespace sagemaker {
class HPOJob;
class HPOJobDefaultTypeInternal;
extern HPOJobDefaultTypeInternal _HPOJob_default_instance_;
class HPOJobConfig;
class HPOJobConfigDefaultTypeInternal;
extern HPOJobConfigDefaultTypeInternal _HPOJobConfig_default_instance_;
class HPOJobCustom;
class HPOJobCustomDefaultTypeInternal;
extern HPOJobCustomDefaultTypeInternal _HPOJobCustom_default_instance_;
class HyperparameterTuningObjective;
class HyperparameterTuningObjectiveDefaultTypeInternal;
extern HyperparameterTuningObjectiveDefaultTypeInternal _HyperparameterTuningObjective_default_instance_;
}  // namespace sagemaker
}  // namespace plugins
}  // namespace flyteidl
namespace google {
namespace protobuf {
template<> ::flyteidl::plugins::sagemaker::HPOJob* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::HPOJob>(Arena*);
template<> ::flyteidl::plugins::sagemaker::HPOJobConfig* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::HPOJobConfig>(Arena*);
template<> ::flyteidl::plugins::sagemaker::HPOJobCustom* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::HPOJobCustom>(Arena*);
template<> ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::HyperparameterTuningObjective>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace flyteidl {
namespace plugins {
namespace sagemaker {

enum HyperparameterTuningObjective_HyperparameterTuningObjectiveType {
  HyperparameterTuningObjective_HyperparameterTuningObjectiveType_MINIMIZE = 0,
  HyperparameterTuningObjective_HyperparameterTuningObjectiveType_MAXIMIZE = 1,
  HyperparameterTuningObjective_HyperparameterTuningObjectiveType_HyperparameterTuningObjective_HyperparameterTuningObjectiveType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  HyperparameterTuningObjective_HyperparameterTuningObjectiveType_HyperparameterTuningObjective_HyperparameterTuningObjectiveType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool HyperparameterTuningObjective_HyperparameterTuningObjectiveType_IsValid(int value);
const HyperparameterTuningObjective_HyperparameterTuningObjectiveType HyperparameterTuningObjective_HyperparameterTuningObjectiveType_HyperparameterTuningObjectiveType_MIN = HyperparameterTuningObjective_HyperparameterTuningObjectiveType_MINIMIZE;
const HyperparameterTuningObjective_HyperparameterTuningObjectiveType HyperparameterTuningObjective_HyperparameterTuningObjectiveType_HyperparameterTuningObjectiveType_MAX = HyperparameterTuningObjective_HyperparameterTuningObjectiveType_MAXIMIZE;
const int HyperparameterTuningObjective_HyperparameterTuningObjectiveType_HyperparameterTuningObjectiveType_ARRAYSIZE = HyperparameterTuningObjective_HyperparameterTuningObjectiveType_HyperparameterTuningObjectiveType_MAX + 1;

const ::google::protobuf::EnumDescriptor* HyperparameterTuningObjective_HyperparameterTuningObjectiveType_descriptor();
inline const ::std::string& HyperparameterTuningObjective_HyperparameterTuningObjectiveType_Name(HyperparameterTuningObjective_HyperparameterTuningObjectiveType value) {
  return ::google::protobuf::internal::NameOfEnum(
    HyperparameterTuningObjective_HyperparameterTuningObjectiveType_descriptor(), value);
}
inline bool HyperparameterTuningObjective_HyperparameterTuningObjectiveType_Parse(
    const ::std::string& name, HyperparameterTuningObjective_HyperparameterTuningObjectiveType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HyperparameterTuningObjective_HyperparameterTuningObjectiveType>(
    HyperparameterTuningObjective_HyperparameterTuningObjectiveType_descriptor(), name, value);
}
enum HPOJobConfig_HyperparameterTuningStrategy {
  HPOJobConfig_HyperparameterTuningStrategy_BAYESIAN = 0,
  HPOJobConfig_HyperparameterTuningStrategy_RANDOM = 1,
  HPOJobConfig_HyperparameterTuningStrategy_HPOJobConfig_HyperparameterTuningStrategy_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  HPOJobConfig_HyperparameterTuningStrategy_HPOJobConfig_HyperparameterTuningStrategy_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool HPOJobConfig_HyperparameterTuningStrategy_IsValid(int value);
const HPOJobConfig_HyperparameterTuningStrategy HPOJobConfig_HyperparameterTuningStrategy_HyperparameterTuningStrategy_MIN = HPOJobConfig_HyperparameterTuningStrategy_BAYESIAN;
const HPOJobConfig_HyperparameterTuningStrategy HPOJobConfig_HyperparameterTuningStrategy_HyperparameterTuningStrategy_MAX = HPOJobConfig_HyperparameterTuningStrategy_RANDOM;
const int HPOJobConfig_HyperparameterTuningStrategy_HyperparameterTuningStrategy_ARRAYSIZE = HPOJobConfig_HyperparameterTuningStrategy_HyperparameterTuningStrategy_MAX + 1;

const ::google::protobuf::EnumDescriptor* HPOJobConfig_HyperparameterTuningStrategy_descriptor();
inline const ::std::string& HPOJobConfig_HyperparameterTuningStrategy_Name(HPOJobConfig_HyperparameterTuningStrategy value) {
  return ::google::protobuf::internal::NameOfEnum(
    HPOJobConfig_HyperparameterTuningStrategy_descriptor(), value);
}
inline bool HPOJobConfig_HyperparameterTuningStrategy_Parse(
    const ::std::string& name, HPOJobConfig_HyperparameterTuningStrategy* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HPOJobConfig_HyperparameterTuningStrategy>(
    HPOJobConfig_HyperparameterTuningStrategy_descriptor(), name, value);
}
enum HPOJobConfig_TrainingJobEarlyStoppingType {
  HPOJobConfig_TrainingJobEarlyStoppingType_OFF = 0,
  HPOJobConfig_TrainingJobEarlyStoppingType_AUTO = 1,
  HPOJobConfig_TrainingJobEarlyStoppingType_HPOJobConfig_TrainingJobEarlyStoppingType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  HPOJobConfig_TrainingJobEarlyStoppingType_HPOJobConfig_TrainingJobEarlyStoppingType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool HPOJobConfig_TrainingJobEarlyStoppingType_IsValid(int value);
const HPOJobConfig_TrainingJobEarlyStoppingType HPOJobConfig_TrainingJobEarlyStoppingType_TrainingJobEarlyStoppingType_MIN = HPOJobConfig_TrainingJobEarlyStoppingType_OFF;
const HPOJobConfig_TrainingJobEarlyStoppingType HPOJobConfig_TrainingJobEarlyStoppingType_TrainingJobEarlyStoppingType_MAX = HPOJobConfig_TrainingJobEarlyStoppingType_AUTO;
const int HPOJobConfig_TrainingJobEarlyStoppingType_TrainingJobEarlyStoppingType_ARRAYSIZE = HPOJobConfig_TrainingJobEarlyStoppingType_TrainingJobEarlyStoppingType_MAX + 1;

const ::google::protobuf::EnumDescriptor* HPOJobConfig_TrainingJobEarlyStoppingType_descriptor();
inline const ::std::string& HPOJobConfig_TrainingJobEarlyStoppingType_Name(HPOJobConfig_TrainingJobEarlyStoppingType value) {
  return ::google::protobuf::internal::NameOfEnum(
    HPOJobConfig_TrainingJobEarlyStoppingType_descriptor(), value);
}
inline bool HPOJobConfig_TrainingJobEarlyStoppingType_Parse(
    const ::std::string& name, HPOJobConfig_TrainingJobEarlyStoppingType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HPOJobConfig_TrainingJobEarlyStoppingType>(
    HPOJobConfig_TrainingJobEarlyStoppingType_descriptor(), name, value);
}
// ===================================================================

class HyperparameterTuningObjective final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.HyperparameterTuningObjective) */ {
 public:
  HyperparameterTuningObjective();
  virtual ~HyperparameterTuningObjective();

  HyperparameterTuningObjective(const HyperparameterTuningObjective& from);

  inline HyperparameterTuningObjective& operator=(const HyperparameterTuningObjective& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HyperparameterTuningObjective(HyperparameterTuningObjective&& from) noexcept
    : HyperparameterTuningObjective() {
    *this = ::std::move(from);
  }

  inline HyperparameterTuningObjective& operator=(HyperparameterTuningObjective&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HyperparameterTuningObjective& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HyperparameterTuningObjective* internal_default_instance() {
    return reinterpret_cast<const HyperparameterTuningObjective*>(
               &_HyperparameterTuningObjective_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(HyperparameterTuningObjective* other);
  friend void swap(HyperparameterTuningObjective& a, HyperparameterTuningObjective& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HyperparameterTuningObjective* New() const final {
    return CreateMaybeMessage<HyperparameterTuningObjective>(nullptr);
  }

  HyperparameterTuningObjective* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HyperparameterTuningObjective>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HyperparameterTuningObjective& from);
  void MergeFrom(const HyperparameterTuningObjective& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HyperparameterTuningObjective* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef HyperparameterTuningObjective_HyperparameterTuningObjectiveType HyperparameterTuningObjectiveType;
  static const HyperparameterTuningObjectiveType MINIMIZE =
    HyperparameterTuningObjective_HyperparameterTuningObjectiveType_MINIMIZE;
  static const HyperparameterTuningObjectiveType MAXIMIZE =
    HyperparameterTuningObjective_HyperparameterTuningObjectiveType_MAXIMIZE;
  static inline bool HyperparameterTuningObjectiveType_IsValid(int value) {
    return HyperparameterTuningObjective_HyperparameterTuningObjectiveType_IsValid(value);
  }
  static const HyperparameterTuningObjectiveType HyperparameterTuningObjectiveType_MIN =
    HyperparameterTuningObjective_HyperparameterTuningObjectiveType_HyperparameterTuningObjectiveType_MIN;
  static const HyperparameterTuningObjectiveType HyperparameterTuningObjectiveType_MAX =
    HyperparameterTuningObjective_HyperparameterTuningObjectiveType_HyperparameterTuningObjectiveType_MAX;
  static const int HyperparameterTuningObjectiveType_ARRAYSIZE =
    HyperparameterTuningObjective_HyperparameterTuningObjectiveType_HyperparameterTuningObjectiveType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  HyperparameterTuningObjectiveType_descriptor() {
    return HyperparameterTuningObjective_HyperparameterTuningObjectiveType_descriptor();
  }
  static inline const ::std::string& HyperparameterTuningObjectiveType_Name(HyperparameterTuningObjectiveType value) {
    return HyperparameterTuningObjective_HyperparameterTuningObjectiveType_Name(value);
  }
  static inline bool HyperparameterTuningObjectiveType_Parse(const ::std::string& name,
      HyperparameterTuningObjectiveType* value) {
    return HyperparameterTuningObjective_HyperparameterTuningObjectiveType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string metric_name = 2;
  void clear_metric_name();
  static const int kMetricNameFieldNumber = 2;
  const ::std::string& metric_name() const;
  void set_metric_name(const ::std::string& value);
  #if LANG_CXX11
  void set_metric_name(::std::string&& value);
  #endif
  void set_metric_name(const char* value);
  void set_metric_name(const char* value, size_t size);
  ::std::string* mutable_metric_name();
  ::std::string* release_metric_name();
  void set_allocated_metric_name(::std::string* metric_name);

  // .flyteidl.plugins.sagemaker.HyperparameterTuningObjective.HyperparameterTuningObjectiveType objective_type = 1;
  void clear_objective_type();
  static const int kObjectiveTypeFieldNumber = 1;
  ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective_HyperparameterTuningObjectiveType objective_type() const;
  void set_objective_type(::flyteidl::plugins::sagemaker::HyperparameterTuningObjective_HyperparameterTuningObjectiveType value);

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.HyperparameterTuningObjective)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr metric_name_;
  int objective_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2fhpo_5fjob_2eproto;
};
// -------------------------------------------------------------------

class HPOJob final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.HPOJob) */ {
 public:
  HPOJob();
  virtual ~HPOJob();

  HPOJob(const HPOJob& from);

  inline HPOJob& operator=(const HPOJob& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HPOJob(HPOJob&& from) noexcept
    : HPOJob() {
    *this = ::std::move(from);
  }

  inline HPOJob& operator=(HPOJob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HPOJob& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HPOJob* internal_default_instance() {
    return reinterpret_cast<const HPOJob*>(
               &_HPOJob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(HPOJob* other);
  friend void swap(HPOJob& a, HPOJob& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HPOJob* New() const final {
    return CreateMaybeMessage<HPOJob>(nullptr);
  }

  HPOJob* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HPOJob>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HPOJob& from);
  void MergeFrom(const HPOJob& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HPOJob* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .flyteidl.plugins.sagemaker.TrainingJob training_job = 1;
  bool has_training_job() const;
  void clear_training_job();
  static const int kTrainingJobFieldNumber = 1;
  const ::flyteidl::plugins::sagemaker::TrainingJob& training_job() const;
  ::flyteidl::plugins::sagemaker::TrainingJob* release_training_job();
  ::flyteidl::plugins::sagemaker::TrainingJob* mutable_training_job();
  void set_allocated_training_job(::flyteidl::plugins::sagemaker::TrainingJob* training_job);

  // int64 max_number_of_training_jobs = 2;
  void clear_max_number_of_training_jobs();
  static const int kMaxNumberOfTrainingJobsFieldNumber = 2;
  ::google::protobuf::int64 max_number_of_training_jobs() const;
  void set_max_number_of_training_jobs(::google::protobuf::int64 value);

  // int64 max_parallel_training_jobs = 3;
  void clear_max_parallel_training_jobs();
  static const int kMaxParallelTrainingJobsFieldNumber = 3;
  ::google::protobuf::int64 max_parallel_training_jobs() const;
  void set_max_parallel_training_jobs(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.HPOJob)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::flyteidl::plugins::sagemaker::TrainingJob* training_job_;
  ::google::protobuf::int64 max_number_of_training_jobs_;
  ::google::protobuf::int64 max_parallel_training_jobs_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2fhpo_5fjob_2eproto;
};
// -------------------------------------------------------------------

class HPOJobConfig final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.HPOJobConfig) */ {
 public:
  HPOJobConfig();
  virtual ~HPOJobConfig();

  HPOJobConfig(const HPOJobConfig& from);

  inline HPOJobConfig& operator=(const HPOJobConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HPOJobConfig(HPOJobConfig&& from) noexcept
    : HPOJobConfig() {
    *this = ::std::move(from);
  }

  inline HPOJobConfig& operator=(HPOJobConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HPOJobConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HPOJobConfig* internal_default_instance() {
    return reinterpret_cast<const HPOJobConfig*>(
               &_HPOJobConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(HPOJobConfig* other);
  friend void swap(HPOJobConfig& a, HPOJobConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HPOJobConfig* New() const final {
    return CreateMaybeMessage<HPOJobConfig>(nullptr);
  }

  HPOJobConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HPOJobConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HPOJobConfig& from);
  void MergeFrom(const HPOJobConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HPOJobConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef HPOJobConfig_HyperparameterTuningStrategy HyperparameterTuningStrategy;
  static const HyperparameterTuningStrategy BAYESIAN =
    HPOJobConfig_HyperparameterTuningStrategy_BAYESIAN;
  static const HyperparameterTuningStrategy RANDOM =
    HPOJobConfig_HyperparameterTuningStrategy_RANDOM;
  static inline bool HyperparameterTuningStrategy_IsValid(int value) {
    return HPOJobConfig_HyperparameterTuningStrategy_IsValid(value);
  }
  static const HyperparameterTuningStrategy HyperparameterTuningStrategy_MIN =
    HPOJobConfig_HyperparameterTuningStrategy_HyperparameterTuningStrategy_MIN;
  static const HyperparameterTuningStrategy HyperparameterTuningStrategy_MAX =
    HPOJobConfig_HyperparameterTuningStrategy_HyperparameterTuningStrategy_MAX;
  static const int HyperparameterTuningStrategy_ARRAYSIZE =
    HPOJobConfig_HyperparameterTuningStrategy_HyperparameterTuningStrategy_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  HyperparameterTuningStrategy_descriptor() {
    return HPOJobConfig_HyperparameterTuningStrategy_descriptor();
  }
  static inline const ::std::string& HyperparameterTuningStrategy_Name(HyperparameterTuningStrategy value) {
    return HPOJobConfig_HyperparameterTuningStrategy_Name(value);
  }
  static inline bool HyperparameterTuningStrategy_Parse(const ::std::string& name,
      HyperparameterTuningStrategy* value) {
    return HPOJobConfig_HyperparameterTuningStrategy_Parse(name, value);
  }

  typedef HPOJobConfig_TrainingJobEarlyStoppingType TrainingJobEarlyStoppingType;
  static const TrainingJobEarlyStoppingType OFF =
    HPOJobConfig_TrainingJobEarlyStoppingType_OFF;
  static const TrainingJobEarlyStoppingType AUTO =
    HPOJobConfig_TrainingJobEarlyStoppingType_AUTO;
  static inline bool TrainingJobEarlyStoppingType_IsValid(int value) {
    return HPOJobConfig_TrainingJobEarlyStoppingType_IsValid(value);
  }
  static const TrainingJobEarlyStoppingType TrainingJobEarlyStoppingType_MIN =
    HPOJobConfig_TrainingJobEarlyStoppingType_TrainingJobEarlyStoppingType_MIN;
  static const TrainingJobEarlyStoppingType TrainingJobEarlyStoppingType_MAX =
    HPOJobConfig_TrainingJobEarlyStoppingType_TrainingJobEarlyStoppingType_MAX;
  static const int TrainingJobEarlyStoppingType_ARRAYSIZE =
    HPOJobConfig_TrainingJobEarlyStoppingType_TrainingJobEarlyStoppingType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TrainingJobEarlyStoppingType_descriptor() {
    return HPOJobConfig_TrainingJobEarlyStoppingType_descriptor();
  }
  static inline const ::std::string& TrainingJobEarlyStoppingType_Name(TrainingJobEarlyStoppingType value) {
    return HPOJobConfig_TrainingJobEarlyStoppingType_Name(value);
  }
  static inline bool TrainingJobEarlyStoppingType_Parse(const ::std::string& name,
      TrainingJobEarlyStoppingType* value) {
    return HPOJobConfig_TrainingJobEarlyStoppingType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .flyteidl.plugins.sagemaker.ParameterRanges hyperparameter_ranges = 1;
  bool has_hyperparameter_ranges() const;
  void clear_hyperparameter_ranges();
  static const int kHyperparameterRangesFieldNumber = 1;
  const ::flyteidl::plugins::sagemaker::ParameterRanges& hyperparameter_ranges() const;
  ::flyteidl::plugins::sagemaker::ParameterRanges* release_hyperparameter_ranges();
  ::flyteidl::plugins::sagemaker::ParameterRanges* mutable_hyperparameter_ranges();
  void set_allocated_hyperparameter_ranges(::flyteidl::plugins::sagemaker::ParameterRanges* hyperparameter_ranges);

  // .flyteidl.plugins.sagemaker.HyperparameterTuningObjective tuning_objective = 3;
  bool has_tuning_objective() const;
  void clear_tuning_objective();
  static const int kTuningObjectiveFieldNumber = 3;
  const ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective& tuning_objective() const;
  ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective* release_tuning_objective();
  ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective* mutable_tuning_objective();
  void set_allocated_tuning_objective(::flyteidl::plugins::sagemaker::HyperparameterTuningObjective* tuning_objective);

  // .flyteidl.plugins.sagemaker.HPOJobConfig.HyperparameterTuningStrategy tuning_strategy = 2;
  void clear_tuning_strategy();
  static const int kTuningStrategyFieldNumber = 2;
  ::flyteidl::plugins::sagemaker::HPOJobConfig_HyperparameterTuningStrategy tuning_strategy() const;
  void set_tuning_strategy(::flyteidl::plugins::sagemaker::HPOJobConfig_HyperparameterTuningStrategy value);

  // .flyteidl.plugins.sagemaker.HPOJobConfig.TrainingJobEarlyStoppingType training_job_early_stopping_type = 4;
  void clear_training_job_early_stopping_type();
  static const int kTrainingJobEarlyStoppingTypeFieldNumber = 4;
  ::flyteidl::plugins::sagemaker::HPOJobConfig_TrainingJobEarlyStoppingType training_job_early_stopping_type() const;
  void set_training_job_early_stopping_type(::flyteidl::plugins::sagemaker::HPOJobConfig_TrainingJobEarlyStoppingType value);

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.HPOJobConfig)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::flyteidl::plugins::sagemaker::ParameterRanges* hyperparameter_ranges_;
  ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective* tuning_objective_;
  int tuning_strategy_;
  int training_job_early_stopping_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2fhpo_5fjob_2eproto;
};
// -------------------------------------------------------------------

class HPOJobCustom final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.HPOJobCustom) */ {
 public:
  HPOJobCustom();
  virtual ~HPOJobCustom();

  HPOJobCustom(const HPOJobCustom& from);

  inline HPOJobCustom& operator=(const HPOJobCustom& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HPOJobCustom(HPOJobCustom&& from) noexcept
    : HPOJobCustom() {
    *this = ::std::move(from);
  }

  inline HPOJobCustom& operator=(HPOJobCustom&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HPOJobCustom& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HPOJobCustom* internal_default_instance() {
    return reinterpret_cast<const HPOJobCustom*>(
               &_HPOJobCustom_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(HPOJobCustom* other);
  friend void swap(HPOJobCustom& a, HPOJobCustom& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HPOJobCustom* New() const final {
    return CreateMaybeMessage<HPOJobCustom>(nullptr);
  }

  HPOJobCustom* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HPOJobCustom>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HPOJobCustom& from);
  void MergeFrom(const HPOJobCustom& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HPOJobCustom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .flyteidl.plugins.sagemaker.HPOJob hpo_job_core = 1;
  bool has_hpo_job_core() const;
  void clear_hpo_job_core();
  static const int kHpoJobCoreFieldNumber = 1;
  const ::flyteidl::plugins::sagemaker::HPOJob& hpo_job_core() const;
  ::flyteidl::plugins::sagemaker::HPOJob* release_hpo_job_core();
  ::flyteidl::plugins::sagemaker::HPOJob* mutable_hpo_job_core();
  void set_allocated_hpo_job_core(::flyteidl::plugins::sagemaker::HPOJob* hpo_job_core);

  // .flyteidl.core.TaskTemplate training_job_task_template = 2;
  bool has_training_job_task_template() const;
  void clear_training_job_task_template();
  static const int kTrainingJobTaskTemplateFieldNumber = 2;
  const ::flyteidl::core::TaskTemplate& training_job_task_template() const;
  ::flyteidl::core::TaskTemplate* release_training_job_task_template();
  ::flyteidl::core::TaskTemplate* mutable_training_job_task_template();
  void set_allocated_training_job_task_template(::flyteidl::core::TaskTemplate* training_job_task_template);

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.HPOJobCustom)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::flyteidl::plugins::sagemaker::HPOJob* hpo_job_core_;
  ::flyteidl::core::TaskTemplate* training_job_task_template_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2fhpo_5fjob_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HyperparameterTuningObjective

// .flyteidl.plugins.sagemaker.HyperparameterTuningObjective.HyperparameterTuningObjectiveType objective_type = 1;
inline void HyperparameterTuningObjective::clear_objective_type() {
  objective_type_ = 0;
}
inline ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective_HyperparameterTuningObjectiveType HyperparameterTuningObjective::objective_type() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HyperparameterTuningObjective.objective_type)
  return static_cast< ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective_HyperparameterTuningObjectiveType >(objective_type_);
}
inline void HyperparameterTuningObjective::set_objective_type(::flyteidl::plugins::sagemaker::HyperparameterTuningObjective_HyperparameterTuningObjectiveType value) {
  
  objective_type_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.HyperparameterTuningObjective.objective_type)
}

// string metric_name = 2;
inline void HyperparameterTuningObjective::clear_metric_name() {
  metric_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HyperparameterTuningObjective::metric_name() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HyperparameterTuningObjective.metric_name)
  return metric_name_.GetNoArena();
}
inline void HyperparameterTuningObjective::set_metric_name(const ::std::string& value) {
  
  metric_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.HyperparameterTuningObjective.metric_name)
}
#if LANG_CXX11
inline void HyperparameterTuningObjective::set_metric_name(::std::string&& value) {
  
  metric_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.plugins.sagemaker.HyperparameterTuningObjective.metric_name)
}
#endif
inline void HyperparameterTuningObjective::set_metric_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  metric_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.plugins.sagemaker.HyperparameterTuningObjective.metric_name)
}
inline void HyperparameterTuningObjective::set_metric_name(const char* value, size_t size) {
  
  metric_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.plugins.sagemaker.HyperparameterTuningObjective.metric_name)
}
inline ::std::string* HyperparameterTuningObjective::mutable_metric_name() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.HyperparameterTuningObjective.metric_name)
  return metric_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HyperparameterTuningObjective::release_metric_name() {
  // @@protoc_insertion_point(field_release:flyteidl.plugins.sagemaker.HyperparameterTuningObjective.metric_name)
  
  return metric_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HyperparameterTuningObjective::set_allocated_metric_name(::std::string* metric_name) {
  if (metric_name != nullptr) {
    
  } else {
    
  }
  metric_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), metric_name);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.plugins.sagemaker.HyperparameterTuningObjective.metric_name)
}

// -------------------------------------------------------------------

// HPOJob

// .flyteidl.plugins.sagemaker.TrainingJob training_job = 1;
inline bool HPOJob::has_training_job() const {
  return this != internal_default_instance() && training_job_ != nullptr;
}
inline const ::flyteidl::plugins::sagemaker::TrainingJob& HPOJob::training_job() const {
  const ::flyteidl::plugins::sagemaker::TrainingJob* p = training_job_;
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HPOJob.training_job)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::plugins::sagemaker::TrainingJob*>(
      &::flyteidl::plugins::sagemaker::_TrainingJob_default_instance_);
}
inline ::flyteidl::plugins::sagemaker::TrainingJob* HPOJob::release_training_job() {
  // @@protoc_insertion_point(field_release:flyteidl.plugins.sagemaker.HPOJob.training_job)
  
  ::flyteidl::plugins::sagemaker::TrainingJob* temp = training_job_;
  training_job_ = nullptr;
  return temp;
}
inline ::flyteidl::plugins::sagemaker::TrainingJob* HPOJob::mutable_training_job() {
  
  if (training_job_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::plugins::sagemaker::TrainingJob>(GetArenaNoVirtual());
    training_job_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.HPOJob.training_job)
  return training_job_;
}
inline void HPOJob::set_allocated_training_job(::flyteidl::plugins::sagemaker::TrainingJob* training_job) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(training_job_);
  }
  if (training_job) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      training_job = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, training_job, submessage_arena);
    }
    
  } else {
    
  }
  training_job_ = training_job;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.plugins.sagemaker.HPOJob.training_job)
}

// int64 max_number_of_training_jobs = 2;
inline void HPOJob::clear_max_number_of_training_jobs() {
  max_number_of_training_jobs_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 HPOJob::max_number_of_training_jobs() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HPOJob.max_number_of_training_jobs)
  return max_number_of_training_jobs_;
}
inline void HPOJob::set_max_number_of_training_jobs(::google::protobuf::int64 value) {
  
  max_number_of_training_jobs_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.HPOJob.max_number_of_training_jobs)
}

// int64 max_parallel_training_jobs = 3;
inline void HPOJob::clear_max_parallel_training_jobs() {
  max_parallel_training_jobs_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 HPOJob::max_parallel_training_jobs() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HPOJob.max_parallel_training_jobs)
  return max_parallel_training_jobs_;
}
inline void HPOJob::set_max_parallel_training_jobs(::google::protobuf::int64 value) {
  
  max_parallel_training_jobs_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.HPOJob.max_parallel_training_jobs)
}

// -------------------------------------------------------------------

// HPOJobConfig

// .flyteidl.plugins.sagemaker.ParameterRanges hyperparameter_ranges = 1;
inline bool HPOJobConfig::has_hyperparameter_ranges() const {
  return this != internal_default_instance() && hyperparameter_ranges_ != nullptr;
}
inline const ::flyteidl::plugins::sagemaker::ParameterRanges& HPOJobConfig::hyperparameter_ranges() const {
  const ::flyteidl::plugins::sagemaker::ParameterRanges* p = hyperparameter_ranges_;
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HPOJobConfig.hyperparameter_ranges)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::plugins::sagemaker::ParameterRanges*>(
      &::flyteidl::plugins::sagemaker::_ParameterRanges_default_instance_);
}
inline ::flyteidl::plugins::sagemaker::ParameterRanges* HPOJobConfig::release_hyperparameter_ranges() {
  // @@protoc_insertion_point(field_release:flyteidl.plugins.sagemaker.HPOJobConfig.hyperparameter_ranges)
  
  ::flyteidl::plugins::sagemaker::ParameterRanges* temp = hyperparameter_ranges_;
  hyperparameter_ranges_ = nullptr;
  return temp;
}
inline ::flyteidl::plugins::sagemaker::ParameterRanges* HPOJobConfig::mutable_hyperparameter_ranges() {
  
  if (hyperparameter_ranges_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::plugins::sagemaker::ParameterRanges>(GetArenaNoVirtual());
    hyperparameter_ranges_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.HPOJobConfig.hyperparameter_ranges)
  return hyperparameter_ranges_;
}
inline void HPOJobConfig::set_allocated_hyperparameter_ranges(::flyteidl::plugins::sagemaker::ParameterRanges* hyperparameter_ranges) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hyperparameter_ranges_);
  }
  if (hyperparameter_ranges) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      hyperparameter_ranges = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hyperparameter_ranges, submessage_arena);
    }
    
  } else {
    
  }
  hyperparameter_ranges_ = hyperparameter_ranges;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.plugins.sagemaker.HPOJobConfig.hyperparameter_ranges)
}

// .flyteidl.plugins.sagemaker.HPOJobConfig.HyperparameterTuningStrategy tuning_strategy = 2;
inline void HPOJobConfig::clear_tuning_strategy() {
  tuning_strategy_ = 0;
}
inline ::flyteidl::plugins::sagemaker::HPOJobConfig_HyperparameterTuningStrategy HPOJobConfig::tuning_strategy() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HPOJobConfig.tuning_strategy)
  return static_cast< ::flyteidl::plugins::sagemaker::HPOJobConfig_HyperparameterTuningStrategy >(tuning_strategy_);
}
inline void HPOJobConfig::set_tuning_strategy(::flyteidl::plugins::sagemaker::HPOJobConfig_HyperparameterTuningStrategy value) {
  
  tuning_strategy_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.HPOJobConfig.tuning_strategy)
}

// .flyteidl.plugins.sagemaker.HyperparameterTuningObjective tuning_objective = 3;
inline bool HPOJobConfig::has_tuning_objective() const {
  return this != internal_default_instance() && tuning_objective_ != nullptr;
}
inline void HPOJobConfig::clear_tuning_objective() {
  if (GetArenaNoVirtual() == nullptr && tuning_objective_ != nullptr) {
    delete tuning_objective_;
  }
  tuning_objective_ = nullptr;
}
inline const ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective& HPOJobConfig::tuning_objective() const {
  const ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective* p = tuning_objective_;
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HPOJobConfig.tuning_objective)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective*>(
      &::flyteidl::plugins::sagemaker::_HyperparameterTuningObjective_default_instance_);
}
inline ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective* HPOJobConfig::release_tuning_objective() {
  // @@protoc_insertion_point(field_release:flyteidl.plugins.sagemaker.HPOJobConfig.tuning_objective)
  
  ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective* temp = tuning_objective_;
  tuning_objective_ = nullptr;
  return temp;
}
inline ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective* HPOJobConfig::mutable_tuning_objective() {
  
  if (tuning_objective_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::plugins::sagemaker::HyperparameterTuningObjective>(GetArenaNoVirtual());
    tuning_objective_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.HPOJobConfig.tuning_objective)
  return tuning_objective_;
}
inline void HPOJobConfig::set_allocated_tuning_objective(::flyteidl::plugins::sagemaker::HyperparameterTuningObjective* tuning_objective) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete tuning_objective_;
  }
  if (tuning_objective) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      tuning_objective = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tuning_objective, submessage_arena);
    }
    
  } else {
    
  }
  tuning_objective_ = tuning_objective;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.plugins.sagemaker.HPOJobConfig.tuning_objective)
}

// .flyteidl.plugins.sagemaker.HPOJobConfig.TrainingJobEarlyStoppingType training_job_early_stopping_type = 4;
inline void HPOJobConfig::clear_training_job_early_stopping_type() {
  training_job_early_stopping_type_ = 0;
}
inline ::flyteidl::plugins::sagemaker::HPOJobConfig_TrainingJobEarlyStoppingType HPOJobConfig::training_job_early_stopping_type() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HPOJobConfig.training_job_early_stopping_type)
  return static_cast< ::flyteidl::plugins::sagemaker::HPOJobConfig_TrainingJobEarlyStoppingType >(training_job_early_stopping_type_);
}
inline void HPOJobConfig::set_training_job_early_stopping_type(::flyteidl::plugins::sagemaker::HPOJobConfig_TrainingJobEarlyStoppingType value) {
  
  training_job_early_stopping_type_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.HPOJobConfig.training_job_early_stopping_type)
}

// -------------------------------------------------------------------

// HPOJobCustom

// .flyteidl.plugins.sagemaker.HPOJob hpo_job_core = 1;
inline bool HPOJobCustom::has_hpo_job_core() const {
  return this != internal_default_instance() && hpo_job_core_ != nullptr;
}
inline void HPOJobCustom::clear_hpo_job_core() {
  if (GetArenaNoVirtual() == nullptr && hpo_job_core_ != nullptr) {
    delete hpo_job_core_;
  }
  hpo_job_core_ = nullptr;
}
inline const ::flyteidl::plugins::sagemaker::HPOJob& HPOJobCustom::hpo_job_core() const {
  const ::flyteidl::plugins::sagemaker::HPOJob* p = hpo_job_core_;
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HPOJobCustom.hpo_job_core)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::plugins::sagemaker::HPOJob*>(
      &::flyteidl::plugins::sagemaker::_HPOJob_default_instance_);
}
inline ::flyteidl::plugins::sagemaker::HPOJob* HPOJobCustom::release_hpo_job_core() {
  // @@protoc_insertion_point(field_release:flyteidl.plugins.sagemaker.HPOJobCustom.hpo_job_core)
  
  ::flyteidl::plugins::sagemaker::HPOJob* temp = hpo_job_core_;
  hpo_job_core_ = nullptr;
  return temp;
}
inline ::flyteidl::plugins::sagemaker::HPOJob* HPOJobCustom::mutable_hpo_job_core() {
  
  if (hpo_job_core_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::plugins::sagemaker::HPOJob>(GetArenaNoVirtual());
    hpo_job_core_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.HPOJobCustom.hpo_job_core)
  return hpo_job_core_;
}
inline void HPOJobCustom::set_allocated_hpo_job_core(::flyteidl::plugins::sagemaker::HPOJob* hpo_job_core) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete hpo_job_core_;
  }
  if (hpo_job_core) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      hpo_job_core = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hpo_job_core, submessage_arena);
    }
    
  } else {
    
  }
  hpo_job_core_ = hpo_job_core;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.plugins.sagemaker.HPOJobCustom.hpo_job_core)
}

// .flyteidl.core.TaskTemplate training_job_task_template = 2;
inline bool HPOJobCustom::has_training_job_task_template() const {
  return this != internal_default_instance() && training_job_task_template_ != nullptr;
}
inline const ::flyteidl::core::TaskTemplate& HPOJobCustom::training_job_task_template() const {
  const ::flyteidl::core::TaskTemplate* p = training_job_task_template_;
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HPOJobCustom.training_job_task_template)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::core::TaskTemplate*>(
      &::flyteidl::core::_TaskTemplate_default_instance_);
}
inline ::flyteidl::core::TaskTemplate* HPOJobCustom::release_training_job_task_template() {
  // @@protoc_insertion_point(field_release:flyteidl.plugins.sagemaker.HPOJobCustom.training_job_task_template)
  
  ::flyteidl::core::TaskTemplate* temp = training_job_task_template_;
  training_job_task_template_ = nullptr;
  return temp;
}
inline ::flyteidl::core::TaskTemplate* HPOJobCustom::mutable_training_job_task_template() {
  
  if (training_job_task_template_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::core::TaskTemplate>(GetArenaNoVirtual());
    training_job_task_template_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.HPOJobCustom.training_job_task_template)
  return training_job_task_template_;
}
inline void HPOJobCustom::set_allocated_training_job_task_template(::flyteidl::core::TaskTemplate* training_job_task_template) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(training_job_task_template_);
  }
  if (training_job_task_template) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      training_job_task_template = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, training_job_task_template, submessage_arena);
    }
    
  } else {
    
  }
  training_job_task_template_ = training_job_task_template;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.plugins.sagemaker.HPOJobCustom.training_job_task_template)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sagemaker
}  // namespace plugins
}  // namespace flyteidl

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective_HyperparameterTuningObjectiveType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective_HyperparameterTuningObjectiveType>() {
  return ::flyteidl::plugins::sagemaker::HyperparameterTuningObjective_HyperparameterTuningObjectiveType_descriptor();
}
template <> struct is_proto_enum< ::flyteidl::plugins::sagemaker::HPOJobConfig_HyperparameterTuningStrategy> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::flyteidl::plugins::sagemaker::HPOJobConfig_HyperparameterTuningStrategy>() {
  return ::flyteidl::plugins::sagemaker::HPOJobConfig_HyperparameterTuningStrategy_descriptor();
}
template <> struct is_proto_enum< ::flyteidl::plugins::sagemaker::HPOJobConfig_TrainingJobEarlyStoppingType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::flyteidl::plugins::sagemaker::HPOJobConfig_TrainingJobEarlyStoppingType>() {
  return ::flyteidl::plugins::sagemaker::HPOJobConfig_TrainingJobEarlyStoppingType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_flyteidl_2fplugins_2fsagemaker_2fhpo_5fjob_2eproto
