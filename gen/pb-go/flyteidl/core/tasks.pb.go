// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flyteidl/core/tasks.proto

package core // import "github.com/lyft/flyteidl/gen/pb-go/flyteidl/core"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import duration "github.com/golang/protobuf/ptypes/duration"
import _struct "github.com/golang/protobuf/ptypes/struct"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Known resource names.
type Resources_ResourceName int32

const (
	Resources_UNKNOWN Resources_ResourceName = 0
	Resources_CPU     Resources_ResourceName = 1
	Resources_GPU     Resources_ResourceName = 2
	Resources_MEMORY  Resources_ResourceName = 3
	Resources_STORAGE Resources_ResourceName = 4
)

var Resources_ResourceName_name = map[int32]string{
	0: "UNKNOWN",
	1: "CPU",
	2: "GPU",
	3: "MEMORY",
	4: "STORAGE",
}
var Resources_ResourceName_value = map[string]int32{
	"UNKNOWN": 0,
	"CPU":     1,
	"GPU":     2,
	"MEMORY":  3,
	"STORAGE": 4,
}

func (x Resources_ResourceName) String() string {
	return proto.EnumName(Resources_ResourceName_name, int32(x))
}
func (Resources_ResourceName) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tasks_9dfdefea32720641, []int{0, 0}
}

type RuntimeMetadata_RuntimeType int32

const (
	RuntimeMetadata_OTHER     RuntimeMetadata_RuntimeType = 0
	RuntimeMetadata_FLYTE_SDK RuntimeMetadata_RuntimeType = 1
)

var RuntimeMetadata_RuntimeType_name = map[int32]string{
	0: "OTHER",
	1: "FLYTE_SDK",
}
var RuntimeMetadata_RuntimeType_value = map[string]int32{
	"OTHER":     0,
	"FLYTE_SDK": 1,
}

func (x RuntimeMetadata_RuntimeType) String() string {
	return proto.EnumName(RuntimeMetadata_RuntimeType_name, int32(x))
}
func (RuntimeMetadata_RuntimeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tasks_9dfdefea32720641, []int{1, 0}
}

// A customizable interface to convey resources requested for a container. This can be interpretted differently for different
// container engines.
type Resources struct {
	// The desired set of resources requested. ResourceNames must be unique within the list.
	Requests []*Resources_ResourceEntry `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	// Defines a set of bounds (e.g. min/max) within which the task can reliably run. ResourceNames must be unique
	// within the list.
	Limits               []*Resources_ResourceEntry `protobuf:"bytes,2,rep,name=limits,proto3" json:"limits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Resources) Reset()         { *m = Resources{} }
func (m *Resources) String() string { return proto.CompactTextString(m) }
func (*Resources) ProtoMessage()    {}
func (*Resources) Descriptor() ([]byte, []int) {
	return fileDescriptor_tasks_9dfdefea32720641, []int{0}
}
func (m *Resources) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resources.Unmarshal(m, b)
}
func (m *Resources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resources.Marshal(b, m, deterministic)
}
func (dst *Resources) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resources.Merge(dst, src)
}
func (m *Resources) XXX_Size() int {
	return xxx_messageInfo_Resources.Size(m)
}
func (m *Resources) XXX_DiscardUnknown() {
	xxx_messageInfo_Resources.DiscardUnknown(m)
}

var xxx_messageInfo_Resources proto.InternalMessageInfo

func (m *Resources) GetRequests() []*Resources_ResourceEntry {
	if m != nil {
		return m.Requests
	}
	return nil
}

func (m *Resources) GetLimits() []*Resources_ResourceEntry {
	if m != nil {
		return m.Limits
	}
	return nil
}

// Encapsulates a resource name and value.
type Resources_ResourceEntry struct {
	// Resource name.
	Name Resources_ResourceName `protobuf:"varint,1,opt,name=name,proto3,enum=flyteidl.core.Resources_ResourceName" json:"name,omitempty"`
	// Value must be a valid k8s quantity. See
	// https://github.com/kubernetes/apimachinery/blob/master/pkg/api/resource/quantity.go#L30-L80
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resources_ResourceEntry) Reset()         { *m = Resources_ResourceEntry{} }
func (m *Resources_ResourceEntry) String() string { return proto.CompactTextString(m) }
func (*Resources_ResourceEntry) ProtoMessage()    {}
func (*Resources_ResourceEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_tasks_9dfdefea32720641, []int{0, 0}
}
func (m *Resources_ResourceEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resources_ResourceEntry.Unmarshal(m, b)
}
func (m *Resources_ResourceEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resources_ResourceEntry.Marshal(b, m, deterministic)
}
func (dst *Resources_ResourceEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resources_ResourceEntry.Merge(dst, src)
}
func (m *Resources_ResourceEntry) XXX_Size() int {
	return xxx_messageInfo_Resources_ResourceEntry.Size(m)
}
func (m *Resources_ResourceEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_Resources_ResourceEntry.DiscardUnknown(m)
}

var xxx_messageInfo_Resources_ResourceEntry proto.InternalMessageInfo

func (m *Resources_ResourceEntry) GetName() Resources_ResourceName {
	if m != nil {
		return m.Name
	}
	return Resources_UNKNOWN
}

func (m *Resources_ResourceEntry) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Runtime information. This is losely defined to allow for extensibility.
type RuntimeMetadata struct {
	// Type of runtime.
	Type RuntimeMetadata_RuntimeType `protobuf:"varint,1,opt,name=type,proto3,enum=flyteidl.core.RuntimeMetadata_RuntimeType" json:"type,omitempty"`
	// Version of the runtime. All versions should be backward compatible. However, certain cases call for version
	// checks to ensure tighter validation or setting expectations.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// +optional It can be used to provide extra information about the runtime (e.g. python, golang... etc.).
	Flavor               string   `protobuf:"bytes,3,opt,name=flavor,proto3" json:"flavor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RuntimeMetadata) Reset()         { *m = RuntimeMetadata{} }
func (m *RuntimeMetadata) String() string { return proto.CompactTextString(m) }
func (*RuntimeMetadata) ProtoMessage()    {}
func (*RuntimeMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_tasks_9dfdefea32720641, []int{1}
}
func (m *RuntimeMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuntimeMetadata.Unmarshal(m, b)
}
func (m *RuntimeMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuntimeMetadata.Marshal(b, m, deterministic)
}
func (dst *RuntimeMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeMetadata.Merge(dst, src)
}
func (m *RuntimeMetadata) XXX_Size() int {
	return xxx_messageInfo_RuntimeMetadata.Size(m)
}
func (m *RuntimeMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeMetadata proto.InternalMessageInfo

func (m *RuntimeMetadata) GetType() RuntimeMetadata_RuntimeType {
	if m != nil {
		return m.Type
	}
	return RuntimeMetadata_OTHER
}

func (m *RuntimeMetadata) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *RuntimeMetadata) GetFlavor() string {
	if m != nil {
		return m.Flavor
	}
	return ""
}

// Retry strategy associated with an executable unit.
type RetryStrategy struct {
	// Number of retries. Retries will be consumed when the job fails with a recoverable error.
	// The number of retries must be less than or equals to 10.
	Retries              uint32   `protobuf:"varint,5,opt,name=retries,proto3" json:"retries,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetryStrategy) Reset()         { *m = RetryStrategy{} }
func (m *RetryStrategy) String() string { return proto.CompactTextString(m) }
func (*RetryStrategy) ProtoMessage()    {}
func (*RetryStrategy) Descriptor() ([]byte, []int) {
	return fileDescriptor_tasks_9dfdefea32720641, []int{2}
}
func (m *RetryStrategy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetryStrategy.Unmarshal(m, b)
}
func (m *RetryStrategy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetryStrategy.Marshal(b, m, deterministic)
}
func (dst *RetryStrategy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetryStrategy.Merge(dst, src)
}
func (m *RetryStrategy) XXX_Size() int {
	return xxx_messageInfo_RetryStrategy.Size(m)
}
func (m *RetryStrategy) XXX_DiscardUnknown() {
	xxx_messageInfo_RetryStrategy.DiscardUnknown(m)
}

var xxx_messageInfo_RetryStrategy proto.InternalMessageInfo

func (m *RetryStrategy) GetRetries() uint32 {
	if m != nil {
		return m.Retries
	}
	return 0
}

// A generic key value pair.
type KeyValuePair struct {
	// required.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// +optional.
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValuePair) Reset()         { *m = KeyValuePair{} }
func (m *KeyValuePair) String() string { return proto.CompactTextString(m) }
func (*KeyValuePair) ProtoMessage()    {}
func (*KeyValuePair) Descriptor() ([]byte, []int) {
	return fileDescriptor_tasks_9dfdefea32720641, []int{3}
}
func (m *KeyValuePair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValuePair.Unmarshal(m, b)
}
func (m *KeyValuePair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValuePair.Marshal(b, m, deterministic)
}
func (dst *KeyValuePair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValuePair.Merge(dst, src)
}
func (m *KeyValuePair) XXX_Size() int {
	return xxx_messageInfo_KeyValuePair.Size(m)
}
func (m *KeyValuePair) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValuePair.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValuePair proto.InternalMessageInfo

func (m *KeyValuePair) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyValuePair) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Task Metadata
type TaskMetadata struct {
	// Indicates whether the system should attempt to lookup this task's output to avoid duplication of work.
	Discoverable bool `protobuf:"varint,1,opt,name=discoverable,proto3" json:"discoverable,omitempty"`
	// Runtime information about the task.
	Runtime *RuntimeMetadata `protobuf:"bytes,2,opt,name=runtime,proto3" json:"runtime,omitempty"`
	// The overall timeout of a task including user-triggered retries.
	Timeout *duration.Duration `protobuf:"bytes,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Number of retries per task.
	Retries *RetryStrategy `protobuf:"bytes,5,opt,name=retries,proto3" json:"retries,omitempty"`
	// Indicates a logical version to apply to this task for the purpose of discovery.
	DiscoveryVersion string `protobuf:"bytes,6,opt,name=discovery_version,json=discoveryVersion,proto3" json:"discovery_version,omitempty"`
	// If set, this indicates that this task is deprecated.  This will enable owners of tasks to notify consumers
	// of the ending of support for a given task.
	DeprecatedErrorMessage string   `protobuf:"bytes,7,opt,name=deprecated_error_message,json=deprecatedErrorMessage,proto3" json:"deprecated_error_message,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *TaskMetadata) Reset()         { *m = TaskMetadata{} }
func (m *TaskMetadata) String() string { return proto.CompactTextString(m) }
func (*TaskMetadata) ProtoMessage()    {}
func (*TaskMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_tasks_9dfdefea32720641, []int{4}
}
func (m *TaskMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskMetadata.Unmarshal(m, b)
}
func (m *TaskMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskMetadata.Marshal(b, m, deterministic)
}
func (dst *TaskMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskMetadata.Merge(dst, src)
}
func (m *TaskMetadata) XXX_Size() int {
	return xxx_messageInfo_TaskMetadata.Size(m)
}
func (m *TaskMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_TaskMetadata proto.InternalMessageInfo

func (m *TaskMetadata) GetDiscoverable() bool {
	if m != nil {
		return m.Discoverable
	}
	return false
}

func (m *TaskMetadata) GetRuntime() *RuntimeMetadata {
	if m != nil {
		return m.Runtime
	}
	return nil
}

func (m *TaskMetadata) GetTimeout() *duration.Duration {
	if m != nil {
		return m.Timeout
	}
	return nil
}

func (m *TaskMetadata) GetRetries() *RetryStrategy {
	if m != nil {
		return m.Retries
	}
	return nil
}

func (m *TaskMetadata) GetDiscoveryVersion() string {
	if m != nil {
		return m.DiscoveryVersion
	}
	return ""
}

func (m *TaskMetadata) GetDeprecatedErrorMessage() string {
	if m != nil {
		return m.DeprecatedErrorMessage
	}
	return ""
}

// A Task structure that uniquely identifies a task in the system
// Tasks are registered as a first step in the system.
type TaskTemplate struct {
	// Auto generated taskId by the system. Task Id uniquely identifies this task globally.
	Id *Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// A predefined yet extensible Task type identifier. This can be used to customize any of the components. If no
	// extensions are provided in the system, Flyte will resolve the this task to its TaskCategory and default the
	// implementation registered for the TaskCategory.
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// Extra metadata about the task.
	Metadata *TaskMetadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// A strongly typed interface for the task. This enables others to use this task within a workflow and gauarantees
	// compile-time validation of the workflow to avoid costly runtime failures.
	Interface *TypedInterface `protobuf:"bytes,4,opt,name=interface,proto3" json:"interface,omitempty"`
	// Custom data about the task. This is extensible to allow various plugins in the system.
	Custom *_struct.Struct `protobuf:"bytes,5,opt,name=custom,proto3" json:"custom,omitempty"`
	// Known target types that the system will guarantee plugins for. Custom SDK plugins are allowed to set these if needed.
	// If no corresponding execution-layer plugins are found, the system will default to handling these using built-in
	// handlers.
	//
	// Types that are valid to be assigned to Target:
	//	*TaskTemplate_Container
	Target               isTaskTemplate_Target `protobuf_oneof:"target"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TaskTemplate) Reset()         { *m = TaskTemplate{} }
func (m *TaskTemplate) String() string { return proto.CompactTextString(m) }
func (*TaskTemplate) ProtoMessage()    {}
func (*TaskTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_tasks_9dfdefea32720641, []int{5}
}
func (m *TaskTemplate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskTemplate.Unmarshal(m, b)
}
func (m *TaskTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskTemplate.Marshal(b, m, deterministic)
}
func (dst *TaskTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskTemplate.Merge(dst, src)
}
func (m *TaskTemplate) XXX_Size() int {
	return xxx_messageInfo_TaskTemplate.Size(m)
}
func (m *TaskTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_TaskTemplate proto.InternalMessageInfo

func (m *TaskTemplate) GetId() *Identifier {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TaskTemplate) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TaskTemplate) GetMetadata() *TaskMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *TaskTemplate) GetInterface() *TypedInterface {
	if m != nil {
		return m.Interface
	}
	return nil
}

func (m *TaskTemplate) GetCustom() *_struct.Struct {
	if m != nil {
		return m.Custom
	}
	return nil
}

type isTaskTemplate_Target interface {
	isTaskTemplate_Target()
}

type TaskTemplate_Container struct {
	Container *Container `protobuf:"bytes,6,opt,name=container,proto3,oneof"`
}

func (*TaskTemplate_Container) isTaskTemplate_Target() {}

func (m *TaskTemplate) GetTarget() isTaskTemplate_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *TaskTemplate) GetContainer() *Container {
	if x, ok := m.GetTarget().(*TaskTemplate_Container); ok {
		return x.Container
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TaskTemplate) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TaskTemplate_OneofMarshaler, _TaskTemplate_OneofUnmarshaler, _TaskTemplate_OneofSizer, []interface{}{
		(*TaskTemplate_Container)(nil),
	}
}

func _TaskTemplate_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TaskTemplate)
	// target
	switch x := m.Target.(type) {
	case *TaskTemplate_Container:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Container); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TaskTemplate.Target has unexpected type %T", x)
	}
	return nil
}

func _TaskTemplate_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TaskTemplate)
	switch tag {
	case 6: // target.container
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Container)
		err := b.DecodeMessage(msg)
		m.Target = &TaskTemplate_Container{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TaskTemplate_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TaskTemplate)
	// target
	switch x := m.Target.(type) {
	case *TaskTemplate_Container:
		s := proto.Size(x.Container)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Defines port properties for a container.
type ContainerPort struct {
	// Number of port to expose on the pod's IP address.
	// This must be a valid port number, 0 < x < 65536.
	ContainerPort        uint32   `protobuf:"varint,1,opt,name=container_port,json=containerPort,proto3" json:"container_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerPort) Reset()         { *m = ContainerPort{} }
func (m *ContainerPort) String() string { return proto.CompactTextString(m) }
func (*ContainerPort) ProtoMessage()    {}
func (*ContainerPort) Descriptor() ([]byte, []int) {
	return fileDescriptor_tasks_9dfdefea32720641, []int{6}
}
func (m *ContainerPort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerPort.Unmarshal(m, b)
}
func (m *ContainerPort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerPort.Marshal(b, m, deterministic)
}
func (dst *ContainerPort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerPort.Merge(dst, src)
}
func (m *ContainerPort) XXX_Size() int {
	return xxx_messageInfo_ContainerPort.Size(m)
}
func (m *ContainerPort) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerPort.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerPort proto.InternalMessageInfo

func (m *ContainerPort) GetContainerPort() uint32 {
	if m != nil {
		return m.ContainerPort
	}
	return 0
}

type Container struct {
	// Container image url. Eg: docker/redis:latest
	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// Command to be executed, if not provided, the default entrypoint in the container image will be used.
	Command []string `protobuf:"bytes,2,rep,name=command,proto3" json:"command,omitempty"`
	// These will default to Flyte given paths. If provided, the system will not append known paths. If the task still
	// needs flyte's inputs and outputs path, add $(FLYTE_INPUT_FILE), $(FLYTE_OUTPUT_FILE) wherever makes sense and the
	// system will populate these before executing the container.
	Args []string `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
	// Container resources requirement as specified by the container engine.
	Resources *Resources `protobuf:"bytes,4,opt,name=resources,proto3" json:"resources,omitempty"`
	// Environment variables will be set as the container is starting up.
	Env []*KeyValuePair `protobuf:"bytes,5,rep,name=env,proto3" json:"env,omitempty"`
	// Allows extra configs to be available for the container.
	// TODO: elaborate on how configs will become available.
	Config []*KeyValuePair `protobuf:"bytes,6,rep,name=config,proto3" json:"config,omitempty"`
	// Ports to open in the container. This feature is not supported by all execution engines. (e.g. supported on K8s but
	// not supported on AWS Batch)
	Ports                []*ContainerPort `protobuf:"bytes,7,rep,name=ports,proto3" json:"ports,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Container) Reset()         { *m = Container{} }
func (m *Container) String() string { return proto.CompactTextString(m) }
func (*Container) ProtoMessage()    {}
func (*Container) Descriptor() ([]byte, []int) {
	return fileDescriptor_tasks_9dfdefea32720641, []int{7}
}
func (m *Container) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Container.Unmarshal(m, b)
}
func (m *Container) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Container.Marshal(b, m, deterministic)
}
func (dst *Container) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Container.Merge(dst, src)
}
func (m *Container) XXX_Size() int {
	return xxx_messageInfo_Container.Size(m)
}
func (m *Container) XXX_DiscardUnknown() {
	xxx_messageInfo_Container.DiscardUnknown(m)
}

var xxx_messageInfo_Container proto.InternalMessageInfo

func (m *Container) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Container) GetCommand() []string {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *Container) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *Container) GetResources() *Resources {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *Container) GetEnv() []*KeyValuePair {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *Container) GetConfig() []*KeyValuePair {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *Container) GetPorts() []*ContainerPort {
	if m != nil {
		return m.Ports
	}
	return nil
}

func init() {
	proto.RegisterType((*Resources)(nil), "flyteidl.core.Resources")
	proto.RegisterType((*Resources_ResourceEntry)(nil), "flyteidl.core.Resources.ResourceEntry")
	proto.RegisterType((*RuntimeMetadata)(nil), "flyteidl.core.RuntimeMetadata")
	proto.RegisterType((*RetryStrategy)(nil), "flyteidl.core.RetryStrategy")
	proto.RegisterType((*KeyValuePair)(nil), "flyteidl.core.KeyValuePair")
	proto.RegisterType((*TaskMetadata)(nil), "flyteidl.core.TaskMetadata")
	proto.RegisterType((*TaskTemplate)(nil), "flyteidl.core.TaskTemplate")
	proto.RegisterType((*ContainerPort)(nil), "flyteidl.core.ContainerPort")
	proto.RegisterType((*Container)(nil), "flyteidl.core.Container")
	proto.RegisterEnum("flyteidl.core.Resources_ResourceName", Resources_ResourceName_name, Resources_ResourceName_value)
	proto.RegisterEnum("flyteidl.core.RuntimeMetadata_RuntimeType", RuntimeMetadata_RuntimeType_name, RuntimeMetadata_RuntimeType_value)
}

func init() { proto.RegisterFile("flyteidl/core/tasks.proto", fileDescriptor_tasks_9dfdefea32720641) }

var fileDescriptor_tasks_9dfdefea32720641 = []byte{
	// 851 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0x6d, 0x6f, 0xe3, 0x44,
	0x10, 0x6e, 0x92, 0xd6, 0xa9, 0x27, 0xcd, 0x61, 0x56, 0xe8, 0xf0, 0x95, 0x52, 0x55, 0x96, 0x0e,
	0x7a, 0xa0, 0x8b, 0x51, 0x2a, 0x95, 0x22, 0xa4, 0x93, 0xe8, 0x5d, 0xee, 0x45, 0xa5, 0x2f, 0xda,
	0xa6, 0x87, 0x8e, 0x2f, 0x61, 0x63, 0x4f, 0xcc, 0xaa, 0xb6, 0x37, 0xac, 0xd7, 0x91, 0xfc, 0x6b,
	0xf8, 0x03, 0xfc, 0x00, 0xf8, 0xc6, 0x4f, 0x43, 0xbb, 0x7e, 0x69, 0x92, 0x53, 0x39, 0xdd, 0x27,
	0xef, 0xf8, 0x79, 0x66, 0x3c, 0xf3, 0xcc, 0xec, 0x18, 0x1e, 0xcd, 0xe2, 0x42, 0x21, 0x0f, 0x63,
	0x3f, 0x10, 0x12, 0x7d, 0xc5, 0xb2, 0xdb, 0x6c, 0x30, 0x97, 0x42, 0x09, 0xd2, 0xaf, 0xa1, 0x81,
	0x86, 0x76, 0xf7, 0x57, 0x99, 0x3c, 0xc4, 0x54, 0xf1, 0x19, 0x47, 0x59, 0xd2, 0x77, 0xd7, 0x23,
	0x15, 0x73, 0xac, 0x22, 0xed, 0xee, 0x47, 0x42, 0x44, 0x31, 0xfa, 0xc6, 0x9a, 0xe6, 0x33, 0x3f,
	0xcc, 0x25, 0x53, 0x5c, 0xa4, 0x15, 0xbe, 0xb7, 0x8e, 0x67, 0x4a, 0xe6, 0x81, 0x2a, 0x51, 0xef,
	0x9f, 0x36, 0xd8, 0x14, 0x33, 0x91, 0xcb, 0x00, 0x33, 0x72, 0x0a, 0xdb, 0x12, 0xff, 0xc8, 0x31,
	0x53, 0x99, 0xdb, 0x3a, 0xe8, 0x1c, 0xf6, 0x86, 0x5f, 0x0d, 0x56, 0x12, 0x1d, 0x34, 0xdc, 0xe6,
	0x34, 0x4a, 0x95, 0x2c, 0x68, 0xe3, 0x47, 0x9e, 0x81, 0x15, 0xf3, 0x84, 0xab, 0xcc, 0x6d, 0x7f,
	0x54, 0x84, 0xca, 0x6b, 0xf7, 0x37, 0xe8, 0xaf, 0x00, 0xe4, 0x07, 0xd8, 0x4c, 0x59, 0x82, 0x6e,
	0xeb, 0xa0, 0x75, 0xf8, 0x60, 0xf8, 0xf8, 0x83, 0xe1, 0x2e, 0x58, 0x82, 0xd4, 0xb8, 0x90, 0xcf,
	0x60, 0x6b, 0xc1, 0xe2, 0x1c, 0xdd, 0xf6, 0x41, 0xeb, 0xd0, 0xa6, 0xa5, 0xe1, 0xbd, 0x84, 0x9d,
	0x65, 0x2e, 0xe9, 0x41, 0xf7, 0xe6, 0xe2, 0xec, 0xe2, 0xf2, 0x97, 0x0b, 0x67, 0x83, 0x74, 0xa1,
	0xf3, 0xfc, 0xea, 0xc6, 0x69, 0xe9, 0xc3, 0xab, 0xab, 0x1b, 0xa7, 0x4d, 0x00, 0xac, 0xf3, 0xd1,
	0xf9, 0x25, 0x7d, 0xe7, 0x74, 0x34, 0xf5, 0x7a, 0x7c, 0x49, 0x7f, 0x7a, 0x35, 0x72, 0x36, 0xbd,
	0xbf, 0x5a, 0xf0, 0x09, 0xcd, 0x53, 0xc5, 0x13, 0x3c, 0x47, 0xc5, 0x42, 0xa6, 0x18, 0x79, 0x06,
	0x9b, 0xba, 0x39, 0x55, 0xb2, 0xdf, 0xac, 0x27, 0xbb, 0xca, 0xae, 0xed, 0x71, 0x31, 0x47, 0x6a,
	0xfc, 0x88, 0x0b, 0xdd, 0x05, 0xca, 0x8c, 0x8b, 0xb4, 0xca, 0xb9, 0x36, 0xc9, 0x43, 0xb0, 0x66,
	0x31, 0x5b, 0x08, 0xe9, 0x76, 0x0c, 0x50, 0x59, 0xde, 0xd7, 0xd0, 0x5b, 0x0a, 0x43, 0x6c, 0xd8,
	0xba, 0x1c, 0xbf, 0x1e, 0x51, 0x67, 0x83, 0xf4, 0xc1, 0x7e, 0xf9, 0xf3, 0xbb, 0xf1, 0x68, 0x72,
	0xfd, 0xe2, 0xcc, 0x69, 0x79, 0x4f, 0xb4, 0xb0, 0x4a, 0x16, 0xd7, 0x4a, 0x32, 0x85, 0x51, 0xa1,
	0xbf, 0x25, 0x51, 0x49, 0x8e, 0x99, 0xbb, 0x75, 0xd0, 0x3a, 0xec, 0xd3, 0xda, 0xf4, 0x8e, 0x61,
	0xe7, 0x0c, 0x8b, 0xb7, 0x5a, 0xad, 0x2b, 0xc6, 0x25, 0x71, 0xa0, 0x73, 0x8b, 0x85, 0x29, 0xca,
	0xa6, 0xfa, 0x78, 0x8f, 0xb2, 0xff, 0xb6, 0x61, 0x67, 0xcc, 0xb2, 0xdb, 0x46, 0x0e, 0x0f, 0x76,
	0x42, 0x9e, 0x05, 0x62, 0x81, 0x92, 0x4d, 0xe3, 0x52, 0x96, 0x6d, 0xba, 0xf2, 0x8e, 0x9c, 0x40,
	0x57, 0x96, 0x05, 0x98, 0x60, 0xbd, 0xe1, 0xfe, 0xff, 0xab, 0x46, 0x6b, 0x3a, 0x39, 0x82, 0xae,
	0x7e, 0x8a, 0x5c, 0xb9, 0x9b, 0xc6, 0xf3, 0xd1, 0xa0, 0x1c, 0xf6, 0x41, 0x3d, 0xec, 0x83, 0x17,
	0xd5, 0x65, 0xa0, 0x35, 0x93, 0x1c, 0xaf, 0x56, 0xdd, 0x1b, 0xee, 0xbd, 0x37, 0x51, 0x4b, 0x22,
	0x35, 0x9a, 0x90, 0x6f, 0xe1, 0xd3, 0x3a, 0xed, 0x62, 0x52, 0xf7, 0xc8, 0x32, 0xd5, 0x3b, 0x0d,
	0xf0, 0xb6, 0x6a, 0xd6, 0x09, 0xb8, 0x21, 0xce, 0x25, 0x06, 0x4c, 0x61, 0x38, 0x41, 0x29, 0x85,
	0x9c, 0x24, 0x98, 0x65, 0x2c, 0x42, 0xb7, 0x6b, 0x7c, 0x1e, 0xde, 0xe1, 0x23, 0x0d, 0x9f, 0x97,
	0xa8, 0xf7, 0x77, 0x25, 0xe1, 0x18, 0x93, 0x79, 0xcc, 0x14, 0x92, 0x27, 0xd0, 0xe6, 0xa1, 0x11,
	0x4e, 0xd7, 0xb7, 0x9a, 0xea, 0x9b, 0x66, 0x4f, 0xd0, 0x36, 0x0f, 0x09, 0xa9, 0x86, 0xaf, 0xec,
	0x49, 0x39, 0x50, 0xdf, 0xc3, 0x76, 0x52, 0x09, 0x67, 0x06, 0xa7, 0x37, 0xfc, 0x62, 0x2d, 0xc8,
	0x72, 0xc3, 0x68, 0x43, 0x26, 0x3f, 0x82, 0xcd, 0x53, 0x85, 0x72, 0xc6, 0x02, 0xac, 0xe4, 0xfd,
	0x72, 0xdd, 0xb3, 0x98, 0x63, 0xf8, 0xa6, 0x26, 0xd1, 0x3b, 0x3e, 0xf1, 0xc1, 0x0a, 0xf2, 0x4c,
	0x89, 0xa4, 0xd2, 0xf8, 0xf3, 0xf7, 0x1a, 0x73, 0x6d, 0xb6, 0x10, 0xad, 0x68, 0xe4, 0x04, 0xec,
	0x40, 0xa4, 0x8a, 0xf1, 0x14, 0xa5, 0x51, 0xb5, 0x37, 0x74, 0xd7, 0xbe, 0xf6, 0xbc, 0xc6, 0x5f,
	0x6f, 0xd0, 0x3b, 0xf2, 0xe9, 0x36, 0x58, 0x8a, 0xc9, 0x08, 0x95, 0x77, 0x0c, 0xfd, 0x86, 0x73,
	0x25, 0xa4, 0x22, 0x8f, 0xe1, 0x41, 0xc3, 0x9b, 0xcc, 0x85, 0x54, 0x46, 0xc6, 0x3e, 0xed, 0x07,
	0xcb, 0x34, 0xef, 0xcf, 0x36, 0xd8, 0x8d, 0xa3, 0x9e, 0x6c, 0x9e, 0xe8, 0x3e, 0x95, 0xd3, 0x5e,
	0x1a, 0xfa, 0xae, 0x04, 0x22, 0x49, 0x58, 0x1a, 0x9a, 0xb5, 0x66, 0xd3, 0xda, 0xd4, 0xa2, 0x33,
	0x19, 0x65, 0x6e, 0xc7, 0xbc, 0x36, 0x67, 0x72, 0x0c, 0xb6, 0xac, 0xf7, 0x52, 0xa5, 0x9d, 0x7b,
	0xdf, 0xde, 0xa2, 0x77, 0x54, 0xf2, 0x14, 0x3a, 0x98, 0x2e, 0xdc, 0x2d, 0xb3, 0x38, 0xd7, 0xfb,
	0xb4, 0x7c, 0x23, 0xa9, 0xe6, 0x91, 0x23, 0xb0, 0x02, 0x91, 0xce, 0x78, 0xe4, 0x5a, 0x1f, 0xf6,
	0xa8, 0xa8, 0x64, 0x08, 0x5b, 0x5a, 0x8a, 0xcc, 0xed, 0x1a, 0x9f, 0xbd, 0xfb, 0x54, 0xd6, 0xd2,
	0xd0, 0x92, 0x7a, 0x3a, 0xfc, 0xf5, 0xbb, 0x88, 0xab, 0xdf, 0xf3, 0xe9, 0x20, 0x10, 0x89, 0x1f,
	0x17, 0x33, 0xe5, 0x37, 0x3f, 0xa4, 0x08, 0x53, 0x7f, 0x3e, 0x7d, 0x1a, 0x09, 0x7f, 0xe5, 0x1f,
	0x35, 0xb5, 0x4c, 0xab, 0x8f, 0xfe, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x26, 0x22, 0x72, 0x97, 0x05,
	0x07, 0x00, 0x00,
}
