// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/service/admin.proto

#include "flyteidl/service/admin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace flyteidl {
namespace service {
}  // namespace service
}  // namespace flyteidl
void InitDefaults_flyteidl_2fservice_2fadmin_2eproto() {
}

constexpr ::google::protobuf::Metadata* file_level_metadata_flyteidl_2fservice_2fadmin_2eproto = nullptr;
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_flyteidl_2fservice_2fadmin_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fservice_2fadmin_2eproto = nullptr;
const ::google::protobuf::uint32 TableStruct_flyteidl_2fservice_2fadmin_2eproto::offsets[1] = {};
static constexpr ::google::protobuf::internal::MigrationSchema* schemas = nullptr;
static constexpr ::google::protobuf::Message* const* file_default_instances = nullptr;

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_flyteidl_2fservice_2fadmin_2eproto = {
  {}, AddDescriptors_flyteidl_2fservice_2fadmin_2eproto, "flyteidl/service/admin.proto", schemas,
  file_default_instances, TableStruct_flyteidl_2fservice_2fadmin_2eproto::offsets,
  file_level_metadata_flyteidl_2fservice_2fadmin_2eproto, 0, file_level_enum_descriptors_flyteidl_2fservice_2fadmin_2eproto, file_level_service_descriptors_flyteidl_2fservice_2fadmin_2eproto,
};

const char descriptor_table_protodef_flyteidl_2fservice_2fadmin_2eproto[] =
  "\n\034flyteidl/service/admin.proto\022\020flyteidl"
  ".service\032\034google/api/annotations.proto\032\034"
  "flyteidl/admin/project.proto\032.flyteidl/a"
  "dmin/project_domain_attributes.proto\032\031fl"
  "yteidl/admin/task.proto\032\035flyteidl/admin/"
  "workflow.proto\032(flyteidl/admin/workflow_"
  "attributes.proto\032 flyteidl/admin/launch_"
  "plan.proto\032\032flyteidl/admin/event.proto\032\036"
  "flyteidl/admin/execution.proto\032#flyteidl"
  "/admin/node_execution.proto\032#flyteidl/ad"
  "min/task_execution.proto\032\033flyteidl/admin"
  "/common.proto\032,protoc-gen-swagger/option"
  "s/annotations.proto2\365\\\n\014AdminService\022\305\002\n"
  "\nCreateTask\022!.flyteidl.admin.TaskCreateR"
  "equest\032\".flyteidl.admin.TaskCreateRespon"
  "se\"\357\001\202\323\344\223\002\022\"\r/api/v1/tasks:\001*\222A\323\001\032&Creat"
  "e and register a task definition.JB\n\003400"
  "\022;\n9Returned for bad request that may ha"
  "ve failed validation.Je\n\003409\022^\n\\Returned"
  " for a request that references an identi"
  "cal entity that has already been registe"
  "red.\022\262\001\n\007GetTask\022 .flyteidl.admin.Object"
  "GetRequest\032\024.flyteidl.admin.Task\"o\202\323\344\223\002\?"
  "\022=/api/v1/tasks/{id.project}/{id.domain}"
  "/{id.name}/{id.version}\222A\'\032%Retrieve an "
  "existing task definition.\022\336\001\n\013ListTaskId"
  "s\0220.flyteidl.admin.NamedEntityIdentifier"
  "ListRequest\032).flyteidl.admin.NamedEntity"
  "IdentifierList\"r\202\323\344\223\002%\022#/api/v1/task_ids"
  "/{project}/{domain}\222AD\032BFetch existing t"
  "ask definition identifiers matching inpu"
  "t filters.\022\353\001\n\tListTasks\022#.flyteidl.admi"
  "n.ResourceListRequest\032\030.flyteidl.admin.T"
  "askList\"\236\001\202\323\344\223\002\\\0220/api/v1/tasks/{id.proj"
  "ect}/{id.domain}/{id.name}Z(\022&/api/v1/ta"
  "sks/{id.project}/{id.domain}\222A9\0327Fetch e"
  "xisting task definitions matching input "
  "filters.\022\331\002\n\016CreateWorkflow\022%.flyteidl.a"
  "dmin.WorkflowCreateRequest\032&.flyteidl.ad"
  "min.WorkflowCreateResponse\"\367\001\202\323\344\223\002\026\"\021/ap"
  "i/v1/workflows:\001*\222A\327\001\032*Create and regist"
  "er a workflow definition.JB\n\003400\022;\n9Retu"
  "rned for bad request that may have faile"
  "d validation.Je\n\003409\022^\n\\Returned for a r"
  "equest that references an identical enti"
  "ty that has already been registered.\022\302\001\n"
  "\013GetWorkflow\022 .flyteidl.admin.ObjectGetR"
  "equest\032\030.flyteidl.admin.Workflow\"w\202\323\344\223\002C"
  "\022A/api/v1/workflows/{id.project}/{id.dom"
  "ain}/{id.name}/{id.version}\222A+\032)Retrieve"
  " an existing workflow definition.\022\355\001\n\017Li"
  "stWorkflowIds\0220.flyteidl.admin.NamedEnti"
  "tyIdentifierListRequest\032).flyteidl.admin"
  ".NamedEntityIdentifierList\"}\202\323\344\223\002)\022\'/api"
  "/v1/workflow_ids/{project}/{domain}\222AK\032I"
  "Fetch an existing workflow definition id"
  "entifiers matching input filters.\022\377\001\n\rLi"
  "stWorkflows\022#.flyteidl.admin.ResourceLis"
  "tRequest\032\034.flyteidl.admin.WorkflowList\"\252"
  "\001\202\323\344\223\002d\0224/api/v1/workflows/{id.project}/"
  "{id.domain}/{id.name}Z,\022*/api/v1/workflo"
  "ws/{id.project}/{id.domain}\222A=\032;Fetch ex"
  "isting workflow definitions matching inp"
  "ut filters.\022\345\002\n\020CreateLaunchPlan\022\'.flyte"
  "idl.admin.LaunchPlanCreateRequest\032(.flyt"
  "eidl.admin.LaunchPlanCreateResponse\"\375\001\202\323"
  "\344\223\002\031\"\024/api/v1/launch_plans:\001*\222A\332\001\032-Creat"
  "e and register a launch plan definition."
  "JB\n\003400\022;\n9Returned for bad request that"
  " may have failed validation.Je\n\003409\022^\n\\R"
  "eturned for a request that references an"
  " identical entity that has already been "
  "registered.\022\314\001\n\rGetLaunchPlan\022 .flyteidl"
  ".admin.ObjectGetRequest\032\032.flyteidl.admin"
  ".LaunchPlan\"}\202\323\344\223\002F\022D/api/v1/launch_plan"
  "s/{id.project}/{id.domain}/{id.name}/{id"
  ".version}\222A.\032,Retrieve an existing launc"
  "h plan definition.\022\363\001\n\023GetActiveLaunchPl"
  "an\022\'.flyteidl.admin.ActiveLaunchPlanRequ"
  "est\032\032.flyteidl.admin.LaunchPlan\"\226\001\202\323\344\223\002@"
  "\022>/api/v1/active_launch_plans/{id.projec"
  "t}/{id.domain}/{id.name}\222AM\032KRetrieve th"
  "e active launch plan version specified b"
  "y input request filters.\022\353\001\n\025ListActiveL"
  "aunchPlans\022+.flyteidl.admin.ActiveLaunch"
  "PlanListRequest\032\036.flyteidl.admin.LaunchP"
  "lanList\"\204\001\202\323\344\223\0020\022./api/v1/active_launch_"
  "plans/{project}/{domain}\222AK\032IFetch the a"
  "ctive launch plan versions specified by "
  "input request filters.\022\363\001\n\021ListLaunchPla"
  "nIds\0220.flyteidl.admin.NamedEntityIdentif"
  "ierListRequest\032).flyteidl.admin.NamedEnt"
  "ityIdentifierList\"\200\001\202\323\344\223\002,\022*/api/v1/laun"
  "ch_plan_ids/{project}/{domain}\222AK\032IFetch"
  " existing launch plan definition identif"
  "iers matching input filters.\022\214\002\n\017ListLau"
  "nchPlans\022#.flyteidl.admin.ResourceListRe"
  "quest\032\036.flyteidl.admin.LaunchPlanList\"\263\001"
  "\202\323\344\223\002j\0227/api/v1/launch_plans/{id.project"
  "}/{id.domain}/{id.name}Z/\022-/api/v1/launc"
  "h_plans/{id.project}/{id.domain}\222A@\032>Fet"
  "ch existing launch plan definitions matc"
  "hing input filters.\022\300\006\n\020UpdateLaunchPlan"
  "\022\'.flyteidl.admin.LaunchPlanUpdateReques"
  "t\032(.flyteidl.admin.LaunchPlanUpdateRespo"
  "nse\"\330\005\202\323\344\223\002I\032D/api/v1/launch_plans/{id.p"
  "roject}/{id.domain}/{id.name}/{id.versio"
  "n}:\001*\222A\205\005\032\202\005Update the status of an exis"
  "ting launch plan definition. At most one"
  " launch plan version for a given {projec"
  "t, domain, name} can be active at a time"
  ". If this call sets a launch plan to act"
  "ive and existing version is already acti"
  "ve, the result of this call will be that"
  " the formerly active launch plan will be"
  " made inactive and specified launch plan"
  " in this request will be made active. In"
  " the event that the formerly active laun"
  "ch plan had a schedule associated it wit"
  "h it, this schedule will be disabled. If"
  " the reference launch plan in this reque"
  "st is being set to active and has a sche"
  "dule associated with it, the schedule wi"
  "ll be enabled.\022\242\001\n\017CreateExecution\022&.fly"
  "teidl.admin.ExecutionCreateRequest\032\'.fly"
  "teidl.admin.ExecutionCreateResponse\">\202\323\344"
  "\223\002\027\"\022/api/v1/executions:\001*\222A\036\032\034Create a "
  "workflow execution.\022\261\001\n\021RelaunchExecutio"
  "n\022(.flyteidl.admin.ExecutionRelaunchRequ"
  "est\032\'.flyteidl.admin.ExecutionCreateResp"
  "onse\"I\202\323\344\223\002 \"\033/api/v1/executions/relaunc"
  "h:\001*\222A \032\036Relaunch a workflow execution.\022"
  "\302\001\n\014GetExecution\022+.flyteidl.admin.Workfl"
  "owExecutionGetRequest\032\031.flyteidl.admin.E"
  "xecution\"j\202\323\344\223\0027\0225/api/v1/executions/{id"
  ".project}/{id.domain}/{id.name}\222A*\032(Retr"
  "ieve an existing workflow execution.\022\202\002\n"
  "\020GetExecutionData\022/.flyteidl.admin.Workf"
  "lowExecutionGetDataRequest\0320.flyteidl.ad"
  "min.WorkflowExecutionGetDataResponse\"\212\001\202"
  "\323\344\223\002<\022:/api/v1/data/executions/{id.proje"
  "ct}/{id.domain}/{id.name}\222AE\032CRetrieve i"
  "nput and output data from an existing wo"
  "rkflow execution.\022\310\001\n\016ListExecutions\022#.f"
  "lyteidl.admin.ResourceListRequest\032\035.flyt"
  "eidl.admin.ExecutionList\"r\202\323\344\223\002-\022+/api/v"
  "1/executions/{id.project}/{id.domain}\222A<"
  "\032:Fetch existing workflow executions mat"
  "ching input filters.\022\364\001\n\022TerminateExecut"
  "ion\022).flyteidl.admin.ExecutionTerminateR"
  "equest\032*.flyteidl.admin.ExecutionTermina"
  "teResponse\"\206\001\202\323\344\223\002:*5/api/v1/executions/"
  "{id.project}/{id.domain}/{id.name}:\001*\222AC"
  "\032ATerminate the active workflow executio"
  "n specified in the request.\022\374\001\n\020GetNodeE"
  "xecution\022\'.flyteidl.admin.NodeExecutionG"
  "etRequest\032\035.flyteidl.admin.NodeExecution"
  "\"\237\001\202\323\344\223\002p\022n/api/v1/node_executions/{id.e"
  "xecution_id.project}/{id.execution_id.do"
  "main}/{id.execution_id.name}/{id.node_id"
  "}\222A&\032$Retrieve an existing node executio"
  "n.\022\232\002\n\022ListNodeExecutions\022(.flyteidl.adm"
  "in.NodeExecutionListRequest\032!.flyteidl.a"
  "dmin.NodeExecutionList\"\266\001\202\323\344\223\002u\022s/api/v1"
  "/node_executions/{workflow_execution_id."
  "project}/{workflow_execution_id.domain}/"
  "{workflow_execution_id.name}\222A8\0326Fetch e"
  "xisting node executions matching input f"
  "ilters.\022\357\004\n\031ListNodeExecutionsForTask\022/."
  "flyteidl.admin.NodeExecutionForTaskListR"
  "equest\032!.flyteidl.admin.NodeExecutionLis"
  "t\"\375\003\202\323\344\223\002\254\003\022\251\003/api/v1/children/task_exec"
  "utions/{task_execution_id.node_execution"
  "_id.execution_id.project}/{task_executio"
  "n_id.node_execution_id.execution_id.doma"
  "in}/{task_execution_id.node_execution_id"
  ".execution_id.name}/{task_execution_id.n"
  "ode_execution_id.node_id}/{task_executio"
  "n_id.task_id.project}/{task_execution_id"
  ".task_id.domain}/{task_execution_id.task"
  "_id.name}/{task_execution_id.task_id.ver"
  "sion}/{task_execution_id.retry_attempt}\222"
  "AG\032EFetch child node executions launched"
  " by the specified task execution.\022\263\002\n\024Ge"
  "tNodeExecutionData\022+.flyteidl.admin.Node"
  "ExecutionGetDataRequest\032,.flyteidl.admin"
  ".NodeExecutionGetDataResponse\"\277\001\202\323\344\223\002u\022s"
  "/api/v1/data/node_executions/{id.executi"
  "on_id.project}/{id.execution_id.domain}/"
  "{id.execution_id.name}/{id.node_id}\222AA\032\?"
  "Retrieve input and output data from an e"
  "xisting node execution.\022\227\001\n\017RegisterProj"
  "ect\022&.flyteidl.admin.ProjectRegisterRequ"
  "est\032\'.flyteidl.admin.ProjectRegisterResp"
  "onse\"3\202\323\344\223\002\025\"\020/api/v1/projects:\001*\222A\025\032\023Re"
  "gister a project.\022\205\001\n\014ListProjects\022\".fly"
  "teidl.admin.ProjectListRequest\032\030.flyteid"
  "l.admin.Projects\"7\202\323\344\223\002\022\022\020/api/v1/projec"
  "ts\222A\034\032\032Fetch registered projects.\022\335\001\n\023Cr"
  "eateWorkflowEvent\022-.flyteidl.admin.Workf"
  "lowExecutionEventRequest\032..flyteidl.admi"
  "n.WorkflowExecutionEventResponse\"g\202\323\344\223\002\035"
  "\"\030/api/v1/events/workflows:\001*\222AA\032\?Create"
  " a workflow execution event recording a "
  "phase transition.\022\311\001\n\017CreateNodeEvent\022)."
  "flyteidl.admin.NodeExecutionEventRequest"
  "\032*.flyteidl.admin.NodeExecutionEventResp"
  "onse\"_\202\323\344\223\002\031\"\024/api/v1/events/nodes:\001*\222A="
  "\032;Create a node execution event recordin"
  "g a phase transition.\022\311\001\n\017CreateTaskEven"
  "t\022).flyteidl.admin.TaskExecutionEventReq"
  "uest\032*.flyteidl.admin.TaskExecutionEvent"
  "Response\"_\202\323\344\223\002\031\"\024/api/v1/events/tasks:\001"
  "*\222A=\032;Create a task execution event reco"
  "rding a phase transition.\022\251\003\n\020GetTaskExe"
  "cution\022\'.flyteidl.admin.TaskExecutionGet"
  "Request\032\035.flyteidl.admin.TaskExecution\"\314"
  "\002\202\323\344\223\002\234\002\022\231\002/api/v1/task_executions/{id.n"
  "ode_execution_id.execution_id.project}/{"
  "id.node_execution_id.execution_id.domain"
  "}/{id.node_execution_id.execution_id.nam"
  "e}/{id.node_execution_id.node_id}/{id.ta"
  "sk_id.project}/{id.task_id.domain}/{id.t"
  "ask_id.name}/{id.task_id.version}/{id.re"
  "try_attempt}\222A&\032$Retrieve an existing ta"
  "sk execution.\022\323\002\n\022ListTaskExecutions\022(.f"
  "lyteidl.admin.TaskExecutionListRequest\032!"
  ".flyteidl.admin.TaskExecutionList\"\357\001\202\323\344\223"
  "\002\255\001\022\252\001/api/v1/task_executions/{node_exec"
  "ution_id.execution_id.project}/{node_exe"
  "cution_id.execution_id.domain}/{node_exe"
  "cution_id.execution_id.name}/{node_execu"
  "tion_id.node_id}\222A8\0326Fetch existing task"
  " executions matching input filters.\022\340\003\n\024"
  "GetTaskExecutionData\022+.flyteidl.admin.Ta"
  "skExecutionGetDataRequest\032,.flyteidl.adm"
  "in.TaskExecutionGetDataResponse\"\354\002\202\323\344\223\002\241"
  "\002\022\236\002/api/v1/data/task_executions/{id.nod"
  "e_execution_id.execution_id.project}/{id"
  ".node_execution_id.execution_id.domain}/"
  "{id.node_execution_id.execution_id.name}"
  "/{id.node_execution_id.node_id}/{id.task"
  "_id.project}/{id.task_id.domain}/{id.tas"
  "k_id.name}/{id.task_id.version}/{id.retr"
  "y_attempt}\222AA\032\?Retrieve input and output"
  " data from an existing task execution.\022\277"
  "\002\n\035UpdateProjectDomainAttributes\0224.flyte"
  "idl.admin.ProjectDomainAttributesUpdateR"
  "equest\0325.flyteidl.admin.ProjectDomainAtt"
  "ributesUpdateResponse\"\260\001\202\323\344\223\002O\032J/api/v1/"
  "project_domain_attributes/{attributes.pr"
  "oject}/{attributes.domain}:\001*\222AX\032VUpdate"
  " the customized resource attributes asso"
  "ciated with a project-domain combination"
  "\022\237\002\n\032GetProjectDomainAttributes\0221.flytei"
  "dl.admin.ProjectDomainAttributesGetReque"
  "st\0322.flyteidl.admin.ProjectDomainAttribu"
  "tesGetResponse\"\231\001\202\323\344\223\0026\0224/api/v1/project"
  "_domain_attributes/{project}/{domain}\222AZ"
  "\032XRetrieve the customized resource attri"
  "butes associated with a project-domain c"
  "ombination\022\251\002\n\035DeleteProjectDomainAttrib"
  "utes\0224.flyteidl.admin.ProjectDomainAttri"
  "butesDeleteRequest\0325.flyteidl.admin.Proj"
  "ectDomainAttributesDeleteResponse\"\232\001\202\323\344\223"
  "\0029*4/api/v1/project_domain_attributes/{p"
  "roject}/{domain}:\001*\222AX\032VDelete the custo"
  "mized resource attributes associated wit"
  "h a project-domain combination\022\316\002\n\030Updat"
  "eWorkflowAttributes\022/.flyteidl.admin.Wor"
  "kflowAttributesUpdateRequest\0320.flyteidl."
  "admin.WorkflowAttributesUpdateResponse\"\316"
  "\001\202\323\344\223\002_\032Z/api/v1/workflow_attributes/{at"
  "tributes.project}/{attributes.domain}/{a"
  "ttributes.workflow}:\001*\222Af\032dUpdate the cu"
  "stomized resource attributes associated "
  "with a project, domain and workflow comb"
  "ination\022\243\002\n\025GetWorkflowAttributes\022,.flyt"
  "eidl.admin.WorkflowAttributesGetRequest\032"
  "-.flyteidl.admin.WorkflowAttributesGetRe"
  "sponse\"\254\001\202\323\344\223\002;\0229/api/v1/workflow_attrib"
  "utes/{project}/{domain}/{workflow}\222Ah\032fR"
  "etrieve the customized resource attribut"
  "es associated with a project, domain and"
  " workflow combination\022\255\002\n\030DeleteWorkflow"
  "Attributes\022/.flyteidl.admin.WorkflowAttr"
  "ibutesDeleteRequest\0320.flyteidl.admin.Wor"
  "kflowAttributesDeleteResponse\"\255\001\202\323\344\223\002>*9"
  "/api/v1/workflow_attributes/{project}/{d"
  "omain}/{workflow}:\001*\222Af\032dDelete the cust"
  "omized resource attributes associated wi"
  "th a project, domain and workflow combin"
  "ation\022\200\002\n\021ListNamedEntities\022&.flyteidl.a"
  "dmin.NamedEntityListRequest\032\037.flyteidl.a"
  "dmin.NamedEntityList\"\241\001\202\323\344\223\002;\0229/api/v1/n"
  "amed_entities/{resource_type}/{project}/"
  "{domain}\222A]\032[Retrieve a list of NamedEnt"
  "ity objects sharing a common resource ty"
  "pe, project, and domain.\022\312\001\n\016GetNamedEnt"
  "ity\022%.flyteidl.admin.NamedEntityGetReque"
  "st\032\033.flyteidl.admin.NamedEntity\"t\202\323\344\223\002K\022"
  "I/api/v1/named_entities/{resource_type}/"
  "{id.project}/{id.domain}/{id.name}\222A \032\036R"
  "etrieve a NamedEntity object.\022\363\001\n\021Update"
  "NamedEntity\022(.flyteidl.admin.NamedEntity"
  "UpdateRequest\032).flyteidl.admin.NamedEnti"
  "tyUpdateResponse\"\210\001\202\323\344\223\002N\032I/api/v1/named"
  "_entities/{resource_type}/{id.project}/{"
  "id.domain}/{id.name}:\001*\222A1\032/Update the f"
  "ields associated with a NamedEntityB5Z3g"
  "ithub.com/lyft/flyteidl/gen/pb-go/flytei"
  "dl/serviceb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_flyteidl_2fservice_2fadmin_2eproto = {
  false, InitDefaults_flyteidl_2fservice_2fadmin_2eproto, 
  descriptor_table_protodef_flyteidl_2fservice_2fadmin_2eproto,
  "flyteidl/service/admin.proto", &assign_descriptors_table_flyteidl_2fservice_2fadmin_2eproto, 12458,
};

void AddDescriptors_flyteidl_2fservice_2fadmin_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[13] =
  {
    ::AddDescriptors_google_2fapi_2fannotations_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fproject_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2ftask_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fworkflow_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fworkflow_5fattributes_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2flaunch_5fplan_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fevent_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fexecution_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fnode_5fexecution_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2ftask_5fexecution_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fcommon_2eproto,
    ::AddDescriptors_protoc_2dgen_2dswagger_2foptions_2fannotations_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_flyteidl_2fservice_2fadmin_2eproto, deps, 13);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_flyteidl_2fservice_2fadmin_2eproto = []() { AddDescriptors_flyteidl_2fservice_2fadmin_2eproto(); return true; }();
namespace flyteidl {
namespace service {

// @@protoc_insertion_point(namespace_scope)
}  // namespace service
}  // namespace flyteidl
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
