// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flyteidl/core/primitives.proto

package core // import "github.com/lyft/flyteidl/gen/pb-go/flyteidl/core"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import duration "github.com/golang/protobuf/ptypes/duration"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Primitive Types
type Primitive struct {
	// Defines one of simple primitive types. These types will get translated into different programming languages as
	// described in https://developers.google.com/protocol-buffers/docs/proto#scalar.
	//
	// Types that are valid to be assigned to Value:
	//	*Primitive_Integer
	//	*Primitive_FloatValue
	//	*Primitive_StringValue
	//	*Primitive_Boolean
	//	*Primitive_Datetime
	//	*Primitive_Duration
	Value                isPrimitive_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Primitive) Reset()         { *m = Primitive{} }
func (m *Primitive) String() string { return proto.CompactTextString(m) }
func (*Primitive) ProtoMessage()    {}
func (*Primitive) Descriptor() ([]byte, []int) {
	return fileDescriptor_primitives_90b7f8f55be9faeb, []int{0}
}
func (m *Primitive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Primitive.Unmarshal(m, b)
}
func (m *Primitive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Primitive.Marshal(b, m, deterministic)
}
func (dst *Primitive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Primitive.Merge(dst, src)
}
func (m *Primitive) XXX_Size() int {
	return xxx_messageInfo_Primitive.Size(m)
}
func (m *Primitive) XXX_DiscardUnknown() {
	xxx_messageInfo_Primitive.DiscardUnknown(m)
}

var xxx_messageInfo_Primitive proto.InternalMessageInfo

type isPrimitive_Value interface {
	isPrimitive_Value()
}

type Primitive_Integer struct {
	Integer int64 `protobuf:"varint,1,opt,name=integer,proto3,oneof"`
}

type Primitive_FloatValue struct {
	FloatValue float64 `protobuf:"fixed64,2,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type Primitive_StringValue struct {
	StringValue string `protobuf:"bytes,3,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type Primitive_Boolean struct {
	Boolean bool `protobuf:"varint,4,opt,name=boolean,proto3,oneof"`
}

type Primitive_Datetime struct {
	Datetime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=datetime,proto3,oneof"`
}

type Primitive_Duration struct {
	Duration *duration.Duration `protobuf:"bytes,6,opt,name=duration,proto3,oneof"`
}

func (*Primitive_Integer) isPrimitive_Value() {}

func (*Primitive_FloatValue) isPrimitive_Value() {}

func (*Primitive_StringValue) isPrimitive_Value() {}

func (*Primitive_Boolean) isPrimitive_Value() {}

func (*Primitive_Datetime) isPrimitive_Value() {}

func (*Primitive_Duration) isPrimitive_Value() {}

func (m *Primitive) GetValue() isPrimitive_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Primitive) GetInteger() int64 {
	if x, ok := m.GetValue().(*Primitive_Integer); ok {
		return x.Integer
	}
	return 0
}

func (m *Primitive) GetFloatValue() float64 {
	if x, ok := m.GetValue().(*Primitive_FloatValue); ok {
		return x.FloatValue
	}
	return 0
}

func (m *Primitive) GetStringValue() string {
	if x, ok := m.GetValue().(*Primitive_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (m *Primitive) GetBoolean() bool {
	if x, ok := m.GetValue().(*Primitive_Boolean); ok {
		return x.Boolean
	}
	return false
}

func (m *Primitive) GetDatetime() *timestamp.Timestamp {
	if x, ok := m.GetValue().(*Primitive_Datetime); ok {
		return x.Datetime
	}
	return nil
}

func (m *Primitive) GetDuration() *duration.Duration {
	if x, ok := m.GetValue().(*Primitive_Duration); ok {
		return x.Duration
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Primitive) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Primitive_OneofMarshaler, _Primitive_OneofUnmarshaler, _Primitive_OneofSizer, []interface{}{
		(*Primitive_Integer)(nil),
		(*Primitive_FloatValue)(nil),
		(*Primitive_StringValue)(nil),
		(*Primitive_Boolean)(nil),
		(*Primitive_Datetime)(nil),
		(*Primitive_Duration)(nil),
	}
}

func _Primitive_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Primitive)
	// value
	switch x := m.Value.(type) {
	case *Primitive_Integer:
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Integer))
	case *Primitive_FloatValue:
		b.EncodeVarint(2<<3 | proto.WireFixed64)
		b.EncodeFixed64(math.Float64bits(x.FloatValue))
	case *Primitive_StringValue:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.StringValue)
	case *Primitive_Boolean:
		t := uint64(0)
		if x.Boolean {
			t = 1
		}
		b.EncodeVarint(4<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *Primitive_Datetime:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Datetime); err != nil {
			return err
		}
	case *Primitive_Duration:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Duration); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Primitive.Value has unexpected type %T", x)
	}
	return nil
}

func _Primitive_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Primitive)
	switch tag {
	case 1: // value.integer
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &Primitive_Integer{int64(x)}
		return true, err
	case 2: // value.float_value
		if wire != proto.WireFixed64 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed64()
		m.Value = &Primitive_FloatValue{math.Float64frombits(x)}
		return true, err
	case 3: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Value = &Primitive_StringValue{x}
		return true, err
	case 4: // value.boolean
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &Primitive_Boolean{x != 0}
		return true, err
	case 5: // value.datetime
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(timestamp.Timestamp)
		err := b.DecodeMessage(msg)
		m.Value = &Primitive_Datetime{msg}
		return true, err
	case 6: // value.duration
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(duration.Duration)
		err := b.DecodeMessage(msg)
		m.Value = &Primitive_Duration{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Primitive_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Primitive)
	// value
	switch x := m.Value.(type) {
	case *Primitive_Integer:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Integer))
	case *Primitive_FloatValue:
		n += 1 // tag and wire
		n += 8
	case *Primitive_StringValue:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.StringValue)))
		n += len(x.StringValue)
	case *Primitive_Boolean:
		n += 1 // tag and wire
		n += 1
	case *Primitive_Datetime:
		s := proto.Size(x.Datetime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Primitive_Duration:
		s := proto.Size(x.Duration)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Primitive)(nil), "flyteidl.core.Primitive")
}

func init() {
	proto.RegisterFile("flyteidl/core/primitives.proto", fileDescriptor_primitives_90b7f8f55be9faeb)
}

var fileDescriptor_primitives_90b7f8f55be9faeb = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0x3d, 0x4f, 0xf3, 0x30,
	0x14, 0x85, 0xe3, 0xf6, 0xed, 0x97, 0xfb, 0xb2, 0x78, 0x0a, 0x19, 0x4a, 0x80, 0x25, 0x0b, 0x36,
	0x2a, 0x03, 0xcc, 0x15, 0x43, 0x46, 0x14, 0x21, 0x06, 0x16, 0xe4, 0xb4, 0x8e, 0xb1, 0xe4, 0xe4,
	0x46, 0xce, 0x4d, 0xa5, 0xfe, 0x02, 0xfe, 0x36, 0xca, 0x87, 0x2b, 0x01, 0x9b, 0x75, 0xce, 0x73,
	0x7c, 0xef, 0xd1, 0xa5, 0x9b, 0xc2, 0x9e, 0x50, 0x99, 0x83, 0x15, 0x7b, 0x70, 0x4a, 0xd4, 0xce,
	0x94, 0x06, 0xcd, 0x51, 0x35, 0xbc, 0x76, 0x80, 0xc0, 0x2e, 0xbc, 0xcf, 0x3b, 0x3f, 0xba, 0xd2,
	0x00, 0xda, 0x76, 0x1c, 0x20, 0xe4, 0x6d, 0x21, 0xd0, 0x94, 0xaa, 0x41, 0x59, 0xd6, 0x03, 0x1f,
	0x6d, 0x7e, 0x03, 0x87, 0xd6, 0x49, 0x34, 0x50, 0x0d, 0xfe, 0xcd, 0xd7, 0x84, 0xae, 0x5e, 0xfc,
	0x10, 0x16, 0xd1, 0x85, 0xa9, 0x50, 0x69, 0xe5, 0x42, 0x12, 0x93, 0x64, 0x9a, 0x06, 0x99, 0x17,
	0xd8, 0x35, 0x5d, 0x17, 0x16, 0x24, 0x7e, 0x1c, 0xa5, 0x6d, 0x55, 0x38, 0x89, 0x49, 0x42, 0xd2,
	0x20, 0xa3, 0xbd, 0xf8, 0xd6, 0x69, 0xec, 0x96, 0xfe, 0x6f, 0xd0, 0x99, 0x4a, 0x8f, 0xcc, 0x34,
	0x26, 0xc9, 0x2a, 0x0d, 0xb2, 0xf5, 0xa0, 0x0e, 0x50, 0x44, 0x17, 0x39, 0x80, 0x55, 0xb2, 0x0a,
	0xff, 0xc5, 0x24, 0x59, 0x76, 0x33, 0x46, 0x81, 0x3d, 0xd1, 0xe5, 0x41, 0xa2, 0xea, 0x4a, 0x84,
	0xb3, 0x98, 0x24, 0xeb, 0x6d, 0xc4, 0x87, 0x02, 0xdc, 0x17, 0xe0, 0xaf, 0xbe, 0x61, 0x1a, 0x64,
	0x67, 0x9a, 0x3d, 0xd2, 0xa5, 0x6f, 0x16, 0xce, 0xfb, 0xe4, 0xe5, 0x9f, 0xe4, 0xf3, 0x08, 0xf4,
	0xc1, 0xf1, 0xbd, 0x5b, 0xd0, 0x59, 0xbf, 0xec, 0x6e, 0xfb, 0x7e, 0xaf, 0x0d, 0x7e, 0xb6, 0x39,
	0xdf, 0x43, 0x29, 0xec, 0xa9, 0x40, 0x71, 0xbe, 0x85, 0x56, 0x95, 0xa8, 0xf3, 0x3b, 0x0d, 0xe2,
	0xc7, 0x79, 0xf2, 0x79, 0xff, 0xf7, 0xc3, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd3, 0x4a, 0x00,
	0xbe, 0xb6, 0x01, 0x00, 0x00,
}
