// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/matchable_resource.proto

#include "flyteidl/admin/matchable_resource.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fadmin_2fmatchable_5fresource_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ClusterResourceAttributes_AttributesEntry_DoNotUse_flyteidl_2fadmin_2fmatchable_5fresource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fadmin_2fmatchable_5fresource_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ExecutionQueueAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fadmin_2fmatchable_5fresource_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TaskResourceAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fadmin_2fmatchable_5fresource_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ClusterResourceAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto;
namespace flyteidl {
namespace admin {
class TaskResourceAttributesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskResourceAttributes> _instance;
} _TaskResourceAttributes_default_instance_;
class ClusterResourceAttributes_AttributesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterResourceAttributes_AttributesEntry_DoNotUse> _instance;
} _ClusterResourceAttributes_AttributesEntry_DoNotUse_default_instance_;
class ClusterResourceAttributesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClusterResourceAttributes> _instance;
} _ClusterResourceAttributes_default_instance_;
class ExecutionQueueAttributesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecutionQueueAttributes> _instance;
} _ExecutionQueueAttributes_default_instance_;
class MatchingAttributesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MatchingAttributes> _instance;
  const ::flyteidl::admin::TaskResourceAttributes* task_resource_attributes_;
  const ::flyteidl::admin::ClusterResourceAttributes* cluster_resource_attributes_;
  const ::flyteidl::admin::ExecutionQueueAttributes* execution_queue_attributes_;
} _MatchingAttributes_default_instance_;
}  // namespace admin
}  // namespace flyteidl
static void InitDefaultsTaskResourceAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::admin::_TaskResourceAttributes_default_instance_;
    new (ptr) ::flyteidl::admin::TaskResourceAttributes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::TaskResourceAttributes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TaskResourceAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTaskResourceAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto}, {}};

static void InitDefaultsClusterResourceAttributes_AttributesEntry_DoNotUse_flyteidl_2fadmin_2fmatchable_5fresource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::admin::_ClusterResourceAttributes_AttributesEntry_DoNotUse_default_instance_;
    new (ptr) ::flyteidl::admin::ClusterResourceAttributes_AttributesEntry_DoNotUse();
  }
  ::flyteidl::admin::ClusterResourceAttributes_AttributesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClusterResourceAttributes_AttributesEntry_DoNotUse_flyteidl_2fadmin_2fmatchable_5fresource_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClusterResourceAttributes_AttributesEntry_DoNotUse_flyteidl_2fadmin_2fmatchable_5fresource_2eproto}, {}};

static void InitDefaultsClusterResourceAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::admin::_ClusterResourceAttributes_default_instance_;
    new (ptr) ::flyteidl::admin::ClusterResourceAttributes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::ClusterResourceAttributes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ClusterResourceAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsClusterResourceAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto}, {
      &scc_info_ClusterResourceAttributes_AttributesEntry_DoNotUse_flyteidl_2fadmin_2fmatchable_5fresource_2eproto.base,}};

static void InitDefaultsExecutionQueueAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::admin::_ExecutionQueueAttributes_default_instance_;
    new (ptr) ::flyteidl::admin::ExecutionQueueAttributes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::ExecutionQueueAttributes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExecutionQueueAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExecutionQueueAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto}, {}};

static void InitDefaultsMatchingAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::admin::_MatchingAttributes_default_instance_;
    new (ptr) ::flyteidl::admin::MatchingAttributes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::MatchingAttributes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_MatchingAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsMatchingAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto}, {
      &scc_info_TaskResourceAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto.base,
      &scc_info_ClusterResourceAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto.base,
      &scc_info_ExecutionQueueAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto.base,}};

void InitDefaults_flyteidl_2fadmin_2fmatchable_5fresource_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_TaskResourceAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClusterResourceAttributes_AttributesEntry_DoNotUse_flyteidl_2fadmin_2fmatchable_5fresource_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClusterResourceAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExecutionQueueAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MatchingAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_flyteidl_2fadmin_2fmatchable_5fresource_2eproto[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_flyteidl_2fadmin_2fmatchable_5fresource_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fadmin_2fmatchable_5fresource_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_flyteidl_2fadmin_2fmatchable_5fresource_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::TaskResourceAttributes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::TaskResourceAttributes, cpu_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::TaskResourceAttributes, gpu_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::TaskResourceAttributes, memory_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::TaskResourceAttributes, storage_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ClusterResourceAttributes_AttributesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ClusterResourceAttributes_AttributesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ClusterResourceAttributes_AttributesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ClusterResourceAttributes_AttributesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ClusterResourceAttributes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ClusterResourceAttributes, attributes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ExecutionQueueAttributes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ExecutionQueueAttributes, tags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::MatchingAttributes, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::MatchingAttributes, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::flyteidl::admin::MatchingAttributesDefaultTypeInternal, task_resource_attributes_),
  offsetof(::flyteidl::admin::MatchingAttributesDefaultTypeInternal, cluster_resource_attributes_),
  offsetof(::flyteidl::admin::MatchingAttributesDefaultTypeInternal, execution_queue_attributes_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::MatchingAttributes, target_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::flyteidl::admin::TaskResourceAttributes)},
  { 9, 16, sizeof(::flyteidl::admin::ClusterResourceAttributes_AttributesEntry_DoNotUse)},
  { 18, -1, sizeof(::flyteidl::admin::ClusterResourceAttributes)},
  { 24, -1, sizeof(::flyteidl::admin::ExecutionQueueAttributes)},
  { 30, -1, sizeof(::flyteidl::admin::MatchingAttributes)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_TaskResourceAttributes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_ClusterResourceAttributes_AttributesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_ClusterResourceAttributes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_ExecutionQueueAttributes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_MatchingAttributes_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_flyteidl_2fadmin_2fmatchable_5fresource_2eproto = {
  {}, AddDescriptors_flyteidl_2fadmin_2fmatchable_5fresource_2eproto, "flyteidl/admin/matchable_resource.proto", schemas,
  file_default_instances, TableStruct_flyteidl_2fadmin_2fmatchable_5fresource_2eproto::offsets,
  file_level_metadata_flyteidl_2fadmin_2fmatchable_5fresource_2eproto, 5, file_level_enum_descriptors_flyteidl_2fadmin_2fmatchable_5fresource_2eproto, file_level_service_descriptors_flyteidl_2fadmin_2fmatchable_5fresource_2eproto,
};

const char descriptor_table_protodef_flyteidl_2fadmin_2fmatchable_5fresource_2eproto[] =
  "\n\'flyteidl/admin/matchable_resource.prot"
  "o\022\016flyteidl.admin\"S\n\026TaskResourceAttribu"
  "tes\022\013\n\003cpu\030\001 \001(\t\022\013\n\003gpu\030\002 \001(\t\022\016\n\006memory\030"
  "\003 \001(\t\022\017\n\007storage\030\004 \001(\t\"\235\001\n\031ClusterResour"
  "ceAttributes\022M\n\nattributes\030\001 \003(\01329.flyte"
  "idl.admin.ClusterResourceAttributes.Attr"
  "ibutesEntry\0321\n\017AttributesEntry\022\013\n\003key\030\001 "
  "\001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"(\n\030ExecutionQueue"
  "Attributes\022\014\n\004tags\030\001 \003(\t\"\214\002\n\022MatchingAtt"
  "ributes\022J\n\030task_resource_attributes\030\001 \001("
  "\0132&.flyteidl.admin.TaskResourceAttribute"
  "sH\000\022P\n\033cluster_resource_attributes\030\002 \001(\013"
  "2).flyteidl.admin.ClusterResourceAttribu"
  "tesH\000\022N\n\032execution_queue_attributes\030\003 \001("
  "\0132(.flyteidl.admin.ExecutionQueueAttribu"
  "tesH\000B\010\n\006target*Q\n\021MatchableResource\022\021\n\r"
  "TASK_RESOURCE\020\000\022\024\n\020CLUSTER_RESOURCE\020\001\022\023\n"
  "\017EXECUTION_QUEUE\020\002B3Z1github.com/lyft/fl"
  "yteidl/gen/pb-go/flyteidl/adminb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_flyteidl_2fadmin_2fmatchable_5fresource_2eproto = {
  false, InitDefaults_flyteidl_2fadmin_2fmatchable_5fresource_2eproto, 
  descriptor_table_protodef_flyteidl_2fadmin_2fmatchable_5fresource_2eproto,
  "flyteidl/admin/matchable_resource.proto", &assign_descriptors_table_flyteidl_2fadmin_2fmatchable_5fresource_2eproto, 759,
};

void AddDescriptors_flyteidl_2fadmin_2fmatchable_5fresource_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_flyteidl_2fadmin_2fmatchable_5fresource_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_flyteidl_2fadmin_2fmatchable_5fresource_2eproto = []() { AddDescriptors_flyteidl_2fadmin_2fmatchable_5fresource_2eproto(); return true; }();
namespace flyteidl {
namespace admin {
const ::google::protobuf::EnumDescriptor* MatchableResource_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_flyteidl_2fadmin_2fmatchable_5fresource_2eproto);
  return file_level_enum_descriptors_flyteidl_2fadmin_2fmatchable_5fresource_2eproto[0];
}
bool MatchableResource_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void TaskResourceAttributes::InitAsDefaultInstance() {
}
class TaskResourceAttributes::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskResourceAttributes::kCpuFieldNumber;
const int TaskResourceAttributes::kGpuFieldNumber;
const int TaskResourceAttributes::kMemoryFieldNumber;
const int TaskResourceAttributes::kStorageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskResourceAttributes::TaskResourceAttributes()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.TaskResourceAttributes)
}
TaskResourceAttributes::TaskResourceAttributes(const TaskResourceAttributes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cpu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cpu().size() > 0) {
    cpu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpu_);
  }
  gpu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gpu().size() > 0) {
    gpu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gpu_);
  }
  memory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.memory().size() > 0) {
    memory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memory_);
  }
  storage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.storage().size() > 0) {
    storage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.storage_);
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.TaskResourceAttributes)
}

void TaskResourceAttributes::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TaskResourceAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto.base);
  cpu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gpu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  storage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TaskResourceAttributes::~TaskResourceAttributes() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.TaskResourceAttributes)
  SharedDtor();
}

void TaskResourceAttributes::SharedDtor() {
  cpu_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gpu_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  storage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TaskResourceAttributes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TaskResourceAttributes& TaskResourceAttributes::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TaskResourceAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto.base);
  return *internal_default_instance();
}


void TaskResourceAttributes::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.TaskResourceAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cpu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gpu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  storage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TaskResourceAttributes::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TaskResourceAttributes*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string cpu = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.TaskResourceAttributes.cpu");
        object = msg->mutable_cpu();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string gpu = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.TaskResourceAttributes.gpu");
        object = msg->mutable_gpu();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string memory = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.TaskResourceAttributes.memory");
        object = msg->mutable_memory();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string storage = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.TaskResourceAttributes.storage");
        object = msg->mutable_storage();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TaskResourceAttributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.TaskResourceAttributes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cpu = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cpu()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cpu().data(), static_cast<int>(this->cpu().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.TaskResourceAttributes.cpu"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gpu = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gpu()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gpu().data(), static_cast<int>(this->gpu().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.TaskResourceAttributes.gpu"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string memory = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_memory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->memory().data(), static_cast<int>(this->memory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.TaskResourceAttributes.memory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string storage = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_storage()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->storage().data(), static_cast<int>(this->storage().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.TaskResourceAttributes.storage"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.TaskResourceAttributes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.TaskResourceAttributes)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TaskResourceAttributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.TaskResourceAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cpu = 1;
  if (this->cpu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpu().data(), static_cast<int>(this->cpu().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.TaskResourceAttributes.cpu");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cpu(), output);
  }

  // string gpu = 2;
  if (this->gpu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gpu().data(), static_cast<int>(this->gpu().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.TaskResourceAttributes.gpu");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gpu(), output);
  }

  // string memory = 3;
  if (this->memory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->memory().data(), static_cast<int>(this->memory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.TaskResourceAttributes.memory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->memory(), output);
  }

  // string storage = 4;
  if (this->storage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->storage().data(), static_cast<int>(this->storage().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.TaskResourceAttributes.storage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->storage(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.TaskResourceAttributes)
}

::google::protobuf::uint8* TaskResourceAttributes::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.TaskResourceAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cpu = 1;
  if (this->cpu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpu().data(), static_cast<int>(this->cpu().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.TaskResourceAttributes.cpu");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cpu(), target);
  }

  // string gpu = 2;
  if (this->gpu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gpu().data(), static_cast<int>(this->gpu().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.TaskResourceAttributes.gpu");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gpu(), target);
  }

  // string memory = 3;
  if (this->memory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->memory().data(), static_cast<int>(this->memory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.TaskResourceAttributes.memory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->memory(), target);
  }

  // string storage = 4;
  if (this->storage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->storage().data(), static_cast<int>(this->storage().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.TaskResourceAttributes.storage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->storage(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.TaskResourceAttributes)
  return target;
}

size_t TaskResourceAttributes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.TaskResourceAttributes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string cpu = 1;
  if (this->cpu().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cpu());
  }

  // string gpu = 2;
  if (this->gpu().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gpu());
  }

  // string memory = 3;
  if (this->memory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->memory());
  }

  // string storage = 4;
  if (this->storage().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->storage());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TaskResourceAttributes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.TaskResourceAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskResourceAttributes* source =
      ::google::protobuf::DynamicCastToGenerated<TaskResourceAttributes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.TaskResourceAttributes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.TaskResourceAttributes)
    MergeFrom(*source);
  }
}

void TaskResourceAttributes::MergeFrom(const TaskResourceAttributes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.TaskResourceAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cpu().size() > 0) {

    cpu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpu_);
  }
  if (from.gpu().size() > 0) {

    gpu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gpu_);
  }
  if (from.memory().size() > 0) {

    memory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memory_);
  }
  if (from.storage().size() > 0) {

    storage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.storage_);
  }
}

void TaskResourceAttributes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.TaskResourceAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskResourceAttributes::CopyFrom(const TaskResourceAttributes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.TaskResourceAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskResourceAttributes::IsInitialized() const {
  return true;
}

void TaskResourceAttributes::Swap(TaskResourceAttributes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskResourceAttributes::InternalSwap(TaskResourceAttributes* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  cpu_.Swap(&other->cpu_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  gpu_.Swap(&other->gpu_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  memory_.Swap(&other->memory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  storage_.Swap(&other->storage_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata TaskResourceAttributes::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fadmin_2fmatchable_5fresource_2eproto);
  return ::file_level_metadata_flyteidl_2fadmin_2fmatchable_5fresource_2eproto[kIndexInFileMessages];
}


// ===================================================================

ClusterResourceAttributes_AttributesEntry_DoNotUse::ClusterResourceAttributes_AttributesEntry_DoNotUse() {}
ClusterResourceAttributes_AttributesEntry_DoNotUse::ClusterResourceAttributes_AttributesEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void ClusterResourceAttributes_AttributesEntry_DoNotUse::MergeFrom(const ClusterResourceAttributes_AttributesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ClusterResourceAttributes_AttributesEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fadmin_2fmatchable_5fresource_2eproto);
  return ::file_level_metadata_flyteidl_2fadmin_2fmatchable_5fresource_2eproto[1];
}
void ClusterResourceAttributes_AttributesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClusterResourceAttributes_AttributesEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      ClusterResourceAttributes_AttributesEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "flyteidl.admin.ClusterResourceAttributes.AttributesEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "flyteidl.admin.ClusterResourceAttributes.AttributesEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void ClusterResourceAttributes::InitAsDefaultInstance() {
}
class ClusterResourceAttributes::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterResourceAttributes::kAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterResourceAttributes::ClusterResourceAttributes()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.ClusterResourceAttributes)
}
ClusterResourceAttributes::ClusterResourceAttributes(const ClusterResourceAttributes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attributes_.MergeFrom(from.attributes_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.ClusterResourceAttributes)
}

void ClusterResourceAttributes::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ClusterResourceAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto.base);
}

ClusterResourceAttributes::~ClusterResourceAttributes() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.ClusterResourceAttributes)
  SharedDtor();
}

void ClusterResourceAttributes::SharedDtor() {
}

void ClusterResourceAttributes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClusterResourceAttributes& ClusterResourceAttributes::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ClusterResourceAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto.base);
  return *internal_default_instance();
}


void ClusterResourceAttributes::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.ClusterResourceAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClusterResourceAttributes::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ClusterResourceAttributes*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // map<string, string> attributes = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::flyteidl::admin::ClusterResourceAttributes_AttributesEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->attributes_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClusterResourceAttributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.ClusterResourceAttributes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> attributes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          ClusterResourceAttributes_AttributesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ClusterResourceAttributes_AttributesEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&attributes_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.ClusterResourceAttributes.AttributesEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.ClusterResourceAttributes.AttributesEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.ClusterResourceAttributes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.ClusterResourceAttributes)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClusterResourceAttributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.ClusterResourceAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> attributes = 1;
  if (!this->attributes().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "flyteidl.admin.ClusterResourceAttributes.AttributesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "flyteidl.admin.ClusterResourceAttributes.AttributesEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->attributes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->attributes().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->attributes().begin();
          it != this->attributes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ClusterResourceAttributes_AttributesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(attributes_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<ClusterResourceAttributes_AttributesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->attributes().begin();
          it != this->attributes().end(); ++it) {
        entry.reset(attributes_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.ClusterResourceAttributes)
}

::google::protobuf::uint8* ClusterResourceAttributes::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.ClusterResourceAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> attributes = 1;
  if (!this->attributes().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "flyteidl.admin.ClusterResourceAttributes.AttributesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "flyteidl.admin.ClusterResourceAttributes.AttributesEntry.value");
      }
    };

    if (false &&
        this->attributes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->attributes().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->attributes().begin();
          it != this->attributes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ClusterResourceAttributes_AttributesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(attributes_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<ClusterResourceAttributes_AttributesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->attributes().begin();
          it != this->attributes().end(); ++it) {
        entry.reset(attributes_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.ClusterResourceAttributes)
  return target;
}

size_t ClusterResourceAttributes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.ClusterResourceAttributes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> attributes = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->attributes_size());
  {
    ::std::unique_ptr<ClusterResourceAttributes_AttributesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->attributes().begin();
        it != this->attributes().end(); ++it) {
      entry.reset(attributes_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClusterResourceAttributes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.ClusterResourceAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  const ClusterResourceAttributes* source =
      ::google::protobuf::DynamicCastToGenerated<ClusterResourceAttributes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.ClusterResourceAttributes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.ClusterResourceAttributes)
    MergeFrom(*source);
  }
}

void ClusterResourceAttributes::MergeFrom(const ClusterResourceAttributes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.ClusterResourceAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributes_.MergeFrom(from.attributes_);
}

void ClusterResourceAttributes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.ClusterResourceAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterResourceAttributes::CopyFrom(const ClusterResourceAttributes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.ClusterResourceAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterResourceAttributes::IsInitialized() const {
  return true;
}

void ClusterResourceAttributes::Swap(ClusterResourceAttributes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterResourceAttributes::InternalSwap(ClusterResourceAttributes* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  attributes_.Swap(&other->attributes_);
}

::google::protobuf::Metadata ClusterResourceAttributes::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fadmin_2fmatchable_5fresource_2eproto);
  return ::file_level_metadata_flyteidl_2fadmin_2fmatchable_5fresource_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ExecutionQueueAttributes::InitAsDefaultInstance() {
}
class ExecutionQueueAttributes::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecutionQueueAttributes::kTagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecutionQueueAttributes::ExecutionQueueAttributes()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.ExecutionQueueAttributes)
}
ExecutionQueueAttributes::ExecutionQueueAttributes(const ExecutionQueueAttributes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.ExecutionQueueAttributes)
}

void ExecutionQueueAttributes::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ExecutionQueueAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto.base);
}

ExecutionQueueAttributes::~ExecutionQueueAttributes() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.ExecutionQueueAttributes)
  SharedDtor();
}

void ExecutionQueueAttributes::SharedDtor() {
}

void ExecutionQueueAttributes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExecutionQueueAttributes& ExecutionQueueAttributes::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ExecutionQueueAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto.base);
  return *internal_default_instance();
}


void ExecutionQueueAttributes::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.ExecutionQueueAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ExecutionQueueAttributes::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ExecutionQueueAttributes*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string tags = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("flyteidl.admin.ExecutionQueueAttributes.tags");
          object = msg->add_tags();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ExecutionQueueAttributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.ExecutionQueueAttributes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string tags = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tags(this->tags_size() - 1).data(),
            static_cast<int>(this->tags(this->tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.ExecutionQueueAttributes.tags"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.ExecutionQueueAttributes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.ExecutionQueueAttributes)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ExecutionQueueAttributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.ExecutionQueueAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string tags = 1;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.ExecutionQueueAttributes.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->tags(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.ExecutionQueueAttributes)
}

::google::protobuf::uint8* ExecutionQueueAttributes::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.ExecutionQueueAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string tags = 1;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.ExecutionQueueAttributes.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->tags(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.ExecutionQueueAttributes)
  return target;
}

size_t ExecutionQueueAttributes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.ExecutionQueueAttributes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecutionQueueAttributes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.ExecutionQueueAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecutionQueueAttributes* source =
      ::google::protobuf::DynamicCastToGenerated<ExecutionQueueAttributes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.ExecutionQueueAttributes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.ExecutionQueueAttributes)
    MergeFrom(*source);
  }
}

void ExecutionQueueAttributes::MergeFrom(const ExecutionQueueAttributes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.ExecutionQueueAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
}

void ExecutionQueueAttributes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.ExecutionQueueAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutionQueueAttributes::CopyFrom(const ExecutionQueueAttributes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.ExecutionQueueAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutionQueueAttributes::IsInitialized() const {
  return true;
}

void ExecutionQueueAttributes::Swap(ExecutionQueueAttributes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecutionQueueAttributes::InternalSwap(ExecutionQueueAttributes* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  tags_.InternalSwap(CastToBase(&other->tags_));
}

::google::protobuf::Metadata ExecutionQueueAttributes::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fadmin_2fmatchable_5fresource_2eproto);
  return ::file_level_metadata_flyteidl_2fadmin_2fmatchable_5fresource_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MatchingAttributes::InitAsDefaultInstance() {
  ::flyteidl::admin::_MatchingAttributes_default_instance_.task_resource_attributes_ = const_cast< ::flyteidl::admin::TaskResourceAttributes*>(
      ::flyteidl::admin::TaskResourceAttributes::internal_default_instance());
  ::flyteidl::admin::_MatchingAttributes_default_instance_.cluster_resource_attributes_ = const_cast< ::flyteidl::admin::ClusterResourceAttributes*>(
      ::flyteidl::admin::ClusterResourceAttributes::internal_default_instance());
  ::flyteidl::admin::_MatchingAttributes_default_instance_.execution_queue_attributes_ = const_cast< ::flyteidl::admin::ExecutionQueueAttributes*>(
      ::flyteidl::admin::ExecutionQueueAttributes::internal_default_instance());
}
class MatchingAttributes::HasBitSetters {
 public:
  static const ::flyteidl::admin::TaskResourceAttributes& task_resource_attributes(const MatchingAttributes* msg);
  static const ::flyteidl::admin::ClusterResourceAttributes& cluster_resource_attributes(const MatchingAttributes* msg);
  static const ::flyteidl::admin::ExecutionQueueAttributes& execution_queue_attributes(const MatchingAttributes* msg);
};

const ::flyteidl::admin::TaskResourceAttributes&
MatchingAttributes::HasBitSetters::task_resource_attributes(const MatchingAttributes* msg) {
  return *msg->target_.task_resource_attributes_;
}
const ::flyteidl::admin::ClusterResourceAttributes&
MatchingAttributes::HasBitSetters::cluster_resource_attributes(const MatchingAttributes* msg) {
  return *msg->target_.cluster_resource_attributes_;
}
const ::flyteidl::admin::ExecutionQueueAttributes&
MatchingAttributes::HasBitSetters::execution_queue_attributes(const MatchingAttributes* msg) {
  return *msg->target_.execution_queue_attributes_;
}
void MatchingAttributes::set_allocated_task_resource_attributes(::flyteidl::admin::TaskResourceAttributes* task_resource_attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_target();
  if (task_resource_attributes) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      task_resource_attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, task_resource_attributes, submessage_arena);
    }
    set_has_task_resource_attributes();
    target_.task_resource_attributes_ = task_resource_attributes;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.MatchingAttributes.task_resource_attributes)
}
void MatchingAttributes::set_allocated_cluster_resource_attributes(::flyteidl::admin::ClusterResourceAttributes* cluster_resource_attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_target();
  if (cluster_resource_attributes) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      cluster_resource_attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cluster_resource_attributes, submessage_arena);
    }
    set_has_cluster_resource_attributes();
    target_.cluster_resource_attributes_ = cluster_resource_attributes;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.MatchingAttributes.cluster_resource_attributes)
}
void MatchingAttributes::set_allocated_execution_queue_attributes(::flyteidl::admin::ExecutionQueueAttributes* execution_queue_attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_target();
  if (execution_queue_attributes) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      execution_queue_attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, execution_queue_attributes, submessage_arena);
    }
    set_has_execution_queue_attributes();
    target_.execution_queue_attributes_ = execution_queue_attributes;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.MatchingAttributes.execution_queue_attributes)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchingAttributes::kTaskResourceAttributesFieldNumber;
const int MatchingAttributes::kClusterResourceAttributesFieldNumber;
const int MatchingAttributes::kExecutionQueueAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchingAttributes::MatchingAttributes()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.MatchingAttributes)
}
MatchingAttributes::MatchingAttributes(const MatchingAttributes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_target();
  switch (from.target_case()) {
    case kTaskResourceAttributes: {
      mutable_task_resource_attributes()->::flyteidl::admin::TaskResourceAttributes::MergeFrom(from.task_resource_attributes());
      break;
    }
    case kClusterResourceAttributes: {
      mutable_cluster_resource_attributes()->::flyteidl::admin::ClusterResourceAttributes::MergeFrom(from.cluster_resource_attributes());
      break;
    }
    case kExecutionQueueAttributes: {
      mutable_execution_queue_attributes()->::flyteidl::admin::ExecutionQueueAttributes::MergeFrom(from.execution_queue_attributes());
      break;
    }
    case TARGET_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.MatchingAttributes)
}

void MatchingAttributes::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MatchingAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto.base);
  clear_has_target();
}

MatchingAttributes::~MatchingAttributes() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.MatchingAttributes)
  SharedDtor();
}

void MatchingAttributes::SharedDtor() {
  if (has_target()) {
    clear_target();
  }
}

void MatchingAttributes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MatchingAttributes& MatchingAttributes::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MatchingAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto.base);
  return *internal_default_instance();
}


void MatchingAttributes::clear_target() {
// @@protoc_insertion_point(one_of_clear_start:flyteidl.admin.MatchingAttributes)
  switch (target_case()) {
    case kTaskResourceAttributes: {
      delete target_.task_resource_attributes_;
      break;
    }
    case kClusterResourceAttributes: {
      delete target_.cluster_resource_attributes_;
      break;
    }
    case kExecutionQueueAttributes: {
      delete target_.execution_queue_attributes_;
      break;
    }
    case TARGET_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TARGET_NOT_SET;
}


void MatchingAttributes::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.MatchingAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_target();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MatchingAttributes::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MatchingAttributes*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .flyteidl.admin.TaskResourceAttributes task_resource_attributes = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::admin::TaskResourceAttributes::_InternalParse;
        object = msg->mutable_task_resource_attributes();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .flyteidl.admin.ClusterResourceAttributes cluster_resource_attributes = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::admin::ClusterResourceAttributes::_InternalParse;
        object = msg->mutable_cluster_resource_attributes();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .flyteidl.admin.ExecutionQueueAttributes execution_queue_attributes = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::admin::ExecutionQueueAttributes::_InternalParse;
        object = msg->mutable_execution_queue_attributes();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MatchingAttributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.MatchingAttributes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.admin.TaskResourceAttributes task_resource_attributes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_task_resource_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.admin.ClusterResourceAttributes cluster_resource_attributes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cluster_resource_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.admin.ExecutionQueueAttributes execution_queue_attributes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_execution_queue_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.MatchingAttributes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.MatchingAttributes)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MatchingAttributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.MatchingAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.admin.TaskResourceAttributes task_resource_attributes = 1;
  if (has_task_resource_attributes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::task_resource_attributes(this), output);
  }

  // .flyteidl.admin.ClusterResourceAttributes cluster_resource_attributes = 2;
  if (has_cluster_resource_attributes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::cluster_resource_attributes(this), output);
  }

  // .flyteidl.admin.ExecutionQueueAttributes execution_queue_attributes = 3;
  if (has_execution_queue_attributes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::execution_queue_attributes(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.MatchingAttributes)
}

::google::protobuf::uint8* MatchingAttributes::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.MatchingAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.admin.TaskResourceAttributes task_resource_attributes = 1;
  if (has_task_resource_attributes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::task_resource_attributes(this), target);
  }

  // .flyteidl.admin.ClusterResourceAttributes cluster_resource_attributes = 2;
  if (has_cluster_resource_attributes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::cluster_resource_attributes(this), target);
  }

  // .flyteidl.admin.ExecutionQueueAttributes execution_queue_attributes = 3;
  if (has_execution_queue_attributes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::execution_queue_attributes(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.MatchingAttributes)
  return target;
}

size_t MatchingAttributes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.MatchingAttributes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (target_case()) {
    // .flyteidl.admin.TaskResourceAttributes task_resource_attributes = 1;
    case kTaskResourceAttributes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *target_.task_resource_attributes_);
      break;
    }
    // .flyteidl.admin.ClusterResourceAttributes cluster_resource_attributes = 2;
    case kClusterResourceAttributes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *target_.cluster_resource_attributes_);
      break;
    }
    // .flyteidl.admin.ExecutionQueueAttributes execution_queue_attributes = 3;
    case kExecutionQueueAttributes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *target_.execution_queue_attributes_);
      break;
    }
    case TARGET_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MatchingAttributes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.MatchingAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchingAttributes* source =
      ::google::protobuf::DynamicCastToGenerated<MatchingAttributes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.MatchingAttributes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.MatchingAttributes)
    MergeFrom(*source);
  }
}

void MatchingAttributes::MergeFrom(const MatchingAttributes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.MatchingAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.target_case()) {
    case kTaskResourceAttributes: {
      mutable_task_resource_attributes()->::flyteidl::admin::TaskResourceAttributes::MergeFrom(from.task_resource_attributes());
      break;
    }
    case kClusterResourceAttributes: {
      mutable_cluster_resource_attributes()->::flyteidl::admin::ClusterResourceAttributes::MergeFrom(from.cluster_resource_attributes());
      break;
    }
    case kExecutionQueueAttributes: {
      mutable_execution_queue_attributes()->::flyteidl::admin::ExecutionQueueAttributes::MergeFrom(from.execution_queue_attributes());
      break;
    }
    case TARGET_NOT_SET: {
      break;
    }
  }
}

void MatchingAttributes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.MatchingAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchingAttributes::CopyFrom(const MatchingAttributes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.MatchingAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchingAttributes::IsInitialized() const {
  return true;
}

void MatchingAttributes::Swap(MatchingAttributes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchingAttributes::InternalSwap(MatchingAttributes* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(target_, other->target_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata MatchingAttributes::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fadmin_2fmatchable_5fresource_2eproto);
  return ::file_level_metadata_flyteidl_2fadmin_2fmatchable_5fresource_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace admin
}  // namespace flyteidl
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::flyteidl::admin::TaskResourceAttributes* Arena::CreateMaybeMessage< ::flyteidl::admin::TaskResourceAttributes >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::admin::TaskResourceAttributes >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::ClusterResourceAttributes_AttributesEntry_DoNotUse* Arena::CreateMaybeMessage< ::flyteidl::admin::ClusterResourceAttributes_AttributesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::admin::ClusterResourceAttributes_AttributesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::ClusterResourceAttributes* Arena::CreateMaybeMessage< ::flyteidl::admin::ClusterResourceAttributes >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::admin::ClusterResourceAttributes >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::ExecutionQueueAttributes* Arena::CreateMaybeMessage< ::flyteidl::admin::ExecutionQueueAttributes >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::admin::ExecutionQueueAttributes >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::MatchingAttributes* Arena::CreateMaybeMessage< ::flyteidl::admin::MatchingAttributes >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::admin::MatchingAttributes >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
