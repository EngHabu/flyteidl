syntax = "proto3";
package flyteidl.service;

option go_package = "github.com/lyft/flyteidl/gen/pb-go/flyteidl/service";

import "google/api/annotations.proto";
import "flyteidl/admin/task.proto";
import "flyteidl/admin/workflow.proto";
import "flyteidl/admin/common.proto";

service AdminService {
  rpc CreateTask (flyteidl.admin.TaskCreateRequest) returns (flyteidl.admin.TaskCreateResponse) {
    option (google.api.http) = {
      post: "/api/v1/tasks"
      body: "*"
    };
  }

  rpc ListTaskIds (flyteidl.admin.TaskListRequest) returns (flyteidl.admin.IdentifierList) {
    option (google.api.http) = {
      get: "/api/v1/project/{project}/domain/{domain}/task_ids"
    };
  }

  rpc ListTasks (flyteidl.admin.TaskListRequest) returns (flyteidl.admin.TaskList) {
    option (google.api.http) = {
      get: "/api/v1/project/{project}/domain/{domain}/tasks"
      additional_bindings {
        get: "/api/v1/project/{project}/domain/{domain}/tasks/{name}"
      }
    };
  }

  rpc CreateWorkflow (flyteidl.admin.WorkflowCreateRequest) returns (flyteidl.admin.WorkflowCreateResponse) {
    option (google.api.http) = {
      post: "/api/v1/workflows"
      body: "*"
    };
  }

  rpc ListWorkflowIds (flyteidl.admin.WorkflowListRequest) returns (flyteidl.admin.IdentifierList) {
    option (google.api.http) = {
      get: "/api/v1/project/{project}/domain/{domain}/workflow_ids"
    };
  }
  
  rpc ListWorkflows (flyteidl.admin.WorkflowListRequest) returns (flyteidl.admin.WorkflowList) {
    option (google.api.http) = {
      get: "/api/v1/project/{project}/domain/{domain}/workflows"
      additional_bindings {
        get: "/api/v1/project/{project}/domain/{domain}/workflows/{name}"
      }
    };
  }
}
