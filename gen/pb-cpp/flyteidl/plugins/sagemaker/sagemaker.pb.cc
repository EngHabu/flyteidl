// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/plugins/sagemaker/sagemaker.proto

#include "flyteidl/plugins/sagemaker/sagemaker.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AlgorithmSpecification_MetricDefinition_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CategoricalParameterRange_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ContinuousParameterRange_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HPOJobObjective_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_IntegerParameterRange_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ResourceConfig_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StoppingCondition_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VpcConfig_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AlgorithmSpecification_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ParameterRanges_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_SagemakerTrainingJob_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto;
namespace flyteidl {
namespace plugins {
namespace sagemaker {
class ContinuousParameterRangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContinuousParameterRange> _instance;
} _ContinuousParameterRange_default_instance_;
class IntegerParameterRangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IntegerParameterRange> _instance;
} _IntegerParameterRange_default_instance_;
class CategoricalParameterRangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CategoricalParameterRange> _instance;
} _CategoricalParameterRange_default_instance_;
class ParameterRangesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParameterRanges> _instance;
} _ParameterRanges_default_instance_;
class AlgorithmSpecification_MetricDefinitionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlgorithmSpecification_MetricDefinition> _instance;
} _AlgorithmSpecification_MetricDefinition_default_instance_;
class AlgorithmSpecificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlgorithmSpecification> _instance;
} _AlgorithmSpecification_default_instance_;
class ResourceConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResourceConfig> _instance;
} _ResourceConfig_default_instance_;
class StoppingConditionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StoppingCondition> _instance;
} _StoppingCondition_default_instance_;
class VpcConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VpcConfig> _instance;
} _VpcConfig_default_instance_;
class SagemakerTrainingJobDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SagemakerTrainingJob> _instance;
} _SagemakerTrainingJob_default_instance_;
class HPOJobObjectiveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HPOJobObjective> _instance;
} _HPOJobObjective_default_instance_;
class SagemakerHPOJobDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SagemakerHPOJob> _instance;
} _SagemakerHPOJob_default_instance_;
}  // namespace sagemaker
}  // namespace plugins
}  // namespace flyteidl
static void InitDefaultsContinuousParameterRange_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::plugins::sagemaker::_ContinuousParameterRange_default_instance_;
    new (ptr) ::flyteidl::plugins::sagemaker::ContinuousParameterRange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::plugins::sagemaker::ContinuousParameterRange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ContinuousParameterRange_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsContinuousParameterRange_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto}, {}};

static void InitDefaultsIntegerParameterRange_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::plugins::sagemaker::_IntegerParameterRange_default_instance_;
    new (ptr) ::flyteidl::plugins::sagemaker::IntegerParameterRange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::plugins::sagemaker::IntegerParameterRange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IntegerParameterRange_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIntegerParameterRange_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto}, {}};

static void InitDefaultsCategoricalParameterRange_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::plugins::sagemaker::_CategoricalParameterRange_default_instance_;
    new (ptr) ::flyteidl::plugins::sagemaker::CategoricalParameterRange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::plugins::sagemaker::CategoricalParameterRange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CategoricalParameterRange_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCategoricalParameterRange_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto}, {}};

static void InitDefaultsParameterRanges_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::plugins::sagemaker::_ParameterRanges_default_instance_;
    new (ptr) ::flyteidl::plugins::sagemaker::ParameterRanges();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::plugins::sagemaker::ParameterRanges::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ParameterRanges_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsParameterRanges_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto}, {
      &scc_info_ContinuousParameterRange_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base,
      &scc_info_IntegerParameterRange_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base,
      &scc_info_CategoricalParameterRange_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base,}};

static void InitDefaultsAlgorithmSpecification_MetricDefinition_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::plugins::sagemaker::_AlgorithmSpecification_MetricDefinition_default_instance_;
    new (ptr) ::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AlgorithmSpecification_MetricDefinition_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAlgorithmSpecification_MetricDefinition_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto}, {}};

static void InitDefaultsAlgorithmSpecification_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::plugins::sagemaker::_AlgorithmSpecification_default_instance_;
    new (ptr) ::flyteidl::plugins::sagemaker::AlgorithmSpecification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::plugins::sagemaker::AlgorithmSpecification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AlgorithmSpecification_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAlgorithmSpecification_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto}, {
      &scc_info_AlgorithmSpecification_MetricDefinition_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base,}};

static void InitDefaultsResourceConfig_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::plugins::sagemaker::_ResourceConfig_default_instance_;
    new (ptr) ::flyteidl::plugins::sagemaker::ResourceConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::plugins::sagemaker::ResourceConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResourceConfig_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResourceConfig_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto}, {}};

static void InitDefaultsStoppingCondition_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::plugins::sagemaker::_StoppingCondition_default_instance_;
    new (ptr) ::flyteidl::plugins::sagemaker::StoppingCondition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::plugins::sagemaker::StoppingCondition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StoppingCondition_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStoppingCondition_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto}, {}};

static void InitDefaultsVpcConfig_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::plugins::sagemaker::_VpcConfig_default_instance_;
    new (ptr) ::flyteidl::plugins::sagemaker::VpcConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::plugins::sagemaker::VpcConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VpcConfig_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVpcConfig_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto}, {}};

static void InitDefaultsSagemakerTrainingJob_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::plugins::sagemaker::_SagemakerTrainingJob_default_instance_;
    new (ptr) ::flyteidl::plugins::sagemaker::SagemakerTrainingJob();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::plugins::sagemaker::SagemakerTrainingJob::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_SagemakerTrainingJob_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsSagemakerTrainingJob_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto}, {
      &scc_info_AlgorithmSpecification_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base,
      &scc_info_ResourceConfig_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base,
      &scc_info_StoppingCondition_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base,
      &scc_info_VpcConfig_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base,}};

static void InitDefaultsHPOJobObjective_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::plugins::sagemaker::_HPOJobObjective_default_instance_;
    new (ptr) ::flyteidl::plugins::sagemaker::HPOJobObjective();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::plugins::sagemaker::HPOJobObjective::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HPOJobObjective_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHPOJobObjective_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto}, {}};

static void InitDefaultsSagemakerHPOJob_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::plugins::sagemaker::_SagemakerHPOJob_default_instance_;
    new (ptr) ::flyteidl::plugins::sagemaker::SagemakerHPOJob();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::plugins::sagemaker::SagemakerHPOJob::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_SagemakerHPOJob_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsSagemakerHPOJob_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto}, {
      &scc_info_HPOJobObjective_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base,
      &scc_info_ParameterRanges_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base,
      &scc_info_SagemakerTrainingJob_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base,}};

void InitDefaults_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_ContinuousParameterRange_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IntegerParameterRange_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CategoricalParameterRange_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ParameterRanges_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AlgorithmSpecification_MetricDefinition_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AlgorithmSpecification_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResourceConfig_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StoppingCondition_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VpcConfig_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SagemakerTrainingJob_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HPOJobObjective_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SagemakerHPOJob_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto[12];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto[2];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ContinuousParameterRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ContinuousParameterRange, name_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ContinuousParameterRange, maxvalue_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ContinuousParameterRange, minvalue_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ContinuousParameterRange, scalingtype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::IntegerParameterRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::IntegerParameterRange, name_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::IntegerParameterRange, maxvalue_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::IntegerParameterRange, minvalue_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::IntegerParameterRange, scalingtype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::CategoricalParameterRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::CategoricalParameterRange, name_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::CategoricalParameterRange, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ParameterRanges, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ParameterRanges, continuousparameterranges_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ParameterRanges, integerparameterranges_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ParameterRanges, categoricalparameterranges_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition, name_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition, regex_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::AlgorithmSpecification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::AlgorithmSpecification, trainingimage_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::AlgorithmSpecification, traininginputmode_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::AlgorithmSpecification, algorithmname_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::AlgorithmSpecification, metricdefinitions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ResourceConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ResourceConfig, instancetype_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ResourceConfig, instancecount_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ResourceConfig, volumesizeingb_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::ResourceConfig, volumekmskeyid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::StoppingCondition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::StoppingCondition, maxruntimeinseconds_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::StoppingCondition, maxwaittimeinseconds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::VpcConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::VpcConfig, securitygroupids_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::VpcConfig, subnets_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::SagemakerTrainingJob, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::SagemakerTrainingJob, region_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::SagemakerTrainingJob, rolearn_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::SagemakerTrainingJob, algorithmspecification_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::SagemakerTrainingJob, resourceconfig_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::SagemakerTrainingJob, stoppingcondition_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::SagemakerTrainingJob, vpcconfig_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::SagemakerTrainingJob, enablespottraining_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::HPOJobObjective, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::HPOJobObjective, type_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::HPOJobObjective, metricname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::SagemakerHPOJob, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::SagemakerHPOJob, strategy_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::SagemakerHPOJob, objective_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::SagemakerHPOJob, maxnumberoftrainingjobs_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::SagemakerHPOJob, maxparalleltrainingjobs_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::SagemakerHPOJob, parameterranges_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::SagemakerHPOJob, trainingjob_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::flyteidl::plugins::sagemaker::ContinuousParameterRange)},
  { 9, -1, sizeof(::flyteidl::plugins::sagemaker::IntegerParameterRange)},
  { 18, -1, sizeof(::flyteidl::plugins::sagemaker::CategoricalParameterRange)},
  { 25, -1, sizeof(::flyteidl::plugins::sagemaker::ParameterRanges)},
  { 33, -1, sizeof(::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition)},
  { 40, -1, sizeof(::flyteidl::plugins::sagemaker::AlgorithmSpecification)},
  { 49, -1, sizeof(::flyteidl::plugins::sagemaker::ResourceConfig)},
  { 58, -1, sizeof(::flyteidl::plugins::sagemaker::StoppingCondition)},
  { 65, -1, sizeof(::flyteidl::plugins::sagemaker::VpcConfig)},
  { 72, -1, sizeof(::flyteidl::plugins::sagemaker::SagemakerTrainingJob)},
  { 84, -1, sizeof(::flyteidl::plugins::sagemaker::HPOJobObjective)},
  { 91, -1, sizeof(::flyteidl::plugins::sagemaker::SagemakerHPOJob)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::plugins::sagemaker::_ContinuousParameterRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::plugins::sagemaker::_IntegerParameterRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::plugins::sagemaker::_CategoricalParameterRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::plugins::sagemaker::_ParameterRanges_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::plugins::sagemaker::_AlgorithmSpecification_MetricDefinition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::plugins::sagemaker::_AlgorithmSpecification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::plugins::sagemaker::_ResourceConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::plugins::sagemaker::_StoppingCondition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::plugins::sagemaker::_VpcConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::plugins::sagemaker::_SagemakerTrainingJob_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::plugins::sagemaker::_HPOJobObjective_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::plugins::sagemaker::_SagemakerHPOJob_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto = {
  {}, AddDescriptors_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto, "flyteidl/plugins/sagemaker/sagemaker.proto", schemas,
  file_default_instances, TableStruct_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto::offsets,
  file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto, 12, file_level_enum_descriptors_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto, file_level_service_descriptors_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto,
};

const char descriptor_table_protodef_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto[] =
  "\n*flyteidl/plugins/sagemaker/sagemaker.p"
  "roto\022\032flyteidl.plugins.sagemaker\"\230\001\n\030Con"
  "tinuousParameterRange\022\014\n\004Name\030\001 \001(\t\022\020\n\010M"
  "axValue\030\002 \001(\001\022\020\n\010MinValue\030\003 \001(\001\022J\n\013Scali"
  "ngType\030\004 \001(\01625.flyteidl.plugins.sagemake"
  "r.HyperparameterScalingType\"\225\001\n\025IntegerP"
  "arameterRange\022\014\n\004Name\030\001 \001(\t\022\020\n\010MaxValue\030"
  "\002 \001(\002\022\020\n\010MinValue\030\003 \001(\002\022J\n\013ScalingType\030\004"
  " \001(\01625.flyteidl.plugins.sagemaker.Hyperp"
  "arameterScalingType\"9\n\031CategoricalParame"
  "terRange\022\014\n\004Name\030\001 \001(\t\022\016\n\006Values\030\002 \003(\t\"\230"
  "\002\n\017ParameterRanges\022W\n\031ContinuousParamete"
  "rRanges\030\001 \003(\01324.flyteidl.plugins.sagemak"
  "er.ContinuousParameterRange\022Q\n\026IntegerPa"
  "rameterRanges\030\002 \003(\01321.flyteidl.plugins.s"
  "agemaker.IntegerParameterRange\022Y\n\032Catego"
  "ricalParameterRanges\030\003 \003(\01325.flyteidl.pl"
  "ugins.sagemaker.CategoricalParameterRang"
  "e\"\362\001\n\026AlgorithmSpecification\022\025\n\rTraining"
  "Image\030\001 \001(\t\022\031\n\021TrainingInputMode\030\002 \001(\t\022\025"
  "\n\rAlgorithmName\030\003 \001(\t\022^\n\021MetricDefinitio"
  "ns\030\004 \003(\0132C.flyteidl.plugins.sagemaker.Al"
  "gorithmSpecification.MetricDefinition\032/\n"
  "\020MetricDefinition\022\014\n\004Name\030\001 \001(\t\022\r\n\005Regex"
  "\030\002 \001(\t\"m\n\016ResourceConfig\022\024\n\014InstanceType"
  "\030\001 \001(\t\022\025\n\rInstanceCount\030\002 \001(\003\022\026\n\016VolumeS"
  "izeInGB\030\003 \001(\003\022\026\n\016VolumeKmsKeyId\030\004 \001(\t\"N\n"
  "\021StoppingCondition\022\033\n\023MaxRuntimeInSecond"
  "s\030\001 \001(\003\022\034\n\024MaxWaitTimeInSeconds\030\002 \001(\003\"6\n"
  "\tVpcConfig\022\030\n\020SecurityGroupIds\030\001 \003(\t\022\017\n\007"
  "Subnets\030\002 \003(\t\"\357\002\n\024SagemakerTrainingJob\022\016"
  "\n\006Region\030\001 \001(\t\022\017\n\007RoleArn\030\002 \001(\t\022R\n\026Algor"
  "ithmSpecification\030\003 \001(\01322.flyteidl.plugi"
  "ns.sagemaker.AlgorithmSpecification\022B\n\016R"
  "esourceConfig\030\004 \001(\0132*.flyteidl.plugins.s"
  "agemaker.ResourceConfig\022H\n\021StoppingCondi"
  "tion\030\005 \001(\0132-.flyteidl.plugins.sagemaker."
  "StoppingCondition\0228\n\tVpcConfig\030\006 \001(\0132%.f"
  "lyteidl.plugins.sagemaker.VpcConfig\022\032\n\022E"
  "nableSpotTraining\030\007 \001(\010\"\247\001\n\017HPOJobObject"
  "ive\022M\n\004Type\030\001 \001(\0162\?.flyteidl.plugins.sag"
  "emaker.HPOJobObjective.HPOJobObjectiveTy"
  "pe\022\022\n\nMetricName\030\002 \001(\t\"1\n\023HPOJobObjectiv"
  "eType\022\014\n\010MINIMIZE\020\000\022\014\n\010MAXIMIZE\020\001\"\262\002\n\017Sa"
  "gemakerHPOJob\022\020\n\010Strategy\030\001 \001(\t\022>\n\tObjec"
  "tive\030\002 \001(\0132+.flyteidl.plugins.sagemaker."
  "HPOJobObjective\022\037\n\027MaxNumberOfTrainingJo"
  "bs\030\003 \001(\003\022\037\n\027MaxParallelTrainingJobs\030\004 \001("
  "\003\022D\n\017ParameterRanges\030\005 \001(\0132+.flyteidl.pl"
  "ugins.sagemaker.ParameterRanges\022E\n\013Train"
  "ingJob\030\006 \001(\01320.flyteidl.plugins.sagemake"
  "r.SagemakerTrainingJob*Z\n\031Hyperparameter"
  "ScalingType\022\010\n\004AUTO\020\000\022\n\n\006LINEAR\020\001\022\017\n\013LOG"
  "ARITHMIC\020\002\022\026\n\022REVERSELOGARITHMIC\020\003B5Z3gi"
  "thub.com/lyft/flyteidl/gen/pb-go/flyteid"
  "l/pluginsb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto = {
  false, InitDefaults_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto, 
  descriptor_table_protodef_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto,
  "flyteidl/plugins/sagemaker/sagemaker.proto", &assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto, 2217,
};

void AddDescriptors_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto = []() { AddDescriptors_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto(); return true; }();
namespace flyteidl {
namespace plugins {
namespace sagemaker {
const ::google::protobuf::EnumDescriptor* HPOJobObjective_HPOJobObjectiveType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto);
  return file_level_enum_descriptors_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto[0];
}
bool HPOJobObjective_HPOJobObjectiveType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const HPOJobObjective_HPOJobObjectiveType HPOJobObjective::MINIMIZE;
const HPOJobObjective_HPOJobObjectiveType HPOJobObjective::MAXIMIZE;
const HPOJobObjective_HPOJobObjectiveType HPOJobObjective::HPOJobObjectiveType_MIN;
const HPOJobObjective_HPOJobObjectiveType HPOJobObjective::HPOJobObjectiveType_MAX;
const int HPOJobObjective::HPOJobObjectiveType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* HyperparameterScalingType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto);
  return file_level_enum_descriptors_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto[1];
}
bool HyperparameterScalingType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ContinuousParameterRange::InitAsDefaultInstance() {
}
class ContinuousParameterRange::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContinuousParameterRange::kNameFieldNumber;
const int ContinuousParameterRange::kMaxValueFieldNumber;
const int ContinuousParameterRange::kMinValueFieldNumber;
const int ContinuousParameterRange::kScalingTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContinuousParameterRange::ContinuousParameterRange()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.plugins.sagemaker.ContinuousParameterRange)
}
ContinuousParameterRange::ContinuousParameterRange(const ContinuousParameterRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&maxvalue_, &from.maxvalue_,
    static_cast<size_t>(reinterpret_cast<char*>(&scalingtype_) -
    reinterpret_cast<char*>(&maxvalue_)) + sizeof(scalingtype_));
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.ContinuousParameterRange)
}

void ContinuousParameterRange::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ContinuousParameterRange_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&maxvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scalingtype_) -
      reinterpret_cast<char*>(&maxvalue_)) + sizeof(scalingtype_));
}

ContinuousParameterRange::~ContinuousParameterRange() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.ContinuousParameterRange)
  SharedDtor();
}

void ContinuousParameterRange::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ContinuousParameterRange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ContinuousParameterRange& ContinuousParameterRange::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ContinuousParameterRange_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  return *internal_default_instance();
}


void ContinuousParameterRange::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.plugins.sagemaker.ContinuousParameterRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&maxvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scalingtype_) -
      reinterpret_cast<char*>(&maxvalue_)) + sizeof(scalingtype_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ContinuousParameterRange::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ContinuousParameterRange*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string Name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.plugins.sagemaker.ContinuousParameterRange.Name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // double MaxValue = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_maxvalue(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double MinValue = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 25) goto handle_unusual;
        msg->set_minvalue(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // .flyteidl.plugins.sagemaker.HyperparameterScalingType ScalingType = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_scalingtype(static_cast<::flyteidl::plugins::sagemaker::HyperparameterScalingType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ContinuousParameterRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.plugins.sagemaker.ContinuousParameterRange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.plugins.sagemaker.ContinuousParameterRange.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double MaxValue = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &maxvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double MinValue = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (25 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &minvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.plugins.sagemaker.HyperparameterScalingType ScalingType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_scalingtype(static_cast< ::flyteidl::plugins::sagemaker::HyperparameterScalingType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.plugins.sagemaker.ContinuousParameterRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.plugins.sagemaker.ContinuousParameterRange)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ContinuousParameterRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.plugins.sagemaker.ContinuousParameterRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.ContinuousParameterRange.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // double MaxValue = 2;
  if (this->maxvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->maxvalue(), output);
  }

  // double MinValue = 3;
  if (this->minvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->minvalue(), output);
  }

  // .flyteidl.plugins.sagemaker.HyperparameterScalingType ScalingType = 4;
  if (this->scalingtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->scalingtype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.plugins.sagemaker.ContinuousParameterRange)
}

::google::protobuf::uint8* ContinuousParameterRange::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.plugins.sagemaker.ContinuousParameterRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.ContinuousParameterRange.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // double MaxValue = 2;
  if (this->maxvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->maxvalue(), target);
  }

  // double MinValue = 3;
  if (this->minvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->minvalue(), target);
  }

  // .flyteidl.plugins.sagemaker.HyperparameterScalingType ScalingType = 4;
  if (this->scalingtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->scalingtype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.plugins.sagemaker.ContinuousParameterRange)
  return target;
}

size_t ContinuousParameterRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.plugins.sagemaker.ContinuousParameterRange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // double MaxValue = 2;
  if (this->maxvalue() != 0) {
    total_size += 1 + 8;
  }

  // double MinValue = 3;
  if (this->minvalue() != 0) {
    total_size += 1 + 8;
  }

  // .flyteidl.plugins.sagemaker.HyperparameterScalingType ScalingType = 4;
  if (this->scalingtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->scalingtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ContinuousParameterRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.plugins.sagemaker.ContinuousParameterRange)
  GOOGLE_DCHECK_NE(&from, this);
  const ContinuousParameterRange* source =
      ::google::protobuf::DynamicCastToGenerated<ContinuousParameterRange>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.plugins.sagemaker.ContinuousParameterRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.plugins.sagemaker.ContinuousParameterRange)
    MergeFrom(*source);
  }
}

void ContinuousParameterRange::MergeFrom(const ContinuousParameterRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.plugins.sagemaker.ContinuousParameterRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.maxvalue() != 0) {
    set_maxvalue(from.maxvalue());
  }
  if (from.minvalue() != 0) {
    set_minvalue(from.minvalue());
  }
  if (from.scalingtype() != 0) {
    set_scalingtype(from.scalingtype());
  }
}

void ContinuousParameterRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.plugins.sagemaker.ContinuousParameterRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContinuousParameterRange::CopyFrom(const ContinuousParameterRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.plugins.sagemaker.ContinuousParameterRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContinuousParameterRange::IsInitialized() const {
  return true;
}

void ContinuousParameterRange::Swap(ContinuousParameterRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContinuousParameterRange::InternalSwap(ContinuousParameterRange* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(maxvalue_, other->maxvalue_);
  swap(minvalue_, other->minvalue_);
  swap(scalingtype_, other->scalingtype_);
}

::google::protobuf::Metadata ContinuousParameterRange::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto);
  return ::file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto[kIndexInFileMessages];
}


// ===================================================================

void IntegerParameterRange::InitAsDefaultInstance() {
}
class IntegerParameterRange::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IntegerParameterRange::kNameFieldNumber;
const int IntegerParameterRange::kMaxValueFieldNumber;
const int IntegerParameterRange::kMinValueFieldNumber;
const int IntegerParameterRange::kScalingTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IntegerParameterRange::IntegerParameterRange()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.plugins.sagemaker.IntegerParameterRange)
}
IntegerParameterRange::IntegerParameterRange(const IntegerParameterRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&maxvalue_, &from.maxvalue_,
    static_cast<size_t>(reinterpret_cast<char*>(&scalingtype_) -
    reinterpret_cast<char*>(&maxvalue_)) + sizeof(scalingtype_));
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.IntegerParameterRange)
}

void IntegerParameterRange::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_IntegerParameterRange_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&maxvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scalingtype_) -
      reinterpret_cast<char*>(&maxvalue_)) + sizeof(scalingtype_));
}

IntegerParameterRange::~IntegerParameterRange() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.IntegerParameterRange)
  SharedDtor();
}

void IntegerParameterRange::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IntegerParameterRange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IntegerParameterRange& IntegerParameterRange::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_IntegerParameterRange_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  return *internal_default_instance();
}


void IntegerParameterRange::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.plugins.sagemaker.IntegerParameterRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&maxvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scalingtype_) -
      reinterpret_cast<char*>(&maxvalue_)) + sizeof(scalingtype_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IntegerParameterRange::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<IntegerParameterRange*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string Name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.plugins.sagemaker.IntegerParameterRange.Name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // float MaxValue = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_maxvalue(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // float MinValue = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_minvalue(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // .flyteidl.plugins.sagemaker.HyperparameterScalingType ScalingType = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_scalingtype(static_cast<::flyteidl::plugins::sagemaker::HyperparameterScalingType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IntegerParameterRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.plugins.sagemaker.IntegerParameterRange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.plugins.sagemaker.IntegerParameterRange.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float MaxValue = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &maxvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float MinValue = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &minvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.plugins.sagemaker.HyperparameterScalingType ScalingType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_scalingtype(static_cast< ::flyteidl::plugins::sagemaker::HyperparameterScalingType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.plugins.sagemaker.IntegerParameterRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.plugins.sagemaker.IntegerParameterRange)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IntegerParameterRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.plugins.sagemaker.IntegerParameterRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.IntegerParameterRange.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // float MaxValue = 2;
  if (this->maxvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->maxvalue(), output);
  }

  // float MinValue = 3;
  if (this->minvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->minvalue(), output);
  }

  // .flyteidl.plugins.sagemaker.HyperparameterScalingType ScalingType = 4;
  if (this->scalingtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->scalingtype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.plugins.sagemaker.IntegerParameterRange)
}

::google::protobuf::uint8* IntegerParameterRange::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.plugins.sagemaker.IntegerParameterRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.IntegerParameterRange.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // float MaxValue = 2;
  if (this->maxvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->maxvalue(), target);
  }

  // float MinValue = 3;
  if (this->minvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->minvalue(), target);
  }

  // .flyteidl.plugins.sagemaker.HyperparameterScalingType ScalingType = 4;
  if (this->scalingtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->scalingtype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.plugins.sagemaker.IntegerParameterRange)
  return target;
}

size_t IntegerParameterRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.plugins.sagemaker.IntegerParameterRange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // float MaxValue = 2;
  if (this->maxvalue() != 0) {
    total_size += 1 + 4;
  }

  // float MinValue = 3;
  if (this->minvalue() != 0) {
    total_size += 1 + 4;
  }

  // .flyteidl.plugins.sagemaker.HyperparameterScalingType ScalingType = 4;
  if (this->scalingtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->scalingtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntegerParameterRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.plugins.sagemaker.IntegerParameterRange)
  GOOGLE_DCHECK_NE(&from, this);
  const IntegerParameterRange* source =
      ::google::protobuf::DynamicCastToGenerated<IntegerParameterRange>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.plugins.sagemaker.IntegerParameterRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.plugins.sagemaker.IntegerParameterRange)
    MergeFrom(*source);
  }
}

void IntegerParameterRange::MergeFrom(const IntegerParameterRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.plugins.sagemaker.IntegerParameterRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.maxvalue() != 0) {
    set_maxvalue(from.maxvalue());
  }
  if (from.minvalue() != 0) {
    set_minvalue(from.minvalue());
  }
  if (from.scalingtype() != 0) {
    set_scalingtype(from.scalingtype());
  }
}

void IntegerParameterRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.plugins.sagemaker.IntegerParameterRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntegerParameterRange::CopyFrom(const IntegerParameterRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.plugins.sagemaker.IntegerParameterRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntegerParameterRange::IsInitialized() const {
  return true;
}

void IntegerParameterRange::Swap(IntegerParameterRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IntegerParameterRange::InternalSwap(IntegerParameterRange* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(maxvalue_, other->maxvalue_);
  swap(minvalue_, other->minvalue_);
  swap(scalingtype_, other->scalingtype_);
}

::google::protobuf::Metadata IntegerParameterRange::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto);
  return ::file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CategoricalParameterRange::InitAsDefaultInstance() {
}
class CategoricalParameterRange::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CategoricalParameterRange::kNameFieldNumber;
const int CategoricalParameterRange::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CategoricalParameterRange::CategoricalParameterRange()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.plugins.sagemaker.CategoricalParameterRange)
}
CategoricalParameterRange::CategoricalParameterRange(const CategoricalParameterRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.CategoricalParameterRange)
}

void CategoricalParameterRange::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CategoricalParameterRange_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CategoricalParameterRange::~CategoricalParameterRange() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.CategoricalParameterRange)
  SharedDtor();
}

void CategoricalParameterRange::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CategoricalParameterRange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CategoricalParameterRange& CategoricalParameterRange::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CategoricalParameterRange_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  return *internal_default_instance();
}


void CategoricalParameterRange::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.plugins.sagemaker.CategoricalParameterRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CategoricalParameterRange::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CategoricalParameterRange*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string Name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.plugins.sagemaker.CategoricalParameterRange.Name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string Values = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("flyteidl.plugins.sagemaker.CategoricalParameterRange.Values");
          object = msg->add_values();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CategoricalParameterRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.plugins.sagemaker.CategoricalParameterRange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.plugins.sagemaker.CategoricalParameterRange.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string Values = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_values()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->values(this->values_size() - 1).data(),
            static_cast<int>(this->values(this->values_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.plugins.sagemaker.CategoricalParameterRange.Values"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.plugins.sagemaker.CategoricalParameterRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.plugins.sagemaker.CategoricalParameterRange)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CategoricalParameterRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.plugins.sagemaker.CategoricalParameterRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.CategoricalParameterRange.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string Values = 2;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values(i).data(), static_cast<int>(this->values(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.CategoricalParameterRange.Values");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->values(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.plugins.sagemaker.CategoricalParameterRange)
}

::google::protobuf::uint8* CategoricalParameterRange::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.plugins.sagemaker.CategoricalParameterRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.CategoricalParameterRange.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string Values = 2;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values(i).data(), static_cast<int>(this->values(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.CategoricalParameterRange.Values");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->values(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.plugins.sagemaker.CategoricalParameterRange)
  return target;
}

size_t CategoricalParameterRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.plugins.sagemaker.CategoricalParameterRange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string Values = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->values_size());
  for (int i = 0, n = this->values_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->values(i));
  }

  // string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CategoricalParameterRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.plugins.sagemaker.CategoricalParameterRange)
  GOOGLE_DCHECK_NE(&from, this);
  const CategoricalParameterRange* source =
      ::google::protobuf::DynamicCastToGenerated<CategoricalParameterRange>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.plugins.sagemaker.CategoricalParameterRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.plugins.sagemaker.CategoricalParameterRange)
    MergeFrom(*source);
  }
}

void CategoricalParameterRange::MergeFrom(const CategoricalParameterRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.plugins.sagemaker.CategoricalParameterRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void CategoricalParameterRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.plugins.sagemaker.CategoricalParameterRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CategoricalParameterRange::CopyFrom(const CategoricalParameterRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.plugins.sagemaker.CategoricalParameterRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CategoricalParameterRange::IsInitialized() const {
  return true;
}

void CategoricalParameterRange::Swap(CategoricalParameterRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CategoricalParameterRange::InternalSwap(CategoricalParameterRange* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  values_.InternalSwap(CastToBase(&other->values_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CategoricalParameterRange::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto);
  return ::file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ParameterRanges::InitAsDefaultInstance() {
}
class ParameterRanges::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParameterRanges::kContinuousParameterRangesFieldNumber;
const int ParameterRanges::kIntegerParameterRangesFieldNumber;
const int ParameterRanges::kCategoricalParameterRangesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParameterRanges::ParameterRanges()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.plugins.sagemaker.ParameterRanges)
}
ParameterRanges::ParameterRanges(const ParameterRanges& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      continuousparameterranges_(from.continuousparameterranges_),
      integerparameterranges_(from.integerparameterranges_),
      categoricalparameterranges_(from.categoricalparameterranges_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.ParameterRanges)
}

void ParameterRanges::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ParameterRanges_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
}

ParameterRanges::~ParameterRanges() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.ParameterRanges)
  SharedDtor();
}

void ParameterRanges::SharedDtor() {
}

void ParameterRanges::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParameterRanges& ParameterRanges::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ParameterRanges_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  return *internal_default_instance();
}


void ParameterRanges::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.plugins.sagemaker.ParameterRanges)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  continuousparameterranges_.Clear();
  integerparameterranges_.Clear();
  categoricalparameterranges_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ParameterRanges::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ParameterRanges*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .flyteidl.plugins.sagemaker.ContinuousParameterRange ContinuousParameterRanges = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::flyteidl::plugins::sagemaker::ContinuousParameterRange::_InternalParse;
          object = msg->add_continuousparameterranges();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated .flyteidl.plugins.sagemaker.IntegerParameterRange IntegerParameterRanges = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::flyteidl::plugins::sagemaker::IntegerParameterRange::_InternalParse;
          object = msg->add_integerparameterranges();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated .flyteidl.plugins.sagemaker.CategoricalParameterRange CategoricalParameterRanges = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::flyteidl::plugins::sagemaker::CategoricalParameterRange::_InternalParse;
          object = msg->add_categoricalparameterranges();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ParameterRanges::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.plugins.sagemaker.ParameterRanges)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .flyteidl.plugins.sagemaker.ContinuousParameterRange ContinuousParameterRanges = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_continuousparameterranges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .flyteidl.plugins.sagemaker.IntegerParameterRange IntegerParameterRanges = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_integerparameterranges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .flyteidl.plugins.sagemaker.CategoricalParameterRange CategoricalParameterRanges = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_categoricalparameterranges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.plugins.sagemaker.ParameterRanges)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.plugins.sagemaker.ParameterRanges)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ParameterRanges::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.plugins.sagemaker.ParameterRanges)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .flyteidl.plugins.sagemaker.ContinuousParameterRange ContinuousParameterRanges = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->continuousparameterranges_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->continuousparameterranges(static_cast<int>(i)),
      output);
  }

  // repeated .flyteidl.plugins.sagemaker.IntegerParameterRange IntegerParameterRanges = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->integerparameterranges_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->integerparameterranges(static_cast<int>(i)),
      output);
  }

  // repeated .flyteidl.plugins.sagemaker.CategoricalParameterRange CategoricalParameterRanges = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->categoricalparameterranges_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->categoricalparameterranges(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.plugins.sagemaker.ParameterRanges)
}

::google::protobuf::uint8* ParameterRanges::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.plugins.sagemaker.ParameterRanges)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .flyteidl.plugins.sagemaker.ContinuousParameterRange ContinuousParameterRanges = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->continuousparameterranges_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->continuousparameterranges(static_cast<int>(i)), target);
  }

  // repeated .flyteidl.plugins.sagemaker.IntegerParameterRange IntegerParameterRanges = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->integerparameterranges_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->integerparameterranges(static_cast<int>(i)), target);
  }

  // repeated .flyteidl.plugins.sagemaker.CategoricalParameterRange CategoricalParameterRanges = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->categoricalparameterranges_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->categoricalparameterranges(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.plugins.sagemaker.ParameterRanges)
  return target;
}

size_t ParameterRanges::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.plugins.sagemaker.ParameterRanges)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .flyteidl.plugins.sagemaker.ContinuousParameterRange ContinuousParameterRanges = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->continuousparameterranges_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->continuousparameterranges(static_cast<int>(i)));
    }
  }

  // repeated .flyteidl.plugins.sagemaker.IntegerParameterRange IntegerParameterRanges = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->integerparameterranges_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->integerparameterranges(static_cast<int>(i)));
    }
  }

  // repeated .flyteidl.plugins.sagemaker.CategoricalParameterRange CategoricalParameterRanges = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->categoricalparameterranges_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->categoricalparameterranges(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParameterRanges::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.plugins.sagemaker.ParameterRanges)
  GOOGLE_DCHECK_NE(&from, this);
  const ParameterRanges* source =
      ::google::protobuf::DynamicCastToGenerated<ParameterRanges>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.plugins.sagemaker.ParameterRanges)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.plugins.sagemaker.ParameterRanges)
    MergeFrom(*source);
  }
}

void ParameterRanges::MergeFrom(const ParameterRanges& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.plugins.sagemaker.ParameterRanges)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  continuousparameterranges_.MergeFrom(from.continuousparameterranges_);
  integerparameterranges_.MergeFrom(from.integerparameterranges_);
  categoricalparameterranges_.MergeFrom(from.categoricalparameterranges_);
}

void ParameterRanges::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.plugins.sagemaker.ParameterRanges)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParameterRanges::CopyFrom(const ParameterRanges& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.plugins.sagemaker.ParameterRanges)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParameterRanges::IsInitialized() const {
  return true;
}

void ParameterRanges::Swap(ParameterRanges* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParameterRanges::InternalSwap(ParameterRanges* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&continuousparameterranges_)->InternalSwap(CastToBase(&other->continuousparameterranges_));
  CastToBase(&integerparameterranges_)->InternalSwap(CastToBase(&other->integerparameterranges_));
  CastToBase(&categoricalparameterranges_)->InternalSwap(CastToBase(&other->categoricalparameterranges_));
}

::google::protobuf::Metadata ParameterRanges::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto);
  return ::file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AlgorithmSpecification_MetricDefinition::InitAsDefaultInstance() {
}
class AlgorithmSpecification_MetricDefinition::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlgorithmSpecification_MetricDefinition::kNameFieldNumber;
const int AlgorithmSpecification_MetricDefinition::kRegexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlgorithmSpecification_MetricDefinition::AlgorithmSpecification_MetricDefinition()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
}
AlgorithmSpecification_MetricDefinition::AlgorithmSpecification_MetricDefinition(const AlgorithmSpecification_MetricDefinition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  regex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.regex().size() > 0) {
    regex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regex_);
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
}

void AlgorithmSpecification_MetricDefinition::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AlgorithmSpecification_MetricDefinition_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AlgorithmSpecification_MetricDefinition::~AlgorithmSpecification_MetricDefinition() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  SharedDtor();
}

void AlgorithmSpecification_MetricDefinition::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regex_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AlgorithmSpecification_MetricDefinition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AlgorithmSpecification_MetricDefinition& AlgorithmSpecification_MetricDefinition::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AlgorithmSpecification_MetricDefinition_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  return *internal_default_instance();
}


void AlgorithmSpecification_MetricDefinition::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AlgorithmSpecification_MetricDefinition::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AlgorithmSpecification_MetricDefinition*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string Name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.Name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string Regex = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.Regex");
        object = msg->mutable_regex();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AlgorithmSpecification_MetricDefinition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Regex = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regex()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->regex().data(), static_cast<int>(this->regex().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.Regex"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AlgorithmSpecification_MetricDefinition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string Regex = 2;
  if (this->regex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regex().data(), static_cast<int>(this->regex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.Regex");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->regex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
}

::google::protobuf::uint8* AlgorithmSpecification_MetricDefinition::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string Regex = 2;
  if (this->regex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regex().data(), static_cast<int>(this->regex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.Regex");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->regex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  return target;
}

size_t AlgorithmSpecification_MetricDefinition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string Regex = 2;
  if (this->regex().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->regex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlgorithmSpecification_MetricDefinition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  GOOGLE_DCHECK_NE(&from, this);
  const AlgorithmSpecification_MetricDefinition* source =
      ::google::protobuf::DynamicCastToGenerated<AlgorithmSpecification_MetricDefinition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
    MergeFrom(*source);
  }
}

void AlgorithmSpecification_MetricDefinition::MergeFrom(const AlgorithmSpecification_MetricDefinition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.regex().size() > 0) {

    regex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regex_);
  }
}

void AlgorithmSpecification_MetricDefinition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlgorithmSpecification_MetricDefinition::CopyFrom(const AlgorithmSpecification_MetricDefinition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlgorithmSpecification_MetricDefinition::IsInitialized() const {
  return true;
}

void AlgorithmSpecification_MetricDefinition::Swap(AlgorithmSpecification_MetricDefinition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlgorithmSpecification_MetricDefinition::InternalSwap(AlgorithmSpecification_MetricDefinition* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  regex_.Swap(&other->regex_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata AlgorithmSpecification_MetricDefinition::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto);
  return ::file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AlgorithmSpecification::InitAsDefaultInstance() {
}
class AlgorithmSpecification::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlgorithmSpecification::kTrainingImageFieldNumber;
const int AlgorithmSpecification::kTrainingInputModeFieldNumber;
const int AlgorithmSpecification::kAlgorithmNameFieldNumber;
const int AlgorithmSpecification::kMetricDefinitionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlgorithmSpecification::AlgorithmSpecification()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.plugins.sagemaker.AlgorithmSpecification)
}
AlgorithmSpecification::AlgorithmSpecification(const AlgorithmSpecification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      metricdefinitions_(from.metricdefinitions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  trainingimage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trainingimage().size() > 0) {
    trainingimage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trainingimage_);
  }
  traininginputmode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.traininginputmode().size() > 0) {
    traininginputmode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.traininginputmode_);
  }
  algorithmname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.algorithmname().size() > 0) {
    algorithmname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.algorithmname_);
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.AlgorithmSpecification)
}

void AlgorithmSpecification::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AlgorithmSpecification_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  trainingimage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  traininginputmode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  algorithmname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AlgorithmSpecification::~AlgorithmSpecification() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  SharedDtor();
}

void AlgorithmSpecification::SharedDtor() {
  trainingimage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  traininginputmode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  algorithmname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AlgorithmSpecification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AlgorithmSpecification& AlgorithmSpecification::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AlgorithmSpecification_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  return *internal_default_instance();
}


void AlgorithmSpecification::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metricdefinitions_.Clear();
  trainingimage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  traininginputmode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  algorithmname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AlgorithmSpecification::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AlgorithmSpecification*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string TrainingImage = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.plugins.sagemaker.AlgorithmSpecification.TrainingImage");
        object = msg->mutable_trainingimage();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string TrainingInputMode = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.plugins.sagemaker.AlgorithmSpecification.TrainingInputMode");
        object = msg->mutable_traininginputmode();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string AlgorithmName = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.plugins.sagemaker.AlgorithmSpecification.AlgorithmName");
        object = msg->mutable_algorithmname();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition MetricDefinitions = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition::_InternalParse;
          object = msg->add_metricdefinitions();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AlgorithmSpecification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string TrainingImage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trainingimage()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trainingimage().data(), static_cast<int>(this->trainingimage().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.plugins.sagemaker.AlgorithmSpecification.TrainingImage"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string TrainingInputMode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_traininginputmode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->traininginputmode().data(), static_cast<int>(this->traininginputmode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.plugins.sagemaker.AlgorithmSpecification.TrainingInputMode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string AlgorithmName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_algorithmname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->algorithmname().data(), static_cast<int>(this->algorithmname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.plugins.sagemaker.AlgorithmSpecification.AlgorithmName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition MetricDefinitions = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_metricdefinitions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AlgorithmSpecification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string TrainingImage = 1;
  if (this->trainingimage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trainingimage().data(), static_cast<int>(this->trainingimage().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.AlgorithmSpecification.TrainingImage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->trainingimage(), output);
  }

  // string TrainingInputMode = 2;
  if (this->traininginputmode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->traininginputmode().data(), static_cast<int>(this->traininginputmode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.AlgorithmSpecification.TrainingInputMode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->traininginputmode(), output);
  }

  // string AlgorithmName = 3;
  if (this->algorithmname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->algorithmname().data(), static_cast<int>(this->algorithmname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.AlgorithmSpecification.AlgorithmName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->algorithmname(), output);
  }

  // repeated .flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition MetricDefinitions = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metricdefinitions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->metricdefinitions(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.plugins.sagemaker.AlgorithmSpecification)
}

::google::protobuf::uint8* AlgorithmSpecification::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string TrainingImage = 1;
  if (this->trainingimage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trainingimage().data(), static_cast<int>(this->trainingimage().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.AlgorithmSpecification.TrainingImage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->trainingimage(), target);
  }

  // string TrainingInputMode = 2;
  if (this->traininginputmode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->traininginputmode().data(), static_cast<int>(this->traininginputmode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.AlgorithmSpecification.TrainingInputMode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->traininginputmode(), target);
  }

  // string AlgorithmName = 3;
  if (this->algorithmname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->algorithmname().data(), static_cast<int>(this->algorithmname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.AlgorithmSpecification.AlgorithmName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->algorithmname(), target);
  }

  // repeated .flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition MetricDefinitions = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metricdefinitions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->metricdefinitions(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  return target;
}

size_t AlgorithmSpecification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition MetricDefinitions = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->metricdefinitions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->metricdefinitions(static_cast<int>(i)));
    }
  }

  // string TrainingImage = 1;
  if (this->trainingimage().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trainingimage());
  }

  // string TrainingInputMode = 2;
  if (this->traininginputmode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->traininginputmode());
  }

  // string AlgorithmName = 3;
  if (this->algorithmname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->algorithmname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlgorithmSpecification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  GOOGLE_DCHECK_NE(&from, this);
  const AlgorithmSpecification* source =
      ::google::protobuf::DynamicCastToGenerated<AlgorithmSpecification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.plugins.sagemaker.AlgorithmSpecification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.plugins.sagemaker.AlgorithmSpecification)
    MergeFrom(*source);
  }
}

void AlgorithmSpecification::MergeFrom(const AlgorithmSpecification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metricdefinitions_.MergeFrom(from.metricdefinitions_);
  if (from.trainingimage().size() > 0) {

    trainingimage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trainingimage_);
  }
  if (from.traininginputmode().size() > 0) {

    traininginputmode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.traininginputmode_);
  }
  if (from.algorithmname().size() > 0) {

    algorithmname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.algorithmname_);
  }
}

void AlgorithmSpecification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlgorithmSpecification::CopyFrom(const AlgorithmSpecification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlgorithmSpecification::IsInitialized() const {
  return true;
}

void AlgorithmSpecification::Swap(AlgorithmSpecification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlgorithmSpecification::InternalSwap(AlgorithmSpecification* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&metricdefinitions_)->InternalSwap(CastToBase(&other->metricdefinitions_));
  trainingimage_.Swap(&other->trainingimage_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  traininginputmode_.Swap(&other->traininginputmode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  algorithmname_.Swap(&other->algorithmname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata AlgorithmSpecification::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto);
  return ::file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ResourceConfig::InitAsDefaultInstance() {
}
class ResourceConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceConfig::kInstanceTypeFieldNumber;
const int ResourceConfig::kInstanceCountFieldNumber;
const int ResourceConfig::kVolumeSizeInGBFieldNumber;
const int ResourceConfig::kVolumeKmsKeyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceConfig::ResourceConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.plugins.sagemaker.ResourceConfig)
}
ResourceConfig::ResourceConfig(const ResourceConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instancetype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instancetype().size() > 0) {
    instancetype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instancetype_);
  }
  volumekmskeyid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.volumekmskeyid().size() > 0) {
    volumekmskeyid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.volumekmskeyid_);
  }
  ::memcpy(&instancecount_, &from.instancecount_,
    static_cast<size_t>(reinterpret_cast<char*>(&volumesizeingb_) -
    reinterpret_cast<char*>(&instancecount_)) + sizeof(volumesizeingb_));
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.ResourceConfig)
}

void ResourceConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ResourceConfig_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  instancetype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volumekmskeyid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&instancecount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&volumesizeingb_) -
      reinterpret_cast<char*>(&instancecount_)) + sizeof(volumesizeingb_));
}

ResourceConfig::~ResourceConfig() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.ResourceConfig)
  SharedDtor();
}

void ResourceConfig::SharedDtor() {
  instancetype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volumekmskeyid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResourceConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResourceConfig& ResourceConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ResourceConfig_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  return *internal_default_instance();
}


void ResourceConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.plugins.sagemaker.ResourceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instancetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volumekmskeyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&instancecount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&volumesizeingb_) -
      reinterpret_cast<char*>(&instancecount_)) + sizeof(volumesizeingb_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResourceConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ResourceConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string InstanceType = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.plugins.sagemaker.ResourceConfig.InstanceType");
        object = msg->mutable_instancetype();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int64 InstanceCount = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_instancecount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 VolumeSizeInGB = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_volumesizeingb(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string VolumeKmsKeyId = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.plugins.sagemaker.ResourceConfig.VolumeKmsKeyId");
        object = msg->mutable_volumekmskeyid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResourceConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.plugins.sagemaker.ResourceConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string InstanceType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instancetype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instancetype().data(), static_cast<int>(this->instancetype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.plugins.sagemaker.ResourceConfig.InstanceType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 InstanceCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &instancecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 VolumeSizeInGB = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &volumesizeingb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string VolumeKmsKeyId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_volumekmskeyid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->volumekmskeyid().data(), static_cast<int>(this->volumekmskeyid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.plugins.sagemaker.ResourceConfig.VolumeKmsKeyId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.plugins.sagemaker.ResourceConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.plugins.sagemaker.ResourceConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResourceConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.plugins.sagemaker.ResourceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string InstanceType = 1;
  if (this->instancetype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instancetype().data(), static_cast<int>(this->instancetype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.ResourceConfig.InstanceType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->instancetype(), output);
  }

  // int64 InstanceCount = 2;
  if (this->instancecount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->instancecount(), output);
  }

  // int64 VolumeSizeInGB = 3;
  if (this->volumesizeingb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->volumesizeingb(), output);
  }

  // string VolumeKmsKeyId = 4;
  if (this->volumekmskeyid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->volumekmskeyid().data(), static_cast<int>(this->volumekmskeyid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.ResourceConfig.VolumeKmsKeyId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->volumekmskeyid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.plugins.sagemaker.ResourceConfig)
}

::google::protobuf::uint8* ResourceConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.plugins.sagemaker.ResourceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string InstanceType = 1;
  if (this->instancetype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instancetype().data(), static_cast<int>(this->instancetype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.ResourceConfig.InstanceType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->instancetype(), target);
  }

  // int64 InstanceCount = 2;
  if (this->instancecount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->instancecount(), target);
  }

  // int64 VolumeSizeInGB = 3;
  if (this->volumesizeingb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->volumesizeingb(), target);
  }

  // string VolumeKmsKeyId = 4;
  if (this->volumekmskeyid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->volumekmskeyid().data(), static_cast<int>(this->volumekmskeyid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.ResourceConfig.VolumeKmsKeyId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->volumekmskeyid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.plugins.sagemaker.ResourceConfig)
  return target;
}

size_t ResourceConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.plugins.sagemaker.ResourceConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string InstanceType = 1;
  if (this->instancetype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instancetype());
  }

  // string VolumeKmsKeyId = 4;
  if (this->volumekmskeyid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->volumekmskeyid());
  }

  // int64 InstanceCount = 2;
  if (this->instancecount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->instancecount());
  }

  // int64 VolumeSizeInGB = 3;
  if (this->volumesizeingb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->volumesizeingb());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.plugins.sagemaker.ResourceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceConfig* source =
      ::google::protobuf::DynamicCastToGenerated<ResourceConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.plugins.sagemaker.ResourceConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.plugins.sagemaker.ResourceConfig)
    MergeFrom(*source);
  }
}

void ResourceConfig::MergeFrom(const ResourceConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.plugins.sagemaker.ResourceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instancetype().size() > 0) {

    instancetype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instancetype_);
  }
  if (from.volumekmskeyid().size() > 0) {

    volumekmskeyid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.volumekmskeyid_);
  }
  if (from.instancecount() != 0) {
    set_instancecount(from.instancecount());
  }
  if (from.volumesizeingb() != 0) {
    set_volumesizeingb(from.volumesizeingb());
  }
}

void ResourceConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.plugins.sagemaker.ResourceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceConfig::CopyFrom(const ResourceConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.plugins.sagemaker.ResourceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceConfig::IsInitialized() const {
  return true;
}

void ResourceConfig::Swap(ResourceConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceConfig::InternalSwap(ResourceConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  instancetype_.Swap(&other->instancetype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  volumekmskeyid_.Swap(&other->volumekmskeyid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(instancecount_, other->instancecount_);
  swap(volumesizeingb_, other->volumesizeingb_);
}

::google::protobuf::Metadata ResourceConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto);
  return ::file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StoppingCondition::InitAsDefaultInstance() {
}
class StoppingCondition::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoppingCondition::kMaxRuntimeInSecondsFieldNumber;
const int StoppingCondition::kMaxWaitTimeInSecondsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoppingCondition::StoppingCondition()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.plugins.sagemaker.StoppingCondition)
}
StoppingCondition::StoppingCondition(const StoppingCondition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&maxruntimeinseconds_, &from.maxruntimeinseconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&maxwaittimeinseconds_) -
    reinterpret_cast<char*>(&maxruntimeinseconds_)) + sizeof(maxwaittimeinseconds_));
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.StoppingCondition)
}

void StoppingCondition::SharedCtor() {
  ::memset(&maxruntimeinseconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxwaittimeinseconds_) -
      reinterpret_cast<char*>(&maxruntimeinseconds_)) + sizeof(maxwaittimeinseconds_));
}

StoppingCondition::~StoppingCondition() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.StoppingCondition)
  SharedDtor();
}

void StoppingCondition::SharedDtor() {
}

void StoppingCondition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StoppingCondition& StoppingCondition::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StoppingCondition_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  return *internal_default_instance();
}


void StoppingCondition::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.plugins.sagemaker.StoppingCondition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&maxruntimeinseconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxwaittimeinseconds_) -
      reinterpret_cast<char*>(&maxruntimeinseconds_)) + sizeof(maxwaittimeinseconds_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StoppingCondition::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StoppingCondition*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 MaxRuntimeInSeconds = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_maxruntimeinseconds(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 MaxWaitTimeInSeconds = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_maxwaittimeinseconds(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StoppingCondition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.plugins.sagemaker.StoppingCondition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 MaxRuntimeInSeconds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &maxruntimeinseconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 MaxWaitTimeInSeconds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &maxwaittimeinseconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.plugins.sagemaker.StoppingCondition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.plugins.sagemaker.StoppingCondition)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StoppingCondition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.plugins.sagemaker.StoppingCondition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 MaxRuntimeInSeconds = 1;
  if (this->maxruntimeinseconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->maxruntimeinseconds(), output);
  }

  // int64 MaxWaitTimeInSeconds = 2;
  if (this->maxwaittimeinseconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->maxwaittimeinseconds(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.plugins.sagemaker.StoppingCondition)
}

::google::protobuf::uint8* StoppingCondition::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.plugins.sagemaker.StoppingCondition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 MaxRuntimeInSeconds = 1;
  if (this->maxruntimeinseconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->maxruntimeinseconds(), target);
  }

  // int64 MaxWaitTimeInSeconds = 2;
  if (this->maxwaittimeinseconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->maxwaittimeinseconds(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.plugins.sagemaker.StoppingCondition)
  return target;
}

size_t StoppingCondition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.plugins.sagemaker.StoppingCondition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 MaxRuntimeInSeconds = 1;
  if (this->maxruntimeinseconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->maxruntimeinseconds());
  }

  // int64 MaxWaitTimeInSeconds = 2;
  if (this->maxwaittimeinseconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->maxwaittimeinseconds());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StoppingCondition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.plugins.sagemaker.StoppingCondition)
  GOOGLE_DCHECK_NE(&from, this);
  const StoppingCondition* source =
      ::google::protobuf::DynamicCastToGenerated<StoppingCondition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.plugins.sagemaker.StoppingCondition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.plugins.sagemaker.StoppingCondition)
    MergeFrom(*source);
  }
}

void StoppingCondition::MergeFrom(const StoppingCondition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.plugins.sagemaker.StoppingCondition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.maxruntimeinseconds() != 0) {
    set_maxruntimeinseconds(from.maxruntimeinseconds());
  }
  if (from.maxwaittimeinseconds() != 0) {
    set_maxwaittimeinseconds(from.maxwaittimeinseconds());
  }
}

void StoppingCondition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.plugins.sagemaker.StoppingCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoppingCondition::CopyFrom(const StoppingCondition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.plugins.sagemaker.StoppingCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoppingCondition::IsInitialized() const {
  return true;
}

void StoppingCondition::Swap(StoppingCondition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoppingCondition::InternalSwap(StoppingCondition* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(maxruntimeinseconds_, other->maxruntimeinseconds_);
  swap(maxwaittimeinseconds_, other->maxwaittimeinseconds_);
}

::google::protobuf::Metadata StoppingCondition::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto);
  return ::file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto[kIndexInFileMessages];
}


// ===================================================================

void VpcConfig::InitAsDefaultInstance() {
}
class VpcConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VpcConfig::kSecurityGroupIdsFieldNumber;
const int VpcConfig::kSubnetsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VpcConfig::VpcConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.plugins.sagemaker.VpcConfig)
}
VpcConfig::VpcConfig(const VpcConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      securitygroupids_(from.securitygroupids_),
      subnets_(from.subnets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.VpcConfig)
}

void VpcConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_VpcConfig_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
}

VpcConfig::~VpcConfig() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.VpcConfig)
  SharedDtor();
}

void VpcConfig::SharedDtor() {
}

void VpcConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VpcConfig& VpcConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_VpcConfig_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  return *internal_default_instance();
}


void VpcConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.plugins.sagemaker.VpcConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  securitygroupids_.Clear();
  subnets_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* VpcConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<VpcConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string SecurityGroupIds = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("flyteidl.plugins.sagemaker.VpcConfig.SecurityGroupIds");
          object = msg->add_securitygroupids();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // repeated string Subnets = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("flyteidl.plugins.sagemaker.VpcConfig.Subnets");
          object = msg->add_subnets();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool VpcConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.plugins.sagemaker.VpcConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string SecurityGroupIds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_securitygroupids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->securitygroupids(this->securitygroupids_size() - 1).data(),
            static_cast<int>(this->securitygroupids(this->securitygroupids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.plugins.sagemaker.VpcConfig.SecurityGroupIds"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string Subnets = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_subnets()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subnets(this->subnets_size() - 1).data(),
            static_cast<int>(this->subnets(this->subnets_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.plugins.sagemaker.VpcConfig.Subnets"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.plugins.sagemaker.VpcConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.plugins.sagemaker.VpcConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void VpcConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.plugins.sagemaker.VpcConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string SecurityGroupIds = 1;
  for (int i = 0, n = this->securitygroupids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->securitygroupids(i).data(), static_cast<int>(this->securitygroupids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.VpcConfig.SecurityGroupIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->securitygroupids(i), output);
  }

  // repeated string Subnets = 2;
  for (int i = 0, n = this->subnets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subnets(i).data(), static_cast<int>(this->subnets(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.VpcConfig.Subnets");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->subnets(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.plugins.sagemaker.VpcConfig)
}

::google::protobuf::uint8* VpcConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.plugins.sagemaker.VpcConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string SecurityGroupIds = 1;
  for (int i = 0, n = this->securitygroupids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->securitygroupids(i).data(), static_cast<int>(this->securitygroupids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.VpcConfig.SecurityGroupIds");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->securitygroupids(i), target);
  }

  // repeated string Subnets = 2;
  for (int i = 0, n = this->subnets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subnets(i).data(), static_cast<int>(this->subnets(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.VpcConfig.Subnets");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->subnets(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.plugins.sagemaker.VpcConfig)
  return target;
}

size_t VpcConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.plugins.sagemaker.VpcConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string SecurityGroupIds = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->securitygroupids_size());
  for (int i = 0, n = this->securitygroupids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->securitygroupids(i));
  }

  // repeated string Subnets = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->subnets_size());
  for (int i = 0, n = this->subnets_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->subnets(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VpcConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.plugins.sagemaker.VpcConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const VpcConfig* source =
      ::google::protobuf::DynamicCastToGenerated<VpcConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.plugins.sagemaker.VpcConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.plugins.sagemaker.VpcConfig)
    MergeFrom(*source);
  }
}

void VpcConfig::MergeFrom(const VpcConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.plugins.sagemaker.VpcConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  securitygroupids_.MergeFrom(from.securitygroupids_);
  subnets_.MergeFrom(from.subnets_);
}

void VpcConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.plugins.sagemaker.VpcConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VpcConfig::CopyFrom(const VpcConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.plugins.sagemaker.VpcConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VpcConfig::IsInitialized() const {
  return true;
}

void VpcConfig::Swap(VpcConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VpcConfig::InternalSwap(VpcConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  securitygroupids_.InternalSwap(CastToBase(&other->securitygroupids_));
  subnets_.InternalSwap(CastToBase(&other->subnets_));
}

::google::protobuf::Metadata VpcConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto);
  return ::file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SagemakerTrainingJob::InitAsDefaultInstance() {
  ::flyteidl::plugins::sagemaker::_SagemakerTrainingJob_default_instance_._instance.get_mutable()->algorithmspecification_ = const_cast< ::flyteidl::plugins::sagemaker::AlgorithmSpecification*>(
      ::flyteidl::plugins::sagemaker::AlgorithmSpecification::internal_default_instance());
  ::flyteidl::plugins::sagemaker::_SagemakerTrainingJob_default_instance_._instance.get_mutable()->resourceconfig_ = const_cast< ::flyteidl::plugins::sagemaker::ResourceConfig*>(
      ::flyteidl::plugins::sagemaker::ResourceConfig::internal_default_instance());
  ::flyteidl::plugins::sagemaker::_SagemakerTrainingJob_default_instance_._instance.get_mutable()->stoppingcondition_ = const_cast< ::flyteidl::plugins::sagemaker::StoppingCondition*>(
      ::flyteidl::plugins::sagemaker::StoppingCondition::internal_default_instance());
  ::flyteidl::plugins::sagemaker::_SagemakerTrainingJob_default_instance_._instance.get_mutable()->vpcconfig_ = const_cast< ::flyteidl::plugins::sagemaker::VpcConfig*>(
      ::flyteidl::plugins::sagemaker::VpcConfig::internal_default_instance());
}
class SagemakerTrainingJob::HasBitSetters {
 public:
  static const ::flyteidl::plugins::sagemaker::AlgorithmSpecification& algorithmspecification(const SagemakerTrainingJob* msg);
  static const ::flyteidl::plugins::sagemaker::ResourceConfig& resourceconfig(const SagemakerTrainingJob* msg);
  static const ::flyteidl::plugins::sagemaker::StoppingCondition& stoppingcondition(const SagemakerTrainingJob* msg);
  static const ::flyteidl::plugins::sagemaker::VpcConfig& vpcconfig(const SagemakerTrainingJob* msg);
};

const ::flyteidl::plugins::sagemaker::AlgorithmSpecification&
SagemakerTrainingJob::HasBitSetters::algorithmspecification(const SagemakerTrainingJob* msg) {
  return *msg->algorithmspecification_;
}
const ::flyteidl::plugins::sagemaker::ResourceConfig&
SagemakerTrainingJob::HasBitSetters::resourceconfig(const SagemakerTrainingJob* msg) {
  return *msg->resourceconfig_;
}
const ::flyteidl::plugins::sagemaker::StoppingCondition&
SagemakerTrainingJob::HasBitSetters::stoppingcondition(const SagemakerTrainingJob* msg) {
  return *msg->stoppingcondition_;
}
const ::flyteidl::plugins::sagemaker::VpcConfig&
SagemakerTrainingJob::HasBitSetters::vpcconfig(const SagemakerTrainingJob* msg) {
  return *msg->vpcconfig_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SagemakerTrainingJob::kRegionFieldNumber;
const int SagemakerTrainingJob::kRoleArnFieldNumber;
const int SagemakerTrainingJob::kAlgorithmSpecificationFieldNumber;
const int SagemakerTrainingJob::kResourceConfigFieldNumber;
const int SagemakerTrainingJob::kStoppingConditionFieldNumber;
const int SagemakerTrainingJob::kVpcConfigFieldNumber;
const int SagemakerTrainingJob::kEnableSpotTrainingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SagemakerTrainingJob::SagemakerTrainingJob()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.plugins.sagemaker.SagemakerTrainingJob)
}
SagemakerTrainingJob::SagemakerTrainingJob(const SagemakerTrainingJob& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.region().size() > 0) {
    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  rolearn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rolearn().size() > 0) {
    rolearn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rolearn_);
  }
  if (from.has_algorithmspecification()) {
    algorithmspecification_ = new ::flyteidl::plugins::sagemaker::AlgorithmSpecification(*from.algorithmspecification_);
  } else {
    algorithmspecification_ = nullptr;
  }
  if (from.has_resourceconfig()) {
    resourceconfig_ = new ::flyteidl::plugins::sagemaker::ResourceConfig(*from.resourceconfig_);
  } else {
    resourceconfig_ = nullptr;
  }
  if (from.has_stoppingcondition()) {
    stoppingcondition_ = new ::flyteidl::plugins::sagemaker::StoppingCondition(*from.stoppingcondition_);
  } else {
    stoppingcondition_ = nullptr;
  }
  if (from.has_vpcconfig()) {
    vpcconfig_ = new ::flyteidl::plugins::sagemaker::VpcConfig(*from.vpcconfig_);
  } else {
    vpcconfig_ = nullptr;
  }
  enablespottraining_ = from.enablespottraining_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.SagemakerTrainingJob)
}

void SagemakerTrainingJob::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SagemakerTrainingJob_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rolearn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&algorithmspecification_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enablespottraining_) -
      reinterpret_cast<char*>(&algorithmspecification_)) + sizeof(enablespottraining_));
}

SagemakerTrainingJob::~SagemakerTrainingJob() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.SagemakerTrainingJob)
  SharedDtor();
}

void SagemakerTrainingJob::SharedDtor() {
  region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rolearn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete algorithmspecification_;
  if (this != internal_default_instance()) delete resourceconfig_;
  if (this != internal_default_instance()) delete stoppingcondition_;
  if (this != internal_default_instance()) delete vpcconfig_;
}

void SagemakerTrainingJob::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SagemakerTrainingJob& SagemakerTrainingJob::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SagemakerTrainingJob_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  return *internal_default_instance();
}


void SagemakerTrainingJob::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.plugins.sagemaker.SagemakerTrainingJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rolearn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && algorithmspecification_ != nullptr) {
    delete algorithmspecification_;
  }
  algorithmspecification_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && resourceconfig_ != nullptr) {
    delete resourceconfig_;
  }
  resourceconfig_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && stoppingcondition_ != nullptr) {
    delete stoppingcondition_;
  }
  stoppingcondition_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && vpcconfig_ != nullptr) {
    delete vpcconfig_;
  }
  vpcconfig_ = nullptr;
  enablespottraining_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SagemakerTrainingJob::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SagemakerTrainingJob*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string Region = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.plugins.sagemaker.SagemakerTrainingJob.Region");
        object = msg->mutable_region();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string RoleArn = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.plugins.sagemaker.SagemakerTrainingJob.RoleArn");
        object = msg->mutable_rolearn();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .flyteidl.plugins.sagemaker.AlgorithmSpecification AlgorithmSpecification = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::plugins::sagemaker::AlgorithmSpecification::_InternalParse;
        object = msg->mutable_algorithmspecification();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .flyteidl.plugins.sagemaker.ResourceConfig ResourceConfig = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::plugins::sagemaker::ResourceConfig::_InternalParse;
        object = msg->mutable_resourceconfig();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .flyteidl.plugins.sagemaker.StoppingCondition StoppingCondition = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::plugins::sagemaker::StoppingCondition::_InternalParse;
        object = msg->mutable_stoppingcondition();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .flyteidl.plugins.sagemaker.VpcConfig VpcConfig = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::plugins::sagemaker::VpcConfig::_InternalParse;
        object = msg->mutable_vpcconfig();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bool EnableSpotTraining = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_enablespottraining(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SagemakerTrainingJob::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.plugins.sagemaker.SagemakerTrainingJob)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Region = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region().data(), static_cast<int>(this->region().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.plugins.sagemaker.SagemakerTrainingJob.Region"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RoleArn = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rolearn()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rolearn().data(), static_cast<int>(this->rolearn().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.plugins.sagemaker.SagemakerTrainingJob.RoleArn"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.plugins.sagemaker.AlgorithmSpecification AlgorithmSpecification = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_algorithmspecification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.plugins.sagemaker.ResourceConfig ResourceConfig = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resourceconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.plugins.sagemaker.StoppingCondition StoppingCondition = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stoppingcondition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.plugins.sagemaker.VpcConfig VpcConfig = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vpcconfig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool EnableSpotTraining = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enablespottraining_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.plugins.sagemaker.SagemakerTrainingJob)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.plugins.sagemaker.SagemakerTrainingJob)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SagemakerTrainingJob::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.plugins.sagemaker.SagemakerTrainingJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Region = 1;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.SagemakerTrainingJob.Region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->region(), output);
  }

  // string RoleArn = 2;
  if (this->rolearn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rolearn().data(), static_cast<int>(this->rolearn().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.SagemakerTrainingJob.RoleArn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rolearn(), output);
  }

  // .flyteidl.plugins.sagemaker.AlgorithmSpecification AlgorithmSpecification = 3;
  if (this->has_algorithmspecification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::algorithmspecification(this), output);
  }

  // .flyteidl.plugins.sagemaker.ResourceConfig ResourceConfig = 4;
  if (this->has_resourceconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::resourceconfig(this), output);
  }

  // .flyteidl.plugins.sagemaker.StoppingCondition StoppingCondition = 5;
  if (this->has_stoppingcondition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::stoppingcondition(this), output);
  }

  // .flyteidl.plugins.sagemaker.VpcConfig VpcConfig = 6;
  if (this->has_vpcconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::vpcconfig(this), output);
  }

  // bool EnableSpotTraining = 7;
  if (this->enablespottraining() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->enablespottraining(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.plugins.sagemaker.SagemakerTrainingJob)
}

::google::protobuf::uint8* SagemakerTrainingJob::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.plugins.sagemaker.SagemakerTrainingJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Region = 1;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.SagemakerTrainingJob.Region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->region(), target);
  }

  // string RoleArn = 2;
  if (this->rolearn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rolearn().data(), static_cast<int>(this->rolearn().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.SagemakerTrainingJob.RoleArn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rolearn(), target);
  }

  // .flyteidl.plugins.sagemaker.AlgorithmSpecification AlgorithmSpecification = 3;
  if (this->has_algorithmspecification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::algorithmspecification(this), target);
  }

  // .flyteidl.plugins.sagemaker.ResourceConfig ResourceConfig = 4;
  if (this->has_resourceconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::resourceconfig(this), target);
  }

  // .flyteidl.plugins.sagemaker.StoppingCondition StoppingCondition = 5;
  if (this->has_stoppingcondition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::stoppingcondition(this), target);
  }

  // .flyteidl.plugins.sagemaker.VpcConfig VpcConfig = 6;
  if (this->has_vpcconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::vpcconfig(this), target);
  }

  // bool EnableSpotTraining = 7;
  if (this->enablespottraining() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->enablespottraining(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.plugins.sagemaker.SagemakerTrainingJob)
  return target;
}

size_t SagemakerTrainingJob::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.plugins.sagemaker.SagemakerTrainingJob)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Region = 1;
  if (this->region().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region());
  }

  // string RoleArn = 2;
  if (this->rolearn().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rolearn());
  }

  // .flyteidl.plugins.sagemaker.AlgorithmSpecification AlgorithmSpecification = 3;
  if (this->has_algorithmspecification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *algorithmspecification_);
  }

  // .flyteidl.plugins.sagemaker.ResourceConfig ResourceConfig = 4;
  if (this->has_resourceconfig()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *resourceconfig_);
  }

  // .flyteidl.plugins.sagemaker.StoppingCondition StoppingCondition = 5;
  if (this->has_stoppingcondition()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *stoppingcondition_);
  }

  // .flyteidl.plugins.sagemaker.VpcConfig VpcConfig = 6;
  if (this->has_vpcconfig()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vpcconfig_);
  }

  // bool EnableSpotTraining = 7;
  if (this->enablespottraining() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SagemakerTrainingJob::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.plugins.sagemaker.SagemakerTrainingJob)
  GOOGLE_DCHECK_NE(&from, this);
  const SagemakerTrainingJob* source =
      ::google::protobuf::DynamicCastToGenerated<SagemakerTrainingJob>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.plugins.sagemaker.SagemakerTrainingJob)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.plugins.sagemaker.SagemakerTrainingJob)
    MergeFrom(*source);
  }
}

void SagemakerTrainingJob::MergeFrom(const SagemakerTrainingJob& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.plugins.sagemaker.SagemakerTrainingJob)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.region().size() > 0) {

    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  if (from.rolearn().size() > 0) {

    rolearn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rolearn_);
  }
  if (from.has_algorithmspecification()) {
    mutable_algorithmspecification()->::flyteidl::plugins::sagemaker::AlgorithmSpecification::MergeFrom(from.algorithmspecification());
  }
  if (from.has_resourceconfig()) {
    mutable_resourceconfig()->::flyteidl::plugins::sagemaker::ResourceConfig::MergeFrom(from.resourceconfig());
  }
  if (from.has_stoppingcondition()) {
    mutable_stoppingcondition()->::flyteidl::plugins::sagemaker::StoppingCondition::MergeFrom(from.stoppingcondition());
  }
  if (from.has_vpcconfig()) {
    mutable_vpcconfig()->::flyteidl::plugins::sagemaker::VpcConfig::MergeFrom(from.vpcconfig());
  }
  if (from.enablespottraining() != 0) {
    set_enablespottraining(from.enablespottraining());
  }
}

void SagemakerTrainingJob::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.plugins.sagemaker.SagemakerTrainingJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SagemakerTrainingJob::CopyFrom(const SagemakerTrainingJob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.plugins.sagemaker.SagemakerTrainingJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SagemakerTrainingJob::IsInitialized() const {
  return true;
}

void SagemakerTrainingJob::Swap(SagemakerTrainingJob* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SagemakerTrainingJob::InternalSwap(SagemakerTrainingJob* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  region_.Swap(&other->region_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rolearn_.Swap(&other->rolearn_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(algorithmspecification_, other->algorithmspecification_);
  swap(resourceconfig_, other->resourceconfig_);
  swap(stoppingcondition_, other->stoppingcondition_);
  swap(vpcconfig_, other->vpcconfig_);
  swap(enablespottraining_, other->enablespottraining_);
}

::google::protobuf::Metadata SagemakerTrainingJob::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto);
  return ::file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto[kIndexInFileMessages];
}


// ===================================================================

void HPOJobObjective::InitAsDefaultInstance() {
}
class HPOJobObjective::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HPOJobObjective::kTypeFieldNumber;
const int HPOJobObjective::kMetricNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HPOJobObjective::HPOJobObjective()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.plugins.sagemaker.HPOJobObjective)
}
HPOJobObjective::HPOJobObjective(const HPOJobObjective& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metricname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.metricname().size() > 0) {
    metricname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metricname_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.HPOJobObjective)
}

void HPOJobObjective::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_HPOJobObjective_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  metricname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

HPOJobObjective::~HPOJobObjective() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.HPOJobObjective)
  SharedDtor();
}

void HPOJobObjective::SharedDtor() {
  metricname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HPOJobObjective::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HPOJobObjective& HPOJobObjective::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HPOJobObjective_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  return *internal_default_instance();
}


void HPOJobObjective::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.plugins.sagemaker.HPOJobObjective)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metricname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HPOJobObjective::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HPOJobObjective*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .flyteidl.plugins.sagemaker.HPOJobObjective.HPOJobObjectiveType Type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_type(static_cast<::flyteidl::plugins::sagemaker::HPOJobObjective_HPOJobObjectiveType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string MetricName = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.plugins.sagemaker.HPOJobObjective.MetricName");
        object = msg->mutable_metricname();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HPOJobObjective::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.plugins.sagemaker.HPOJobObjective)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.plugins.sagemaker.HPOJobObjective.HPOJobObjectiveType Type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::flyteidl::plugins::sagemaker::HPOJobObjective_HPOJobObjectiveType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string MetricName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_metricname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->metricname().data(), static_cast<int>(this->metricname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.plugins.sagemaker.HPOJobObjective.MetricName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.plugins.sagemaker.HPOJobObjective)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.plugins.sagemaker.HPOJobObjective)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HPOJobObjective::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.plugins.sagemaker.HPOJobObjective)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.plugins.sagemaker.HPOJobObjective.HPOJobObjectiveType Type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // string MetricName = 2;
  if (this->metricname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metricname().data(), static_cast<int>(this->metricname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.HPOJobObjective.MetricName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->metricname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.plugins.sagemaker.HPOJobObjective)
}

::google::protobuf::uint8* HPOJobObjective::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.plugins.sagemaker.HPOJobObjective)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.plugins.sagemaker.HPOJobObjective.HPOJobObjectiveType Type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // string MetricName = 2;
  if (this->metricname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metricname().data(), static_cast<int>(this->metricname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.HPOJobObjective.MetricName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->metricname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.plugins.sagemaker.HPOJobObjective)
  return target;
}

size_t HPOJobObjective::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.plugins.sagemaker.HPOJobObjective)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string MetricName = 2;
  if (this->metricname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->metricname());
  }

  // .flyteidl.plugins.sagemaker.HPOJobObjective.HPOJobObjectiveType Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HPOJobObjective::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.plugins.sagemaker.HPOJobObjective)
  GOOGLE_DCHECK_NE(&from, this);
  const HPOJobObjective* source =
      ::google::protobuf::DynamicCastToGenerated<HPOJobObjective>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.plugins.sagemaker.HPOJobObjective)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.plugins.sagemaker.HPOJobObjective)
    MergeFrom(*source);
  }
}

void HPOJobObjective::MergeFrom(const HPOJobObjective& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.plugins.sagemaker.HPOJobObjective)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.metricname().size() > 0) {

    metricname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metricname_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void HPOJobObjective::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.plugins.sagemaker.HPOJobObjective)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HPOJobObjective::CopyFrom(const HPOJobObjective& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.plugins.sagemaker.HPOJobObjective)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HPOJobObjective::IsInitialized() const {
  return true;
}

void HPOJobObjective::Swap(HPOJobObjective* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HPOJobObjective::InternalSwap(HPOJobObjective* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  metricname_.Swap(&other->metricname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
}

::google::protobuf::Metadata HPOJobObjective::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto);
  return ::file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SagemakerHPOJob::InitAsDefaultInstance() {
  ::flyteidl::plugins::sagemaker::_SagemakerHPOJob_default_instance_._instance.get_mutable()->objective_ = const_cast< ::flyteidl::plugins::sagemaker::HPOJobObjective*>(
      ::flyteidl::plugins::sagemaker::HPOJobObjective::internal_default_instance());
  ::flyteidl::plugins::sagemaker::_SagemakerHPOJob_default_instance_._instance.get_mutable()->parameterranges_ = const_cast< ::flyteidl::plugins::sagemaker::ParameterRanges*>(
      ::flyteidl::plugins::sagemaker::ParameterRanges::internal_default_instance());
  ::flyteidl::plugins::sagemaker::_SagemakerHPOJob_default_instance_._instance.get_mutable()->trainingjob_ = const_cast< ::flyteidl::plugins::sagemaker::SagemakerTrainingJob*>(
      ::flyteidl::plugins::sagemaker::SagemakerTrainingJob::internal_default_instance());
}
class SagemakerHPOJob::HasBitSetters {
 public:
  static const ::flyteidl::plugins::sagemaker::HPOJobObjective& objective(const SagemakerHPOJob* msg);
  static const ::flyteidl::plugins::sagemaker::ParameterRanges& parameterranges(const SagemakerHPOJob* msg);
  static const ::flyteidl::plugins::sagemaker::SagemakerTrainingJob& trainingjob(const SagemakerHPOJob* msg);
};

const ::flyteidl::plugins::sagemaker::HPOJobObjective&
SagemakerHPOJob::HasBitSetters::objective(const SagemakerHPOJob* msg) {
  return *msg->objective_;
}
const ::flyteidl::plugins::sagemaker::ParameterRanges&
SagemakerHPOJob::HasBitSetters::parameterranges(const SagemakerHPOJob* msg) {
  return *msg->parameterranges_;
}
const ::flyteidl::plugins::sagemaker::SagemakerTrainingJob&
SagemakerHPOJob::HasBitSetters::trainingjob(const SagemakerHPOJob* msg) {
  return *msg->trainingjob_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SagemakerHPOJob::kStrategyFieldNumber;
const int SagemakerHPOJob::kObjectiveFieldNumber;
const int SagemakerHPOJob::kMaxNumberOfTrainingJobsFieldNumber;
const int SagemakerHPOJob::kMaxParallelTrainingJobsFieldNumber;
const int SagemakerHPOJob::kParameterRangesFieldNumber;
const int SagemakerHPOJob::kTrainingJobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SagemakerHPOJob::SagemakerHPOJob()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.plugins.sagemaker.SagemakerHPOJob)
}
SagemakerHPOJob::SagemakerHPOJob(const SagemakerHPOJob& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strategy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strategy().size() > 0) {
    strategy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strategy_);
  }
  if (from.has_objective()) {
    objective_ = new ::flyteidl::plugins::sagemaker::HPOJobObjective(*from.objective_);
  } else {
    objective_ = nullptr;
  }
  if (from.has_parameterranges()) {
    parameterranges_ = new ::flyteidl::plugins::sagemaker::ParameterRanges(*from.parameterranges_);
  } else {
    parameterranges_ = nullptr;
  }
  if (from.has_trainingjob()) {
    trainingjob_ = new ::flyteidl::plugins::sagemaker::SagemakerTrainingJob(*from.trainingjob_);
  } else {
    trainingjob_ = nullptr;
  }
  ::memcpy(&maxnumberoftrainingjobs_, &from.maxnumberoftrainingjobs_,
    static_cast<size_t>(reinterpret_cast<char*>(&maxparalleltrainingjobs_) -
    reinterpret_cast<char*>(&maxnumberoftrainingjobs_)) + sizeof(maxparalleltrainingjobs_));
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.SagemakerHPOJob)
}

void SagemakerHPOJob::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SagemakerHPOJob_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  strategy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&objective_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxparalleltrainingjobs_) -
      reinterpret_cast<char*>(&objective_)) + sizeof(maxparalleltrainingjobs_));
}

SagemakerHPOJob::~SagemakerHPOJob() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.SagemakerHPOJob)
  SharedDtor();
}

void SagemakerHPOJob::SharedDtor() {
  strategy_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete objective_;
  if (this != internal_default_instance()) delete parameterranges_;
  if (this != internal_default_instance()) delete trainingjob_;
}

void SagemakerHPOJob::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SagemakerHPOJob& SagemakerHPOJob::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SagemakerHPOJob_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto.base);
  return *internal_default_instance();
}


void SagemakerHPOJob::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.plugins.sagemaker.SagemakerHPOJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strategy_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && objective_ != nullptr) {
    delete objective_;
  }
  objective_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && parameterranges_ != nullptr) {
    delete parameterranges_;
  }
  parameterranges_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && trainingjob_ != nullptr) {
    delete trainingjob_;
  }
  trainingjob_ = nullptr;
  ::memset(&maxnumberoftrainingjobs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxparalleltrainingjobs_) -
      reinterpret_cast<char*>(&maxnumberoftrainingjobs_)) + sizeof(maxparalleltrainingjobs_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SagemakerHPOJob::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SagemakerHPOJob*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string Strategy = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.plugins.sagemaker.SagemakerHPOJob.Strategy");
        object = msg->mutable_strategy();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .flyteidl.plugins.sagemaker.HPOJobObjective Objective = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::plugins::sagemaker::HPOJobObjective::_InternalParse;
        object = msg->mutable_objective();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int64 MaxNumberOfTrainingJobs = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_maxnumberoftrainingjobs(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 MaxParallelTrainingJobs = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_maxparalleltrainingjobs(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .flyteidl.plugins.sagemaker.ParameterRanges ParameterRanges = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::plugins::sagemaker::ParameterRanges::_InternalParse;
        object = msg->mutable_parameterranges();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .flyteidl.plugins.sagemaker.SagemakerTrainingJob TrainingJob = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::plugins::sagemaker::SagemakerTrainingJob::_InternalParse;
        object = msg->mutable_trainingjob();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SagemakerHPOJob::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.plugins.sagemaker.SagemakerHPOJob)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Strategy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strategy()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strategy().data(), static_cast<int>(this->strategy().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.plugins.sagemaker.SagemakerHPOJob.Strategy"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.plugins.sagemaker.HPOJobObjective Objective = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_objective()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 MaxNumberOfTrainingJobs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &maxnumberoftrainingjobs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 MaxParallelTrainingJobs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &maxparalleltrainingjobs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.plugins.sagemaker.ParameterRanges ParameterRanges = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parameterranges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.plugins.sagemaker.SagemakerTrainingJob TrainingJob = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_trainingjob()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.plugins.sagemaker.SagemakerHPOJob)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.plugins.sagemaker.SagemakerHPOJob)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SagemakerHPOJob::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.plugins.sagemaker.SagemakerHPOJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Strategy = 1;
  if (this->strategy().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strategy().data(), static_cast<int>(this->strategy().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.SagemakerHPOJob.Strategy");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strategy(), output);
  }

  // .flyteidl.plugins.sagemaker.HPOJobObjective Objective = 2;
  if (this->has_objective()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::objective(this), output);
  }

  // int64 MaxNumberOfTrainingJobs = 3;
  if (this->maxnumberoftrainingjobs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->maxnumberoftrainingjobs(), output);
  }

  // int64 MaxParallelTrainingJobs = 4;
  if (this->maxparalleltrainingjobs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->maxparalleltrainingjobs(), output);
  }

  // .flyteidl.plugins.sagemaker.ParameterRanges ParameterRanges = 5;
  if (this->has_parameterranges()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::parameterranges(this), output);
  }

  // .flyteidl.plugins.sagemaker.SagemakerTrainingJob TrainingJob = 6;
  if (this->has_trainingjob()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::trainingjob(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.plugins.sagemaker.SagemakerHPOJob)
}

::google::protobuf::uint8* SagemakerHPOJob::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.plugins.sagemaker.SagemakerHPOJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Strategy = 1;
  if (this->strategy().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strategy().data(), static_cast<int>(this->strategy().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.SagemakerHPOJob.Strategy");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strategy(), target);
  }

  // .flyteidl.plugins.sagemaker.HPOJobObjective Objective = 2;
  if (this->has_objective()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::objective(this), target);
  }

  // int64 MaxNumberOfTrainingJobs = 3;
  if (this->maxnumberoftrainingjobs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->maxnumberoftrainingjobs(), target);
  }

  // int64 MaxParallelTrainingJobs = 4;
  if (this->maxparalleltrainingjobs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->maxparalleltrainingjobs(), target);
  }

  // .flyteidl.plugins.sagemaker.ParameterRanges ParameterRanges = 5;
  if (this->has_parameterranges()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::parameterranges(this), target);
  }

  // .flyteidl.plugins.sagemaker.SagemakerTrainingJob TrainingJob = 6;
  if (this->has_trainingjob()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::trainingjob(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.plugins.sagemaker.SagemakerHPOJob)
  return target;
}

size_t SagemakerHPOJob::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.plugins.sagemaker.SagemakerHPOJob)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Strategy = 1;
  if (this->strategy().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strategy());
  }

  // .flyteidl.plugins.sagemaker.HPOJobObjective Objective = 2;
  if (this->has_objective()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *objective_);
  }

  // .flyteidl.plugins.sagemaker.ParameterRanges ParameterRanges = 5;
  if (this->has_parameterranges()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *parameterranges_);
  }

  // .flyteidl.plugins.sagemaker.SagemakerTrainingJob TrainingJob = 6;
  if (this->has_trainingjob()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *trainingjob_);
  }

  // int64 MaxNumberOfTrainingJobs = 3;
  if (this->maxnumberoftrainingjobs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->maxnumberoftrainingjobs());
  }

  // int64 MaxParallelTrainingJobs = 4;
  if (this->maxparalleltrainingjobs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->maxparalleltrainingjobs());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SagemakerHPOJob::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.plugins.sagemaker.SagemakerHPOJob)
  GOOGLE_DCHECK_NE(&from, this);
  const SagemakerHPOJob* source =
      ::google::protobuf::DynamicCastToGenerated<SagemakerHPOJob>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.plugins.sagemaker.SagemakerHPOJob)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.plugins.sagemaker.SagemakerHPOJob)
    MergeFrom(*source);
  }
}

void SagemakerHPOJob::MergeFrom(const SagemakerHPOJob& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.plugins.sagemaker.SagemakerHPOJob)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.strategy().size() > 0) {

    strategy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strategy_);
  }
  if (from.has_objective()) {
    mutable_objective()->::flyteidl::plugins::sagemaker::HPOJobObjective::MergeFrom(from.objective());
  }
  if (from.has_parameterranges()) {
    mutable_parameterranges()->::flyteidl::plugins::sagemaker::ParameterRanges::MergeFrom(from.parameterranges());
  }
  if (from.has_trainingjob()) {
    mutable_trainingjob()->::flyteidl::plugins::sagemaker::SagemakerTrainingJob::MergeFrom(from.trainingjob());
  }
  if (from.maxnumberoftrainingjobs() != 0) {
    set_maxnumberoftrainingjobs(from.maxnumberoftrainingjobs());
  }
  if (from.maxparalleltrainingjobs() != 0) {
    set_maxparalleltrainingjobs(from.maxparalleltrainingjobs());
  }
}

void SagemakerHPOJob::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.plugins.sagemaker.SagemakerHPOJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SagemakerHPOJob::CopyFrom(const SagemakerHPOJob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.plugins.sagemaker.SagemakerHPOJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SagemakerHPOJob::IsInitialized() const {
  return true;
}

void SagemakerHPOJob::Swap(SagemakerHPOJob* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SagemakerHPOJob::InternalSwap(SagemakerHPOJob* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  strategy_.Swap(&other->strategy_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(objective_, other->objective_);
  swap(parameterranges_, other->parameterranges_);
  swap(trainingjob_, other->trainingjob_);
  swap(maxnumberoftrainingjobs_, other->maxnumberoftrainingjobs_);
  swap(maxparalleltrainingjobs_, other->maxparalleltrainingjobs_);
}

::google::protobuf::Metadata SagemakerHPOJob::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto);
  return ::file_level_metadata_flyteidl_2fplugins_2fsagemaker_2fsagemaker_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sagemaker
}  // namespace plugins
}  // namespace flyteidl
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::ContinuousParameterRange* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::ContinuousParameterRange >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::plugins::sagemaker::ContinuousParameterRange >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::IntegerParameterRange* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::IntegerParameterRange >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::plugins::sagemaker::IntegerParameterRange >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::CategoricalParameterRange* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::CategoricalParameterRange >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::plugins::sagemaker::CategoricalParameterRange >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::ParameterRanges* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::ParameterRanges >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::plugins::sagemaker::ParameterRanges >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::AlgorithmSpecification* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::AlgorithmSpecification >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::plugins::sagemaker::AlgorithmSpecification >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::ResourceConfig* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::ResourceConfig >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::plugins::sagemaker::ResourceConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::StoppingCondition* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::StoppingCondition >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::plugins::sagemaker::StoppingCondition >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::VpcConfig* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::VpcConfig >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::plugins::sagemaker::VpcConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::SagemakerTrainingJob* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::SagemakerTrainingJob >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::plugins::sagemaker::SagemakerTrainingJob >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::HPOJobObjective* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::HPOJobObjective >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::plugins::sagemaker::HPOJobObjective >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::SagemakerHPOJob* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::SagemakerHPOJob >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::plugins::sagemaker::SagemakerHPOJob >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
