// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flyteidl/plugins/sagemaker/hpojob.proto

package plugins

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HPOJobObjective_HPOJobObjectiveType int32

const (
	HPOJobObjective_MINIMIZE HPOJobObjective_HPOJobObjectiveType = 0
	HPOJobObjective_MAXIMIZE HPOJobObjective_HPOJobObjectiveType = 1
)

var HPOJobObjective_HPOJobObjectiveType_name = map[int32]string{
	0: "MINIMIZE",
	1: "MAXIMIZE",
}

var HPOJobObjective_HPOJobObjectiveType_value = map[string]int32{
	"MINIMIZE": 0,
	"MAXIMIZE": 1,
}

func (x HPOJobObjective_HPOJobObjectiveType) String() string {
	return proto.EnumName(HPOJobObjective_HPOJobObjectiveType_name, int32(x))
}

func (HPOJobObjective_HPOJobObjectiveType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_823bfe2a857513d9, []int{0, 0}
}

type HPOJobObjective struct {
	ObjectiveType        HPOJobObjective_HPOJobObjectiveType `protobuf:"varint,1,opt,name=objective_type,json=objectiveType,proto3,enum=flyteidl.plugins.sagemaker.HPOJobObjective_HPOJobObjectiveType" json:"objective_type,omitempty"`
	MetricName           string                              `protobuf:"bytes,2,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *HPOJobObjective) Reset()         { *m = HPOJobObjective{} }
func (m *HPOJobObjective) String() string { return proto.CompactTextString(m) }
func (*HPOJobObjective) ProtoMessage()    {}
func (*HPOJobObjective) Descriptor() ([]byte, []int) {
	return fileDescriptor_823bfe2a857513d9, []int{0}
}

func (m *HPOJobObjective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HPOJobObjective.Unmarshal(m, b)
}
func (m *HPOJobObjective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HPOJobObjective.Marshal(b, m, deterministic)
}
func (m *HPOJobObjective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HPOJobObjective.Merge(m, src)
}
func (m *HPOJobObjective) XXX_Size() int {
	return xxx_messageInfo_HPOJobObjective.Size(m)
}
func (m *HPOJobObjective) XXX_DiscardUnknown() {
	xxx_messageInfo_HPOJobObjective.DiscardUnknown(m)
}

var xxx_messageInfo_HPOJobObjective proto.InternalMessageInfo

func (m *HPOJobObjective) GetObjectiveType() HPOJobObjective_HPOJobObjectiveType {
	if m != nil {
		return m.ObjectiveType
	}
	return HPOJobObjective_MINIMIZE
}

func (m *HPOJobObjective) GetMetricName() string {
	if m != nil {
		return m.MetricName
	}
	return ""
}

type HPOJob struct {
	MaxNumberOfTrainingJobs int64        `protobuf:"varint,1,opt,name=max_number_of_training_jobs,json=maxNumberOfTrainingJobs,proto3" json:"max_number_of_training_jobs,omitempty"`
	MaxParallelTrainingJobs int64        `protobuf:"varint,2,opt,name=max_parallel_training_jobs,json=maxParallelTrainingJobs,proto3" json:"max_parallel_training_jobs,omitempty"`
	TrainingJob             *TrainingJob `protobuf:"bytes,3,opt,name=training_job,json=trainingJob,proto3" json:"training_job,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}     `json:"-"`
	XXX_unrecognized        []byte       `json:"-"`
	XXX_sizecache           int32        `json:"-"`
}

func (m *HPOJob) Reset()         { *m = HPOJob{} }
func (m *HPOJob) String() string { return proto.CompactTextString(m) }
func (*HPOJob) ProtoMessage()    {}
func (*HPOJob) Descriptor() ([]byte, []int) {
	return fileDescriptor_823bfe2a857513d9, []int{1}
}

func (m *HPOJob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HPOJob.Unmarshal(m, b)
}
func (m *HPOJob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HPOJob.Marshal(b, m, deterministic)
}
func (m *HPOJob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HPOJob.Merge(m, src)
}
func (m *HPOJob) XXX_Size() int {
	return xxx_messageInfo_HPOJob.Size(m)
}
func (m *HPOJob) XXX_DiscardUnknown() {
	xxx_messageInfo_HPOJob.DiscardUnknown(m)
}

var xxx_messageInfo_HPOJob proto.InternalMessageInfo

func (m *HPOJob) GetMaxNumberOfTrainingJobs() int64 {
	if m != nil {
		return m.MaxNumberOfTrainingJobs
	}
	return 0
}

func (m *HPOJob) GetMaxParallelTrainingJobs() int64 {
	if m != nil {
		return m.MaxParallelTrainingJobs
	}
	return 0
}

func (m *HPOJob) GetTrainingJob() *TrainingJob {
	if m != nil {
		return m.TrainingJob
	}
	return nil
}

func init() {
	proto.RegisterEnum("flyteidl.plugins.sagemaker.HPOJobObjective_HPOJobObjectiveType", HPOJobObjective_HPOJobObjectiveType_name, HPOJobObjective_HPOJobObjectiveType_value)
	proto.RegisterType((*HPOJobObjective)(nil), "flyteidl.plugins.sagemaker.HPOJobObjective")
	proto.RegisterType((*HPOJob)(nil), "flyteidl.plugins.sagemaker.HPOJob")
}

func init() {
	proto.RegisterFile("flyteidl/plugins/sagemaker/hpojob.proto", fileDescriptor_823bfe2a857513d9)
}

var fileDescriptor_823bfe2a857513d9 = []byte{
	// 349 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x4f, 0x4f, 0xea, 0x40,
	0x14, 0xc5, 0x5f, 0x21, 0x21, 0xef, 0x0d, 0x3c, 0xde, 0x4b, 0x5d, 0x48, 0xea, 0x42, 0xc2, 0x06,
	0x16, 0xda, 0x2a, 0xc4, 0x95, 0x26, 0x46, 0x13, 0x13, 0x21, 0xe1, 0x4f, 0x1a, 0x16, 0x86, 0x4d,
	0x33, 0x83, 0xb7, 0x65, 0x70, 0xfe, 0x65, 0x3a, 0x18, 0xfa, 0x21, 0x8d, 0x5f, 0xc9, 0xd0, 0x42,
	0xc5, 0x46, 0x59, 0x9e, 0x99, 0xf3, 0x3b, 0x33, 0xf7, 0x1e, 0xd4, 0x0e, 0x59, 0x62, 0x80, 0x3e,
	0x33, 0x4f, 0xb1, 0x55, 0x44, 0x45, 0xec, 0xc5, 0x38, 0x02, 0x8e, 0x5f, 0x40, 0x7b, 0x0b, 0x25,
	0x97, 0x92, 0xb8, 0x4a, 0x4b, 0x23, 0x6d, 0x67, 0x67, 0x74, 0xb7, 0x46, 0x37, 0x37, 0x3a, 0x17,
	0x07, 0x42, 0x14, 0xd6, 0x98, 0x83, 0x01, 0xad, 0xb1, 0x88, 0x20, 0xce, 0xd2, 0x9c, 0xb3, 0x03,
	0x84, 0xd1, 0x98, 0x0a, 0x2a, 0xa2, 0xfc, 0xed, 0xd6, 0x9b, 0x85, 0xfe, 0x3d, 0x4e, 0xc6, 0x03,
	0x49, 0xc6, 0x64, 0x09, 0x73, 0x43, 0x5f, 0xc1, 0x0e, 0x51, 0x5d, 0xee, 0x44, 0x60, 0x12, 0x05,
	0x0d, 0xab, 0x69, 0x75, 0xea, 0xdd, 0x5b, 0xf7, 0xe7, 0x8f, 0xba, 0x85, 0x90, 0xa2, 0x9e, 0x26,
	0x0a, 0xfc, 0xbf, 0x72, 0x5f, 0xda, 0xa7, 0xa8, 0xca, 0xc1, 0x68, 0x3a, 0x0f, 0x04, 0xe6, 0xd0,
	0x28, 0x35, 0xad, 0xce, 0x1f, 0x1f, 0x65, 0x47, 0x23, 0xcc, 0xa1, 0x75, 0x89, 0x8e, 0xbe, 0x89,
	0xb1, 0x6b, 0xe8, 0xf7, 0xb0, 0x3f, 0xea, 0x0f, 0xfb, 0xb3, 0x87, 0xff, 0xbf, 0x52, 0x75, 0xf7,
	0x94, 0x29, 0xab, 0xf5, 0x6e, 0xa1, 0x4a, 0xc6, 0xd8, 0x37, 0xe8, 0x84, 0xe3, 0x75, 0x20, 0x56,
	0x9c, 0x80, 0x0e, 0x64, 0x18, 0xec, 0xa6, 0x0f, 0x96, 0x92, 0xc4, 0xe9, 0x4c, 0x65, 0xff, 0x98,
	0xe3, 0xf5, 0x28, 0x75, 0x8c, 0xc3, 0xe9, 0xf6, 0x7e, 0x20, 0x49, 0x6c, 0x5f, 0x23, 0x67, 0x43,
	0x6f, 0x76, 0xcc, 0x18, 0xb0, 0x02, 0x5c, 0xca, 0xe1, 0xc9, 0xd6, 0xf0, 0x05, 0x1e, 0xa0, 0xda,
	0xbe, 0xbf, 0x51, 0x6e, 0x5a, 0x9d, 0x6a, 0xb7, 0x7d, 0x68, 0x7f, 0x7b, 0xbc, 0x5f, 0x35, 0x9f,
	0xe2, 0xfe, 0x6a, 0xd6, 0x8b, 0xa8, 0x59, 0xac, 0x88, 0x3b, 0x97, 0xdc, 0x63, 0x49, 0x68, 0xbc,
	0xbc, 0xe1, 0x08, 0x84, 0xa7, 0xc8, 0x79, 0x24, 0xbd, 0x62, 0xe9, 0xa4, 0x92, 0xf6, 0xdb, 0xfb,
	0x08, 0x00, 0x00, 0xff, 0xff, 0xab, 0xe2, 0xa2, 0xcb, 0x86, 0x02, 0x00, 0x00,
}
