// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/project_attributes.proto

#include "flyteidl/admin/project_attributes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fadmin_2fmatchable_5fresource_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_MatchingAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fadmin_2fproject_5fattributes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ProjectAttributes_flyteidl_2fadmin_2fproject_5fattributes_2eproto;
namespace flyteidl {
namespace admin {
class ProjectAttributesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProjectAttributes> _instance;
} _ProjectAttributes_default_instance_;
class ProjectAttributesUpdateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProjectAttributesUpdateRequest> _instance;
} _ProjectAttributesUpdateRequest_default_instance_;
class ProjectAttributesUpdateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProjectAttributesUpdateResponse> _instance;
} _ProjectAttributesUpdateResponse_default_instance_;
}  // namespace admin
}  // namespace flyteidl
static void InitDefaultsProjectAttributes_flyteidl_2fadmin_2fproject_5fattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::admin::_ProjectAttributes_default_instance_;
    new (ptr) ::flyteidl::admin::ProjectAttributes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::ProjectAttributes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ProjectAttributes_flyteidl_2fadmin_2fproject_5fattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProjectAttributes_flyteidl_2fadmin_2fproject_5fattributes_2eproto}, {
      &scc_info_MatchingAttributes_flyteidl_2fadmin_2fmatchable_5fresource_2eproto.base,}};

static void InitDefaultsProjectAttributesUpdateRequest_flyteidl_2fadmin_2fproject_5fattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::admin::_ProjectAttributesUpdateRequest_default_instance_;
    new (ptr) ::flyteidl::admin::ProjectAttributesUpdateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::ProjectAttributesUpdateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ProjectAttributesUpdateRequest_flyteidl_2fadmin_2fproject_5fattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProjectAttributesUpdateRequest_flyteidl_2fadmin_2fproject_5fattributes_2eproto}, {
      &scc_info_ProjectAttributes_flyteidl_2fadmin_2fproject_5fattributes_2eproto.base,}};

static void InitDefaultsProjectAttributesUpdateResponse_flyteidl_2fadmin_2fproject_5fattributes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::admin::_ProjectAttributesUpdateResponse_default_instance_;
    new (ptr) ::flyteidl::admin::ProjectAttributesUpdateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::ProjectAttributesUpdateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProjectAttributesUpdateResponse_flyteidl_2fadmin_2fproject_5fattributes_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProjectAttributesUpdateResponse_flyteidl_2fadmin_2fproject_5fattributes_2eproto}, {}};

void InitDefaults_flyteidl_2fadmin_2fproject_5fattributes_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_ProjectAttributes_flyteidl_2fadmin_2fproject_5fattributes_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProjectAttributesUpdateRequest_flyteidl_2fadmin_2fproject_5fattributes_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProjectAttributesUpdateResponse_flyteidl_2fadmin_2fproject_5fattributes_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_flyteidl_2fadmin_2fproject_5fattributes_2eproto[3];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_flyteidl_2fadmin_2fproject_5fattributes_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fadmin_2fproject_5fattributes_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_flyteidl_2fadmin_2fproject_5fattributes_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ProjectAttributes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ProjectAttributes, project_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ProjectAttributes, matching_attributes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ProjectAttributesUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ProjectAttributesUpdateRequest, attributes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::admin::ProjectAttributesUpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::flyteidl::admin::ProjectAttributes)},
  { 7, -1, sizeof(::flyteidl::admin::ProjectAttributesUpdateRequest)},
  { 13, -1, sizeof(::flyteidl::admin::ProjectAttributesUpdateResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_ProjectAttributes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_ProjectAttributesUpdateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_ProjectAttributesUpdateResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_flyteidl_2fadmin_2fproject_5fattributes_2eproto = {
  {}, AddDescriptors_flyteidl_2fadmin_2fproject_5fattributes_2eproto, "flyteidl/admin/project_attributes.proto", schemas,
  file_default_instances, TableStruct_flyteidl_2fadmin_2fproject_5fattributes_2eproto::offsets,
  file_level_metadata_flyteidl_2fadmin_2fproject_5fattributes_2eproto, 3, file_level_enum_descriptors_flyteidl_2fadmin_2fproject_5fattributes_2eproto, file_level_service_descriptors_flyteidl_2fadmin_2fproject_5fattributes_2eproto,
};

const char descriptor_table_protodef_flyteidl_2fadmin_2fproject_5fattributes_2eproto[] =
  "\n\'flyteidl/admin/project_attributes.prot"
  "o\022\016flyteidl.admin\032\'flyteidl/admin/matcha"
  "ble_resource.proto\"e\n\021ProjectAttributes\022"
  "\017\n\007project\030\001 \001(\t\022\?\n\023matching_attributes\030"
  "\002 \001(\0132\".flyteidl.admin.MatchingAttribute"
  "s\"W\n\036ProjectAttributesUpdateRequest\0225\n\na"
  "ttributes\030\001 \001(\0132!.flyteidl.admin.Project"
  "Attributes\"!\n\037ProjectAttributesUpdateRes"
  "ponseB3Z1github.com/lyft/flyteidl/gen/pb"
  "-go/flyteidl/adminb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_flyteidl_2fadmin_2fproject_5fattributes_2eproto = {
  false, InitDefaults_flyteidl_2fadmin_2fproject_5fattributes_2eproto, 
  descriptor_table_protodef_flyteidl_2fadmin_2fproject_5fattributes_2eproto,
  "flyteidl/admin/project_attributes.proto", &assign_descriptors_table_flyteidl_2fadmin_2fproject_5fattributes_2eproto, 386,
};

void AddDescriptors_flyteidl_2fadmin_2fproject_5fattributes_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_flyteidl_2fadmin_2fmatchable_5fresource_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_flyteidl_2fadmin_2fproject_5fattributes_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_flyteidl_2fadmin_2fproject_5fattributes_2eproto = []() { AddDescriptors_flyteidl_2fadmin_2fproject_5fattributes_2eproto(); return true; }();
namespace flyteidl {
namespace admin {

// ===================================================================

void ProjectAttributes::InitAsDefaultInstance() {
  ::flyteidl::admin::_ProjectAttributes_default_instance_._instance.get_mutable()->matching_attributes_ = const_cast< ::flyteidl::admin::MatchingAttributes*>(
      ::flyteidl::admin::MatchingAttributes::internal_default_instance());
}
class ProjectAttributes::HasBitSetters {
 public:
  static const ::flyteidl::admin::MatchingAttributes& matching_attributes(const ProjectAttributes* msg);
};

const ::flyteidl::admin::MatchingAttributes&
ProjectAttributes::HasBitSetters::matching_attributes(const ProjectAttributes* msg) {
  return *msg->matching_attributes_;
}
void ProjectAttributes::clear_matching_attributes() {
  if (GetArenaNoVirtual() == nullptr && matching_attributes_ != nullptr) {
    delete matching_attributes_;
  }
  matching_attributes_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProjectAttributes::kProjectFieldNumber;
const int ProjectAttributes::kMatchingAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProjectAttributes::ProjectAttributes()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.ProjectAttributes)
}
ProjectAttributes::ProjectAttributes(const ProjectAttributes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project().size() > 0) {
    project_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_);
  }
  if (from.has_matching_attributes()) {
    matching_attributes_ = new ::flyteidl::admin::MatchingAttributes(*from.matching_attributes_);
  } else {
    matching_attributes_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.ProjectAttributes)
}

void ProjectAttributes::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ProjectAttributes_flyteidl_2fadmin_2fproject_5fattributes_2eproto.base);
  project_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  matching_attributes_ = nullptr;
}

ProjectAttributes::~ProjectAttributes() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.ProjectAttributes)
  SharedDtor();
}

void ProjectAttributes::SharedDtor() {
  project_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete matching_attributes_;
}

void ProjectAttributes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProjectAttributes& ProjectAttributes::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ProjectAttributes_flyteidl_2fadmin_2fproject_5fattributes_2eproto.base);
  return *internal_default_instance();
}


void ProjectAttributes::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.ProjectAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && matching_attributes_ != nullptr) {
    delete matching_attributes_;
  }
  matching_attributes_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ProjectAttributes::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ProjectAttributes*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string project = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.admin.ProjectAttributes.project");
        object = msg->mutable_project();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .flyteidl.admin.MatchingAttributes matching_attributes = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::admin::MatchingAttributes::_InternalParse;
        object = msg->mutable_matching_attributes();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ProjectAttributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.ProjectAttributes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string project = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project().data(), static_cast<int>(this->project().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.ProjectAttributes.project"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.admin.MatchingAttributes matching_attributes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_matching_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.ProjectAttributes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.ProjectAttributes)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ProjectAttributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.ProjectAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project = 1;
  if (this->project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project().data(), static_cast<int>(this->project().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.ProjectAttributes.project");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project(), output);
  }

  // .flyteidl.admin.MatchingAttributes matching_attributes = 2;
  if (this->has_matching_attributes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::matching_attributes(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.ProjectAttributes)
}

::google::protobuf::uint8* ProjectAttributes::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.ProjectAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project = 1;
  if (this->project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project().data(), static_cast<int>(this->project().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.ProjectAttributes.project");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project(), target);
  }

  // .flyteidl.admin.MatchingAttributes matching_attributes = 2;
  if (this->has_matching_attributes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::matching_attributes(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.ProjectAttributes)
  return target;
}

size_t ProjectAttributes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.ProjectAttributes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project = 1;
  if (this->project().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project());
  }

  // .flyteidl.admin.MatchingAttributes matching_attributes = 2;
  if (this->has_matching_attributes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *matching_attributes_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProjectAttributes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.ProjectAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProjectAttributes* source =
      ::google::protobuf::DynamicCastToGenerated<ProjectAttributes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.ProjectAttributes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.ProjectAttributes)
    MergeFrom(*source);
  }
}

void ProjectAttributes::MergeFrom(const ProjectAttributes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.ProjectAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project().size() > 0) {

    project_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_);
  }
  if (from.has_matching_attributes()) {
    mutable_matching_attributes()->::flyteidl::admin::MatchingAttributes::MergeFrom(from.matching_attributes());
  }
}

void ProjectAttributes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.ProjectAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProjectAttributes::CopyFrom(const ProjectAttributes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.ProjectAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjectAttributes::IsInitialized() const {
  return true;
}

void ProjectAttributes::Swap(ProjectAttributes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProjectAttributes::InternalSwap(ProjectAttributes* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_.Swap(&other->project_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(matching_attributes_, other->matching_attributes_);
}

::google::protobuf::Metadata ProjectAttributes::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fadmin_2fproject_5fattributes_2eproto);
  return ::file_level_metadata_flyteidl_2fadmin_2fproject_5fattributes_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ProjectAttributesUpdateRequest::InitAsDefaultInstance() {
  ::flyteidl::admin::_ProjectAttributesUpdateRequest_default_instance_._instance.get_mutable()->attributes_ = const_cast< ::flyteidl::admin::ProjectAttributes*>(
      ::flyteidl::admin::ProjectAttributes::internal_default_instance());
}
class ProjectAttributesUpdateRequest::HasBitSetters {
 public:
  static const ::flyteidl::admin::ProjectAttributes& attributes(const ProjectAttributesUpdateRequest* msg);
};

const ::flyteidl::admin::ProjectAttributes&
ProjectAttributesUpdateRequest::HasBitSetters::attributes(const ProjectAttributesUpdateRequest* msg) {
  return *msg->attributes_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProjectAttributesUpdateRequest::kAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProjectAttributesUpdateRequest::ProjectAttributesUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.ProjectAttributesUpdateRequest)
}
ProjectAttributesUpdateRequest::ProjectAttributesUpdateRequest(const ProjectAttributesUpdateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_attributes()) {
    attributes_ = new ::flyteidl::admin::ProjectAttributes(*from.attributes_);
  } else {
    attributes_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.ProjectAttributesUpdateRequest)
}

void ProjectAttributesUpdateRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ProjectAttributesUpdateRequest_flyteidl_2fadmin_2fproject_5fattributes_2eproto.base);
  attributes_ = nullptr;
}

ProjectAttributesUpdateRequest::~ProjectAttributesUpdateRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.ProjectAttributesUpdateRequest)
  SharedDtor();
}

void ProjectAttributesUpdateRequest::SharedDtor() {
  if (this != internal_default_instance()) delete attributes_;
}

void ProjectAttributesUpdateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProjectAttributesUpdateRequest& ProjectAttributesUpdateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ProjectAttributesUpdateRequest_flyteidl_2fadmin_2fproject_5fattributes_2eproto.base);
  return *internal_default_instance();
}


void ProjectAttributesUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.ProjectAttributesUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && attributes_ != nullptr) {
    delete attributes_;
  }
  attributes_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ProjectAttributesUpdateRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ProjectAttributesUpdateRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .flyteidl.admin.ProjectAttributes attributes = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::admin::ProjectAttributes::_InternalParse;
        object = msg->mutable_attributes();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ProjectAttributesUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.ProjectAttributesUpdateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.admin.ProjectAttributes attributes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.ProjectAttributesUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.ProjectAttributesUpdateRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ProjectAttributesUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.ProjectAttributesUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.admin.ProjectAttributes attributes = 1;
  if (this->has_attributes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::attributes(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.ProjectAttributesUpdateRequest)
}

::google::protobuf::uint8* ProjectAttributesUpdateRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.ProjectAttributesUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.admin.ProjectAttributes attributes = 1;
  if (this->has_attributes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::attributes(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.ProjectAttributesUpdateRequest)
  return target;
}

size_t ProjectAttributesUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.ProjectAttributesUpdateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .flyteidl.admin.ProjectAttributes attributes = 1;
  if (this->has_attributes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *attributes_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProjectAttributesUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.ProjectAttributesUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ProjectAttributesUpdateRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ProjectAttributesUpdateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.ProjectAttributesUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.ProjectAttributesUpdateRequest)
    MergeFrom(*source);
  }
}

void ProjectAttributesUpdateRequest::MergeFrom(const ProjectAttributesUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.ProjectAttributesUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_attributes()) {
    mutable_attributes()->::flyteidl::admin::ProjectAttributes::MergeFrom(from.attributes());
  }
}

void ProjectAttributesUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.ProjectAttributesUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProjectAttributesUpdateRequest::CopyFrom(const ProjectAttributesUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.ProjectAttributesUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjectAttributesUpdateRequest::IsInitialized() const {
  return true;
}

void ProjectAttributesUpdateRequest::Swap(ProjectAttributesUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProjectAttributesUpdateRequest::InternalSwap(ProjectAttributesUpdateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(attributes_, other->attributes_);
}

::google::protobuf::Metadata ProjectAttributesUpdateRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fadmin_2fproject_5fattributes_2eproto);
  return ::file_level_metadata_flyteidl_2fadmin_2fproject_5fattributes_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ProjectAttributesUpdateResponse::InitAsDefaultInstance() {
}
class ProjectAttributesUpdateResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProjectAttributesUpdateResponse::ProjectAttributesUpdateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.ProjectAttributesUpdateResponse)
}
ProjectAttributesUpdateResponse::ProjectAttributesUpdateResponse(const ProjectAttributesUpdateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.ProjectAttributesUpdateResponse)
}

void ProjectAttributesUpdateResponse::SharedCtor() {
}

ProjectAttributesUpdateResponse::~ProjectAttributesUpdateResponse() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.ProjectAttributesUpdateResponse)
  SharedDtor();
}

void ProjectAttributesUpdateResponse::SharedDtor() {
}

void ProjectAttributesUpdateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProjectAttributesUpdateResponse& ProjectAttributesUpdateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ProjectAttributesUpdateResponse_flyteidl_2fadmin_2fproject_5fattributes_2eproto.base);
  return *internal_default_instance();
}


void ProjectAttributesUpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.ProjectAttributesUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ProjectAttributesUpdateResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ProjectAttributesUpdateResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ProjectAttributesUpdateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.ProjectAttributesUpdateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.ProjectAttributesUpdateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.ProjectAttributesUpdateResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ProjectAttributesUpdateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.ProjectAttributesUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.ProjectAttributesUpdateResponse)
}

::google::protobuf::uint8* ProjectAttributesUpdateResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.ProjectAttributesUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.ProjectAttributesUpdateResponse)
  return target;
}

size_t ProjectAttributesUpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.ProjectAttributesUpdateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProjectAttributesUpdateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.ProjectAttributesUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ProjectAttributesUpdateResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ProjectAttributesUpdateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.ProjectAttributesUpdateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.ProjectAttributesUpdateResponse)
    MergeFrom(*source);
  }
}

void ProjectAttributesUpdateResponse::MergeFrom(const ProjectAttributesUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.ProjectAttributesUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ProjectAttributesUpdateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.ProjectAttributesUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProjectAttributesUpdateResponse::CopyFrom(const ProjectAttributesUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.ProjectAttributesUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjectAttributesUpdateResponse::IsInitialized() const {
  return true;
}

void ProjectAttributesUpdateResponse::Swap(ProjectAttributesUpdateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProjectAttributesUpdateResponse::InternalSwap(ProjectAttributesUpdateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProjectAttributesUpdateResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fadmin_2fproject_5fattributes_2eproto);
  return ::file_level_metadata_flyteidl_2fadmin_2fproject_5fattributes_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace admin
}  // namespace flyteidl
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::flyteidl::admin::ProjectAttributes* Arena::CreateMaybeMessage< ::flyteidl::admin::ProjectAttributes >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::admin::ProjectAttributes >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::ProjectAttributesUpdateRequest* Arena::CreateMaybeMessage< ::flyteidl::admin::ProjectAttributesUpdateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::admin::ProjectAttributesUpdateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::admin::ProjectAttributesUpdateResponse* Arena::CreateMaybeMessage< ::flyteidl::admin::ProjectAttributesUpdateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::admin::ProjectAttributesUpdateResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
