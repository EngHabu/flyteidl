// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/service/admin.proto

#include "flyteidl/service/admin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace flyteidl {
namespace service {
}  // namespace service
}  // namespace flyteidl
void InitDefaults_flyteidl_2fservice_2fadmin_2eproto() {
}

constexpr ::google::protobuf::Metadata* file_level_metadata_flyteidl_2fservice_2fadmin_2eproto = nullptr;
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_flyteidl_2fservice_2fadmin_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fservice_2fadmin_2eproto = nullptr;
const ::google::protobuf::uint32 TableStruct_flyteidl_2fservice_2fadmin_2eproto::offsets[1] = {};
static constexpr ::google::protobuf::internal::MigrationSchema* schemas = nullptr;
static constexpr ::google::protobuf::Message* const* file_default_instances = nullptr;

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_flyteidl_2fservice_2fadmin_2eproto = {
  {}, AddDescriptors_flyteidl_2fservice_2fadmin_2eproto, "flyteidl/service/admin.proto", schemas,
  file_default_instances, TableStruct_flyteidl_2fservice_2fadmin_2eproto::offsets,
  file_level_metadata_flyteidl_2fservice_2fadmin_2eproto, 0, file_level_enum_descriptors_flyteidl_2fservice_2fadmin_2eproto, file_level_service_descriptors_flyteidl_2fservice_2fadmin_2eproto,
};

const char descriptor_table_protodef_flyteidl_2fservice_2fadmin_2eproto[] =
  "\n\034flyteidl/service/admin.proto\022\020flyteidl"
  ".service\032\034google/api/annotations.proto\032\034"
  "flyteidl/admin/project.proto\032.flyteidl/a"
  "dmin/project_domain_attributes.proto\032\031fl"
  "yteidl/admin/task.proto\032\035flyteidl/admin/"
  "workflow.proto\032 flyteidl/admin/launch_pl"
  "an.proto\032\032flyteidl/admin/event.proto\032\036fl"
  "yteidl/admin/execution.proto\032#flyteidl/a"
  "dmin/node_execution.proto\032#flyteidl/admi"
  "n/task_execution.proto\032\033flyteidl/admin/c"
  "ommon.proto\032,protoc-gen-swagger/options/"
  "annotations.proto2\272K\n\014AdminService\022\305\002\n\nC"
  "reateTask\022!.flyteidl.admin.TaskCreateReq"
  "uest\032\".flyteidl.admin.TaskCreateResponse"
  "\"\357\001\202\323\344\223\002\022\"\r/api/v1/tasks:\001*\222A\323\001\032&Create "
  "and register a task definition.JB\n\003400\022;"
  "\n9Returned for bad request that may have"
  " failed validation.Je\n\003409\022^\n\\Returned f"
  "or a request that references an identica"
  "l entity that has already been registere"
  "d.\022\262\001\n\007GetTask\022 .flyteidl.admin.ObjectGe"
  "tRequest\032\024.flyteidl.admin.Task\"o\202\323\344\223\002\?\022="
  "/api/v1/tasks/{id.project}/{id.domain}/{"
  "id.name}/{id.version}\222A\'\032%Retrieve an ex"
  "isting task definition.\022\336\001\n\013ListTaskIds\022"
  "0.flyteidl.admin.NamedEntityIdentifierLi"
  "stRequest\032).flyteidl.admin.NamedEntityId"
  "entifierList\"r\202\323\344\223\002%\022#/api/v1/task_ids/{"
  "project}/{domain}\222AD\032BFetch existing tas"
  "k definition identifiers matching input "
  "filters.\022\353\001\n\tListTasks\022#.flyteidl.admin."
  "ResourceListRequest\032\030.flyteidl.admin.Tas"
  "kList\"\236\001\202\323\344\223\002\\\0220/api/v1/tasks/{id.projec"
  "t}/{id.domain}/{id.name}Z(\022&/api/v1/task"
  "s/{id.project}/{id.domain}\222A9\0327Fetch exi"
  "sting task definitions matching input fi"
  "lters.\022\331\002\n\016CreateWorkflow\022%.flyteidl.adm"
  "in.WorkflowCreateRequest\032&.flyteidl.admi"
  "n.WorkflowCreateResponse\"\367\001\202\323\344\223\002\026\"\021/api/"
  "v1/workflows:\001*\222A\327\001\032*Create and register"
  " a workflow definition.JB\n\003400\022;\n9Return"
  "ed for bad request that may have failed "
  "validation.Je\n\003409\022^\n\\Returned for a req"
  "uest that references an identical entity"
  " that has already been registered.\022\302\001\n\013G"
  "etWorkflow\022 .flyteidl.admin.ObjectGetReq"
  "uest\032\030.flyteidl.admin.Workflow\"w\202\323\344\223\002C\022A"
  "/api/v1/workflows/{id.project}/{id.domai"
  "n}/{id.name}/{id.version}\222A+\032)Retrieve a"
  "n existing workflow definition.\022\355\001\n\017List"
  "WorkflowIds\0220.flyteidl.admin.NamedEntity"
  "IdentifierListRequest\032).flyteidl.admin.N"
  "amedEntityIdentifierList\"}\202\323\344\223\002)\022\'/api/v"
  "1/workflow_ids/{project}/{domain}\222AK\032IFe"
  "tch an existing workflow definition iden"
  "tifiers matching input filters.\022\377\001\n\rList"
  "Workflows\022#.flyteidl.admin.ResourceListR"
  "equest\032\034.flyteidl.admin.WorkflowList\"\252\001\202"
  "\323\344\223\002d\0224/api/v1/workflows/{id.project}/{i"
  "d.domain}/{id.name}Z,\022*/api/v1/workflows"
  "/{id.project}/{id.domain}\222A=\032;Fetch exis"
  "ting workflow definitions matching input"
  " filters.\022\345\002\n\020CreateLaunchPlan\022\'.flyteid"
  "l.admin.LaunchPlanCreateRequest\032(.flytei"
  "dl.admin.LaunchPlanCreateResponse\"\375\001\202\323\344\223"
  "\002\031\"\024/api/v1/launch_plans:\001*\222A\332\001\032-Create "
  "and register a launch plan definition.JB"
  "\n\003400\022;\n9Returned for bad request that m"
  "ay have failed validation.Je\n\003409\022^\n\\Ret"
  "urned for a request that references an i"
  "dentical entity that has already been re"
  "gistered.\022\314\001\n\rGetLaunchPlan\022 .flyteidl.a"
  "dmin.ObjectGetRequest\032\032.flyteidl.admin.L"
  "aunchPlan\"}\202\323\344\223\002F\022D/api/v1/launch_plans/"
  "{id.project}/{id.domain}/{id.name}/{id.v"
  "ersion}\222A.\032,Retrieve an existing launch "
  "plan definition.\022\363\001\n\023GetActiveLaunchPlan"
  "\022\'.flyteidl.admin.ActiveLaunchPlanReques"
  "t\032\032.flyteidl.admin.LaunchPlan\"\226\001\202\323\344\223\002@\022>"
  "/api/v1/active_launch_plans/{id.project}"
  "/{id.domain}/{id.name}\222AM\032KRetrieve the "
  "active launch plan version specified by "
  "input request filters.\022\353\001\n\025ListActiveLau"
  "nchPlans\022+.flyteidl.admin.ActiveLaunchPl"
  "anListRequest\032\036.flyteidl.admin.LaunchPla"
  "nList\"\204\001\202\323\344\223\0020\022./api/v1/active_launch_pl"
  "ans/{project}/{domain}\222AK\032IFetch the act"
  "ive launch plan versions specified by in"
  "put request filters.\022\363\001\n\021ListLaunchPlanI"
  "ds\0220.flyteidl.admin.NamedEntityIdentifie"
  "rListRequest\032).flyteidl.admin.NamedEntit"
  "yIdentifierList\"\200\001\202\323\344\223\002,\022*/api/v1/launch"
  "_plan_ids/{project}/{domain}\222AK\032IFetch e"
  "xisting launch plan definition identifie"
  "rs matching input filters.\022\214\002\n\017ListLaunc"
  "hPlans\022#.flyteidl.admin.ResourceListRequ"
  "est\032\036.flyteidl.admin.LaunchPlanList\"\263\001\202\323"
  "\344\223\002j\0227/api/v1/launch_plans/{id.project}/"
  "{id.domain}/{id.name}Z/\022-/api/v1/launch_"
  "plans/{id.project}/{id.domain}\222A@\032>Fetch"
  " existing launch plan definitions matchi"
  "ng input filters.\022\300\006\n\020UpdateLaunchPlan\022\'"
  ".flyteidl.admin.LaunchPlanUpdateRequest\032"
  "(.flyteidl.admin.LaunchPlanUpdateRespons"
  "e\"\330\005\202\323\344\223\002I\032D/api/v1/launch_plans/{id.pro"
  "ject}/{id.domain}/{id.name}/{id.version}"
  ":\001*\222A\205\005\032\202\005Update the status of an existi"
  "ng launch plan definition. At most one l"
  "aunch plan version for a given {project,"
  " domain, name} can be active at a time. "
  "If this call sets a launch plan to activ"
  "e and existing version is already active"
  ", the result of this call will be that t"
  "he formerly active launch plan will be m"
  "ade inactive and specified launch plan i"
  "n this request will be made active. In t"
  "he event that the formerly active launch"
  " plan had a schedule associated it with "
  "it, this schedule will be disabled. If t"
  "he reference launch plan in this request"
  " is being set to active and has a schedu"
  "le associated with it, the schedule will"
  " be enabled.\022\242\001\n\017CreateExecution\022&.flyte"
  "idl.admin.ExecutionCreateRequest\032\'.flyte"
  "idl.admin.ExecutionCreateResponse\">\202\323\344\223\002"
  "\027\"\022/api/v1/executions:\001*\222A\036\032\034Create a wo"
  "rkflow execution.\022\261\001\n\021RelaunchExecution\022"
  "(.flyteidl.admin.ExecutionRelaunchReques"
  "t\032\'.flyteidl.admin.ExecutionCreateRespon"
  "se\"I\202\323\344\223\002 \"\033/api/v1/executions/relaunch:"
  "\001*\222A \032\036Relaunch a workflow execution.\022\302\001"
  "\n\014GetExecution\022+.flyteidl.admin.Workflow"
  "ExecutionGetRequest\032\031.flyteidl.admin.Exe"
  "cution\"j\202\323\344\223\0027\0225/api/v1/executions/{id.p"
  "roject}/{id.domain}/{id.name}\222A*\032(Retrie"
  "ve an existing workflow execution.\022\202\002\n\020G"
  "etExecutionData\022/.flyteidl.admin.Workflo"
  "wExecutionGetDataRequest\0320.flyteidl.admi"
  "n.WorkflowExecutionGetDataResponse\"\212\001\202\323\344"
  "\223\002<\022:/api/v1/data/executions/{id.project"
  "}/{id.domain}/{id.name}\222AE\032CRetrieve inp"
  "ut and output data from an existing work"
  "flow execution.\022\310\001\n\016ListExecutions\022#.fly"
  "teidl.admin.ResourceListRequest\032\035.flytei"
  "dl.admin.ExecutionList\"r\202\323\344\223\002-\022+/api/v1/"
  "executions/{id.project}/{id.domain}\222A<\032:"
  "Fetch existing workflow executions match"
  "ing input filters.\022\364\001\n\022TerminateExecutio"
  "n\022).flyteidl.admin.ExecutionTerminateReq"
  "uest\032*.flyteidl.admin.ExecutionTerminate"
  "Response\"\206\001\202\323\344\223\002:*5/api/v1/executions/{i"
  "d.project}/{id.domain}/{id.name}:\001*\222AC\032A"
  "Terminate the active workflow execution "
  "specified in the request.\022\374\001\n\020GetNodeExe"
  "cution\022\'.flyteidl.admin.NodeExecutionGet"
  "Request\032\035.flyteidl.admin.NodeExecution\"\237"
  "\001\202\323\344\223\002p\022n/api/v1/node_executions/{id.exe"
  "cution_id.project}/{id.execution_id.doma"
  "in}/{id.execution_id.name}/{id.node_id}\222"
  "A&\032$Retrieve an existing node execution."
  "\022\232\002\n\022ListNodeExecutions\022(.flyteidl.admin"
  ".NodeExecutionListRequest\032!.flyteidl.adm"
  "in.NodeExecutionList\"\266\001\202\323\344\223\002u\022s/api/v1/n"
  "ode_executions/{workflow_execution_id.pr"
  "oject}/{workflow_execution_id.domain}/{w"
  "orkflow_execution_id.name}\222A8\0326Fetch exi"
  "sting node executions matching input fil"
  "ters.\022\357\004\n\031ListNodeExecutionsForTask\022/.fl"
  "yteidl.admin.NodeExecutionForTaskListReq"
  "uest\032!.flyteidl.admin.NodeExecutionList\""
  "\375\003\202\323\344\223\002\254\003\022\251\003/api/v1/children/task_execut"
  "ions/{task_execution_id.node_execution_i"
  "d.execution_id.project}/{task_execution_"
  "id.node_execution_id.execution_id.domain"
  "}/{task_execution_id.node_execution_id.e"
  "xecution_id.name}/{task_execution_id.nod"
  "e_execution_id.node_id}/{task_execution_"
  "id.task_id.project}/{task_execution_id.t"
  "ask_id.domain}/{task_execution_id.task_i"
  "d.name}/{task_execution_id.task_id.versi"
  "on}/{task_execution_id.retry_attempt}\222AG"
  "\032EFetch child node executions launched b"
  "y the specified task execution.\022\263\002\n\024GetN"
  "odeExecutionData\022+.flyteidl.admin.NodeEx"
  "ecutionGetDataRequest\032,.flyteidl.admin.N"
  "odeExecutionGetDataResponse\"\277\001\202\323\344\223\002u\022s/a"
  "pi/v1/data/node_executions/{id.execution"
  "_id.project}/{id.execution_id.domain}/{i"
  "d.execution_id.name}/{id.node_id}\222AA\032\?Re"
  "trieve input and output data from an exi"
  "sting node execution.\022\227\001\n\017RegisterProjec"
  "t\022&.flyteidl.admin.ProjectRegisterReques"
  "t\032\'.flyteidl.admin.ProjectRegisterRespon"
  "se\"3\202\323\344\223\002\025\"\020/api/v1/projects:\001*\222A\025\032\023Regi"
  "ster a project.\022\205\001\n\014ListProjects\022\".flyte"
  "idl.admin.ProjectListRequest\032\030.flyteidl."
  "admin.Projects\"7\202\323\344\223\002\022\022\020/api/v1/projects"
  "\222A\034\032\032Fetch registered projects.\022\335\001\n\023Crea"
  "teWorkflowEvent\022-.flyteidl.admin.Workflo"
  "wExecutionEventRequest\032..flyteidl.admin."
  "WorkflowExecutionEventResponse\"g\202\323\344\223\002\035\"\030"
  "/api/v1/events/workflows:\001*\222AA\032\?Create a"
  " workflow execution event recording a ph"
  "ase transition.\022\311\001\n\017CreateNodeEvent\022).fl"
  "yteidl.admin.NodeExecutionEventRequest\032*"
  ".flyteidl.admin.NodeExecutionEventRespon"
  "se\"_\202\323\344\223\002\031\"\024/api/v1/events/nodes:\001*\222A=\032;"
  "Create a node execution event recording "
  "a phase transition.\022\311\001\n\017CreateTaskEvent\022"
  ").flyteidl.admin.TaskExecutionEventReque"
  "st\032*.flyteidl.admin.TaskExecutionEventRe"
  "sponse\"_\202\323\344\223\002\031\"\024/api/v1/events/tasks:\001*\222"
  "A=\032;Create a task execution event record"
  "ing a phase transition.\022\251\003\n\020GetTaskExecu"
  "tion\022\'.flyteidl.admin.TaskExecutionGetRe"
  "quest\032\035.flyteidl.admin.TaskExecution\"\314\002\202"
  "\323\344\223\002\234\002\022\231\002/api/v1/task_executions/{id.nod"
  "e_execution_id.execution_id.project}/{id"
  ".node_execution_id.execution_id.domain}/"
  "{id.node_execution_id.execution_id.name}"
  "/{id.node_execution_id.node_id}/{id.task"
  "_id.project}/{id.task_id.domain}/{id.tas"
  "k_id.name}/{id.task_id.version}/{id.retr"
  "y_attempt}\222A&\032$Retrieve an existing task"
  " execution.\022\323\002\n\022ListTaskExecutions\022(.fly"
  "teidl.admin.TaskExecutionListRequest\032!.f"
  "lyteidl.admin.TaskExecutionList\"\357\001\202\323\344\223\002\255"
  "\001\022\252\001/api/v1/task_executions/{node_execut"
  "ion_id.execution_id.project}/{node_execu"
  "tion_id.execution_id.domain}/{node_execu"
  "tion_id.execution_id.name}/{node_executi"
  "on_id.node_id}\222A8\0326Fetch existing task e"
  "xecutions matching input filters.\022\340\003\n\024Ge"
  "tTaskExecutionData\022+.flyteidl.admin.Task"
  "ExecutionGetDataRequest\032,.flyteidl.admin"
  ".TaskExecutionGetDataResponse\"\354\002\202\323\344\223\002\241\002\022"
  "\236\002/api/v1/data/task_executions/{id.node_"
  "execution_id.execution_id.project}/{id.n"
  "ode_execution_id.execution_id.domain}/{i"
  "d.node_execution_id.execution_id.name}/{"
  "id.node_execution_id.node_id}/{id.task_i"
  "d.project}/{id.task_id.domain}/{id.task_"
  "id.name}/{id.task_id.version}/{id.retry_"
  "attempt}\222AA\032\?Retrieve input and output d"
  "ata from an existing task execution.\022\277\002\n"
  "\035UpdateProjectDomainAttributes\0224.flyteid"
  "l.admin.ProjectDomainAttributesUpdateReq"
  "uest\0325.flyteidl.admin.ProjectDomainAttri"
  "butesUpdateResponse\"\260\001\202\323\344\223\002O\032J/api/v1/pr"
  "oject_domain_attributes/{attributes.proj"
  "ect}/{attributes.domain}:\001*\222AX\032VUpdate t"
  "he customized resource attributes associ"
  "ated with a project-domain combinationB5"
  "Z3github.com/lyft/flyteidl/gen/pb-go/fly"
  "teidl/serviceb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_flyteidl_2fservice_2fadmin_2eproto = {
  false, InitDefaults_flyteidl_2fservice_2fadmin_2eproto, 
  descriptor_table_protodef_flyteidl_2fservice_2fadmin_2eproto,
  "flyteidl/service/admin.proto", &assign_descriptors_table_flyteidl_2fservice_2fadmin_2eproto, 10181,
};

void AddDescriptors_flyteidl_2fservice_2fadmin_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[12] =
  {
    ::AddDescriptors_google_2fapi_2fannotations_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fproject_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fproject_5fdomain_5fattributes_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2ftask_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fworkflow_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2flaunch_5fplan_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fevent_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fexecution_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fnode_5fexecution_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2ftask_5fexecution_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fcommon_2eproto,
    ::AddDescriptors_protoc_2dgen_2dswagger_2foptions_2fannotations_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_flyteidl_2fservice_2fadmin_2eproto, deps, 12);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_flyteidl_2fservice_2fadmin_2eproto = []() { AddDescriptors_flyteidl_2fservice_2fadmin_2eproto(); return true; }();
namespace flyteidl {
namespace service {

// @@protoc_insertion_point(namespace_scope)
}  // namespace service
}  // namespace flyteidl
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
