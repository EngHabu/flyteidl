// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flyteidl/core/interface.proto

package core // import "github.com/lyft/flyteidl/gen/pb-go/flyteidl/core"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Defines a strongly typed variable.
type Variable struct {
	// Variable name. This can be referenced in input/output bindings to pass data between
	// nodes/workflows. Variable name is case-sensitive.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Variable literal type.
	Type *LiteralType `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// +optional string describing input variable
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Variable) Reset()         { *m = Variable{} }
func (m *Variable) String() string { return proto.CompactTextString(m) }
func (*Variable) ProtoMessage()    {}
func (*Variable) Descriptor() ([]byte, []int) {
	return fileDescriptor_interface_a20c16628468108b, []int{0}
}
func (m *Variable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Variable.Unmarshal(m, b)
}
func (m *Variable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Variable.Marshal(b, m, deterministic)
}
func (dst *Variable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Variable.Merge(dst, src)
}
func (m *Variable) XXX_Size() int {
	return xxx_messageInfo_Variable.Size(m)
}
func (m *Variable) XXX_DiscardUnknown() {
	xxx_messageInfo_Variable.DiscardUnknown(m)
}

var xxx_messageInfo_Variable proto.InternalMessageInfo

func (m *Variable) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Variable) GetType() *LiteralType {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Variable) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// A map of Variables
type VariableMap struct {
	Variables            map[string]*Variable `protobuf:"bytes,1,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *VariableMap) Reset()         { *m = VariableMap{} }
func (m *VariableMap) String() string { return proto.CompactTextString(m) }
func (*VariableMap) ProtoMessage()    {}
func (*VariableMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_interface_a20c16628468108b, []int{1}
}
func (m *VariableMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VariableMap.Unmarshal(m, b)
}
func (m *VariableMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VariableMap.Marshal(b, m, deterministic)
}
func (dst *VariableMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VariableMap.Merge(dst, src)
}
func (m *VariableMap) XXX_Size() int {
	return xxx_messageInfo_VariableMap.Size(m)
}
func (m *VariableMap) XXX_DiscardUnknown() {
	xxx_messageInfo_VariableMap.DiscardUnknown(m)
}

var xxx_messageInfo_VariableMap proto.InternalMessageInfo

func (m *VariableMap) GetVariables() map[string]*Variable {
	if m != nil {
		return m.Variables
	}
	return nil
}

// Declares an input parameter.
type Parameter struct {
	// +required Variable. Defines a name and a type to reference/compare through out the system.
	Var *Variable `protobuf:"bytes,1,opt,name=var,proto3" json:"var,omitempty"`
	// +optional
	//
	// Types that are valid to be assigned to Default:
	//	*Parameter_Value
	//	*Parameter_Required
	Default              isParameter_Default `protobuf_oneof:"default"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Parameter) Reset()         { *m = Parameter{} }
func (m *Parameter) String() string { return proto.CompactTextString(m) }
func (*Parameter) ProtoMessage()    {}
func (*Parameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_interface_a20c16628468108b, []int{2}
}
func (m *Parameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Parameter.Unmarshal(m, b)
}
func (m *Parameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Parameter.Marshal(b, m, deterministic)
}
func (dst *Parameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Parameter.Merge(dst, src)
}
func (m *Parameter) XXX_Size() int {
	return xxx_messageInfo_Parameter.Size(m)
}
func (m *Parameter) XXX_DiscardUnknown() {
	xxx_messageInfo_Parameter.DiscardUnknown(m)
}

var xxx_messageInfo_Parameter proto.InternalMessageInfo

func (m *Parameter) GetVar() *Variable {
	if m != nil {
		return m.Var
	}
	return nil
}

type isParameter_Default interface {
	isParameter_Default()
}

type Parameter_Value struct {
	Value *Literal `protobuf:"bytes,2,opt,name=value,proto3,oneof"`
}

type Parameter_Required struct {
	Required bool `protobuf:"varint,3,opt,name=required,proto3,oneof"`
}

func (*Parameter_Value) isParameter_Default() {}

func (*Parameter_Required) isParameter_Default() {}

func (m *Parameter) GetDefault() isParameter_Default {
	if m != nil {
		return m.Default
	}
	return nil
}

func (m *Parameter) GetValue() *Literal {
	if x, ok := m.GetDefault().(*Parameter_Value); ok {
		return x.Value
	}
	return nil
}

func (m *Parameter) GetRequired() bool {
	if x, ok := m.GetDefault().(*Parameter_Required); ok {
		return x.Required
	}
	return false
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Parameter) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Parameter_OneofMarshaler, _Parameter_OneofUnmarshaler, _Parameter_OneofSizer, []interface{}{
		(*Parameter_Value)(nil),
		(*Parameter_Required)(nil),
	}
}

func _Parameter_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Parameter)
	// default
	switch x := m.Default.(type) {
	case *Parameter_Value:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Value); err != nil {
			return err
		}
	case *Parameter_Required:
		t := uint64(0)
		if x.Required {
			t = 1
		}
		b.EncodeVarint(3<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("Parameter.Default has unexpected type %T", x)
	}
	return nil
}

func _Parameter_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Parameter)
	switch tag {
	case 2: // default.value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Literal)
		err := b.DecodeMessage(msg)
		m.Default = &Parameter_Value{msg}
		return true, err
	case 3: // default.required
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Default = &Parameter_Required{x != 0}
		return true, err
	default:
		return false, nil
	}
}

func _Parameter_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Parameter)
	// default
	switch x := m.Default.(type) {
	case *Parameter_Value:
		s := proto.Size(x.Value)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Parameter_Required:
		n += 1 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// A map of Parameters.
type ParameterMap struct {
	Parameters           map[string]*Parameter `protobuf:"bytes,1,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ParameterMap) Reset()         { *m = ParameterMap{} }
func (m *ParameterMap) String() string { return proto.CompactTextString(m) }
func (*ParameterMap) ProtoMessage()    {}
func (*ParameterMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_interface_a20c16628468108b, []int{3}
}
func (m *ParameterMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParameterMap.Unmarshal(m, b)
}
func (m *ParameterMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParameterMap.Marshal(b, m, deterministic)
}
func (dst *ParameterMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParameterMap.Merge(dst, src)
}
func (m *ParameterMap) XXX_Size() int {
	return xxx_messageInfo_ParameterMap.Size(m)
}
func (m *ParameterMap) XXX_DiscardUnknown() {
	xxx_messageInfo_ParameterMap.DiscardUnknown(m)
}

var xxx_messageInfo_ParameterMap proto.InternalMessageInfo

func (m *ParameterMap) GetParameters() map[string]*Parameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

// Defines strongly typed inputs and outputs.
type TypedInterface struct {
	Inputs               *VariableMap `protobuf:"bytes,1,opt,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs              *VariableMap `protobuf:"bytes,2,opt,name=outputs,proto3" json:"outputs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TypedInterface) Reset()         { *m = TypedInterface{} }
func (m *TypedInterface) String() string { return proto.CompactTextString(m) }
func (*TypedInterface) ProtoMessage()    {}
func (*TypedInterface) Descriptor() ([]byte, []int) {
	return fileDescriptor_interface_a20c16628468108b, []int{4}
}
func (m *TypedInterface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TypedInterface.Unmarshal(m, b)
}
func (m *TypedInterface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TypedInterface.Marshal(b, m, deterministic)
}
func (dst *TypedInterface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TypedInterface.Merge(dst, src)
}
func (m *TypedInterface) XXX_Size() int {
	return xxx_messageInfo_TypedInterface.Size(m)
}
func (m *TypedInterface) XXX_DiscardUnknown() {
	xxx_messageInfo_TypedInterface.DiscardUnknown(m)
}

var xxx_messageInfo_TypedInterface proto.InternalMessageInfo

func (m *TypedInterface) GetInputs() *VariableMap {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *TypedInterface) GetOutputs() *VariableMap {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func init() {
	proto.RegisterType((*Variable)(nil), "flyteidl.core.Variable")
	proto.RegisterType((*VariableMap)(nil), "flyteidl.core.VariableMap")
	proto.RegisterMapType((map[string]*Variable)(nil), "flyteidl.core.VariableMap.VariablesEntry")
	proto.RegisterType((*Parameter)(nil), "flyteidl.core.Parameter")
	proto.RegisterType((*ParameterMap)(nil), "flyteidl.core.ParameterMap")
	proto.RegisterMapType((map[string]*Parameter)(nil), "flyteidl.core.ParameterMap.ParametersEntry")
	proto.RegisterType((*TypedInterface)(nil), "flyteidl.core.TypedInterface")
}

func init() {
	proto.RegisterFile("flyteidl/core/interface.proto", fileDescriptor_interface_a20c16628468108b)
}

var fileDescriptor_interface_a20c16628468108b = []byte{
	// 421 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0x4d, 0x8f, 0x94, 0x40,
	0x10, 0xdd, 0x1e, 0xd6, 0xdd, 0xa1, 0xd0, 0xd5, 0xf4, 0x41, 0x91, 0xac, 0x09, 0xe1, 0x34, 0x1b,
	0xb3, 0x60, 0xd0, 0x83, 0xf1, 0xb8, 0x89, 0x71, 0x8d, 0x9a, 0x18, 0xe2, 0x47, 0xe2, 0xad, 0x81,
	0x62, 0xec, 0xd8, 0x03, 0x6d, 0xd3, 0x4c, 0x82, 0x7f, 0xc2, 0x5f, 0xe2, 0xcd, 0x1f, 0x68, 0x60,
	0x80, 0x05, 0x32, 0xe3, 0xde, 0xba, 0xfa, 0xbd, 0x57, 0x8f, 0x7a, 0x74, 0xc1, 0x93, 0x4c, 0xd4,
	0x1a, 0x79, 0x2a, 0x82, 0xa4, 0x50, 0x18, 0xf0, 0x5c, 0xa3, 0xca, 0x58, 0x82, 0xbe, 0x54, 0x85,
	0x2e, 0xe8, 0xbd, 0x1e, 0xf6, 0x1b, 0xd8, 0x79, 0x3c, 0x65, 0xeb, 0x5a, 0x62, 0xb9, 0x63, 0x3a,
	0xe7, 0x53, 0x48, 0x70, 0x8d, 0x8a, 0x89, 0x0e, 0xf5, 0x24, 0x2c, 0xbf, 0x30, 0xc5, 0x59, 0x2c,
	0x90, 0x52, 0x38, 0xce, 0xd9, 0x06, 0x6d, 0xe2, 0x92, 0x95, 0x19, 0xb5, 0x67, 0xea, 0xc3, 0x71,
	0xd3, 0xcc, 0x5e, 0xb8, 0x64, 0x65, 0x85, 0x8e, 0x3f, 0xb1, 0xf5, 0xdf, 0xef, 0x9a, 0x7d, 0xaa,
	0x25, 0x46, 0x2d, 0x8f, 0xba, 0x60, 0xa5, 0x58, 0x26, 0x8a, 0x4b, 0xcd, 0x8b, 0xdc, 0x36, 0xda,
	0x56, 0xe3, 0x2b, 0xef, 0x0f, 0x01, 0xab, 0xb7, 0xfc, 0xc0, 0x24, 0x7d, 0x03, 0xe6, 0xb6, 0x2b,
	0x4b, 0x9b, 0xb8, 0xc6, 0xca, 0x0a, 0x2f, 0x66, 0x36, 0x23, 0xfa, 0x70, 0x2e, 0x5f, 0xe7, 0x5a,
	0xd5, 0xd1, 0x8d, 0xd6, 0xf9, 0x0c, 0x67, 0x53, 0x90, 0x3e, 0x00, 0xe3, 0x07, 0xd6, 0xdd, 0x3c,
	0xcd, 0x91, 0x5e, 0xc2, 0x9d, 0x2d, 0x13, 0x55, 0x3f, 0xcf, 0xa3, 0x03, 0x46, 0xd1, 0x8e, 0xf5,
	0x6a, 0xf1, 0x92, 0x78, 0xbf, 0x09, 0x98, 0x1f, 0x99, 0x62, 0x1b, 0xd4, 0xa8, 0xe8, 0x05, 0x18,
	0x5b, 0xa6, 0xda, 0x96, 0xff, 0x91, 0x37, 0x1c, 0xea, 0x4f, 0xbd, 0x1e, 0xee, 0xcf, 0xee, 0xfa,
	0xa8, 0x33, 0xa3, 0xe7, 0xb0, 0x54, 0xf8, 0xb3, 0xe2, 0x0a, 0xd3, 0x36, 0xb7, 0xe5, 0xf5, 0x51,
	0x34, 0xdc, 0x5c, 0x99, 0x70, 0x9a, 0x62, 0xc6, 0x2a, 0xa1, 0xbd, 0xbf, 0x04, 0xee, 0x0e, 0x5f,
	0xd4, 0x44, 0xf8, 0x0e, 0x40, 0xf6, 0x75, 0x9f, 0xe1, 0xd3, 0x99, 0xdd, 0x58, 0x70, 0x53, 0x74,
	0x29, 0x8e, 0xe4, 0xce, 0x57, 0xb8, 0x3f, 0x83, 0xf7, 0xe4, 0x38, 0x9b, 0xcd, 0x3e, 0x64, 0x36,
	0x0e, 0xf2, 0x17, 0x9c, 0x35, 0x0f, 0x25, 0x7d, 0xdb, 0x3f, 0x65, 0x1a, 0xc2, 0x09, 0xcf, 0x65,
	0xa5, 0xcb, 0x2e, 0x4f, 0xe7, 0xf0, 0x7f, 0x8f, 0x3a, 0x26, 0x7d, 0x01, 0xa7, 0x45, 0xa5, 0x5b,
	0xd1, 0xe2, 0x56, 0x51, 0x4f, 0xbd, 0x0a, 0xbf, 0x3d, 0x5b, 0x73, 0xfd, 0xbd, 0x8a, 0xfd, 0xa4,
	0xd8, 0x04, 0xa2, 0xce, 0x74, 0x30, 0xac, 0xc5, 0x1a, 0xf3, 0x40, 0xc6, 0x97, 0xeb, 0x22, 0x98,
	0x6c, 0x4a, 0x7c, 0xd2, 0x6e, 0xc8, 0xf3, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x32, 0xb7,
	0x7c, 0x8a, 0x03, 0x00, 0x00,
}
