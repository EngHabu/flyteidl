# WARNING: THIS FILE IS MANAGED IN THE 'FLYTE' REPO AND COPIED TO OTHER REPOSITORIES.
# ONLY EDIT THIS FILE IF:
#   A) THIS IS THE 'FLYTE' REPO
#   B) THIS CHANGE WORKS ACCROSS ALL APPLICABLE FLYTE SERVICES
# TO OPT OUT OF UPDATES, SEE https://github.com/lyft/flyte/blob/master/sync_files/Readme.rst

# Using go1.10.4
FROM golang:1.10.4-alpine3.8 as builder
RUN apk add git openssh-client make curl

# COPY only the glide files for efficient caching
COPY glide.* /go/src/github.com/lyft/{{REPOSITORY}}/
WORKDIR /go/src/github.com/lyft/{{REPOSITORY}}

# Pull dependencies
ARG SSH_PRIVATE_KEY
# Temporary: We need github credentials in order to install private repos.
# These repos will be public soon. Then this line can just be "glide install"
RUN : \
  && mkdir /root/.ssh/ \
  && echo "${SSH_PRIVATE_KEY}" > /root/.ssh/id_rsa \
  && chmod 400 /root/.ssh/id_rsa \
  && ssh-keyscan github.com >> ~/.ssh/known_hosts \
  && curl https://glide.sh/get | sh \
  && glide install \
  && rm /root/.ssh/id_rsa

# COPY the rest of the source code
COPY . /go/src/github.com/lyft/{{REPOSITORY}}/

# This 'linux_compile' target should compile binaries to the /artifacts directory
# The main entrypoint should be compiled to /artifacts/{{REPOSITORY}}
RUN make linux_compile

# update the PATH to include the /artifacts directory
ENV PATH="/artifacts:${PATH}"

# We cannot use scratch as we need root certificates for the standard CAs
FROM centurylink/ca-certs:latest
COPY --from=builder /artifacts /bin
CMD ["{{REPOSITORY}}"]
