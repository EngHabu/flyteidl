# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flyteidl/plugins/hive.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from flyteidl.core import tasks_pb2 as flyteidl_dot_core_dot_tasks__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='flyteidl/plugins/hive.proto',
  package='flyteidl.plugins',
  syntax='proto3',
  serialized_pb=_b('\n\x1b\x66lyteidl/plugins/hive.proto\x12\x10\x66lyteidl.plugins\x1a\x19\x66lyteidl/core/tasks.proto\"\x1a\n\tHiveQuery\x12\r\n\x05query\x18\x01 \x01(\t\"C\n\x13HiveQueryCollection\x12,\n\x07queries\x18\x02 \x03(\x0b\x32\x1b.flyteidl.plugins.HiveQueryB,Z*github.com/lyft/flyteidl/gen/pb-go/pluginsb\x06proto3')
  ,
  dependencies=[flyteidl_dot_core_dot_tasks__pb2.DESCRIPTOR,])




_HIVEQUERY = _descriptor.Descriptor(
  name='HiveQuery',
  full_name='flyteidl.plugins.HiveQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='query', full_name='flyteidl.plugins.HiveQuery.query', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=76,
  serialized_end=102,
)


_HIVEQUERYCOLLECTION = _descriptor.Descriptor(
  name='HiveQueryCollection',
  full_name='flyteidl.plugins.HiveQueryCollection',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='queries', full_name='flyteidl.plugins.HiveQueryCollection.queries', index=0,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=104,
  serialized_end=171,
)

_HIVEQUERYCOLLECTION.fields_by_name['queries'].message_type = _HIVEQUERY
DESCRIPTOR.message_types_by_name['HiveQuery'] = _HIVEQUERY
DESCRIPTOR.message_types_by_name['HiveQueryCollection'] = _HIVEQUERYCOLLECTION
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

HiveQuery = _reflection.GeneratedProtocolMessageType('HiveQuery', (_message.Message,), dict(
  DESCRIPTOR = _HIVEQUERY,
  __module__ = 'flyteidl.plugins.hive_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.plugins.HiveQuery)
  ))
_sym_db.RegisterMessage(HiveQuery)

HiveQueryCollection = _reflection.GeneratedProtocolMessageType('HiveQueryCollection', (_message.Message,), dict(
  DESCRIPTOR = _HIVEQUERYCOLLECTION,
  __module__ = 'flyteidl.plugins.hive_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.plugins.HiveQueryCollection)
  ))
_sym_db.RegisterMessage(HiveQueryCollection)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z*github.com/lyft/flyteidl/gen/pb-go/plugins'))
# @@protoc_insertion_point(module_scope)
