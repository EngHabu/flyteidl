// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/plugins/sagemaker/training_job.proto

#include "flyteidl/plugins/sagemaker/training_job.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AlgorithmSpecification_MetricDefinition_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TrainingJobConfig_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AlgorithmSpecification_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto;
namespace flyteidl {
namespace plugins {
namespace sagemaker {
class AlgorithmSpecification_MetricDefinitionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlgorithmSpecification_MetricDefinition> _instance;
} _AlgorithmSpecification_MetricDefinition_default_instance_;
class AlgorithmSpecificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AlgorithmSpecification> _instance;
} _AlgorithmSpecification_default_instance_;
class TrainingJobConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TrainingJobConfig> _instance;
} _TrainingJobConfig_default_instance_;
class StoppingConditionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StoppingCondition> _instance;
} _StoppingCondition_default_instance_;
class TrainingJobDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TrainingJob> _instance;
} _TrainingJob_default_instance_;
}  // namespace sagemaker
}  // namespace plugins
}  // namespace flyteidl
static void InitDefaultsAlgorithmSpecification_MetricDefinition_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::plugins::sagemaker::_AlgorithmSpecification_MetricDefinition_default_instance_;
    new (ptr) ::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AlgorithmSpecification_MetricDefinition_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAlgorithmSpecification_MetricDefinition_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto}, {}};

static void InitDefaultsAlgorithmSpecification_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::plugins::sagemaker::_AlgorithmSpecification_default_instance_;
    new (ptr) ::flyteidl::plugins::sagemaker::AlgorithmSpecification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::plugins::sagemaker::AlgorithmSpecification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AlgorithmSpecification_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAlgorithmSpecification_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto}, {
      &scc_info_AlgorithmSpecification_MetricDefinition_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto.base,}};

static void InitDefaultsTrainingJobConfig_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::plugins::sagemaker::_TrainingJobConfig_default_instance_;
    new (ptr) ::flyteidl::plugins::sagemaker::TrainingJobConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::plugins::sagemaker::TrainingJobConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TrainingJobConfig_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTrainingJobConfig_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto}, {}};

static void InitDefaultsStoppingCondition_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::plugins::sagemaker::_StoppingCondition_default_instance_;
    new (ptr) ::flyteidl::plugins::sagemaker::StoppingCondition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::plugins::sagemaker::StoppingCondition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StoppingCondition_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStoppingCondition_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto}, {}};

static void InitDefaultsTrainingJob_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::plugins::sagemaker::_TrainingJob_default_instance_;
    new (ptr) ::flyteidl::plugins::sagemaker::TrainingJob();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::plugins::sagemaker::TrainingJob::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TrainingJob_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTrainingJob_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto}, {
      &scc_info_AlgorithmSpecification_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto.base,
      &scc_info_TrainingJobConfig_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto.base,}};

void InitDefaults_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_AlgorithmSpecification_MetricDefinition_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AlgorithmSpecification_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TrainingJobConfig_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StoppingCondition_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TrainingJob_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto[2];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition, name_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition, regex_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::AlgorithmSpecification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::AlgorithmSpecification, input_mode_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::AlgorithmSpecification, algorithm_name_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::AlgorithmSpecification, algorithm_version_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::AlgorithmSpecification, metric_definitions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::TrainingJobConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::TrainingJobConfig, instance_count_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::TrainingJobConfig, instance_type_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::TrainingJobConfig, volume_size_in_gb_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::StoppingCondition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::StoppingCondition, max_runtime_in_seconds_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::StoppingCondition, max_wait_time_in_seconds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::TrainingJob, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::TrainingJob, algorithm_specification_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::TrainingJob, training_job_config_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::plugins::sagemaker::TrainingJob, interruptible_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition)},
  { 7, -1, sizeof(::flyteidl::plugins::sagemaker::AlgorithmSpecification)},
  { 16, -1, sizeof(::flyteidl::plugins::sagemaker::TrainingJobConfig)},
  { 24, -1, sizeof(::flyteidl::plugins::sagemaker::StoppingCondition)},
  { 31, -1, sizeof(::flyteidl::plugins::sagemaker::TrainingJob)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::plugins::sagemaker::_AlgorithmSpecification_MetricDefinition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::plugins::sagemaker::_AlgorithmSpecification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::plugins::sagemaker::_TrainingJobConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::plugins::sagemaker::_StoppingCondition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::plugins::sagemaker::_TrainingJob_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto = {
  {}, AddDescriptors_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto, "flyteidl/plugins/sagemaker/training_job.proto", schemas,
  file_default_instances, TableStruct_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto::offsets,
  file_level_metadata_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto, 5, file_level_enum_descriptors_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto, file_level_service_descriptors_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto,
};

const char descriptor_table_protodef_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto[] =
  "\n-flyteidl/plugins/sagemaker/training_jo"
  "b.proto\022\032flyteidl.plugins.sagemaker\"\303\002\n\026"
  "AlgorithmSpecification\0229\n\ninput_mode\030\001 \001"
  "(\0162%.flyteidl.plugins.sagemaker.InputMod"
  "e\022A\n\016algorithm_name\030\002 \001(\0162).flyteidl.plu"
  "gins.sagemaker.AlgorithmName\022\031\n\021algorith"
  "m_version\030\003 \001(\t\022_\n\022metric_definitions\030\004 "
  "\003(\0132C.flyteidl.plugins.sagemaker.Algorit"
  "hmSpecification.MetricDefinition\032/\n\020Metr"
  "icDefinition\022\014\n\004name\030\001 \001(\t\022\r\n\005regex\030\002 \001("
  "\t\"]\n\021TrainingJobConfig\022\026\n\016instance_count"
  "\030\001 \001(\003\022\025\n\rinstance_type\030\002 \001(\t\022\031\n\021volume_"
  "size_in_gb\030\003 \001(\t\"U\n\021StoppingCondition\022\036\n"
  "\026max_runtime_in_seconds\030\001 \001(\003\022 \n\030max_wai"
  "t_time_in_seconds\030\002 \001(\003\"\305\001\n\013TrainingJob\022"
  "S\n\027algorithm_specification\030\001 \001(\01322.flyte"
  "idl.plugins.sagemaker.AlgorithmSpecifica"
  "tion\022J\n\023training_job_config\030\002 \001(\0132-.flyt"
  "eidl.plugins.sagemaker.TrainingJobConfig"
  "\022\025\n\rinterruptible\030\004 \001(\010*\037\n\tInputMode\022\010\n\004"
  "FILE\020\000\022\010\n\004PIPE\020\001*(\n\rAlgorithmName\022\n\n\006CUS"
  "TOM\020\000\022\013\n\007XGBOOST\020\001B5Z3github.com/lyft/fl"
  "yteidl/gen/pb-go/flyteidl/pluginsb\006proto"
  "3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto = {
  false, InitDefaults_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto, 
  descriptor_table_protodef_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto,
  "flyteidl/plugins/sagemaker/training_job.proto", &assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto, 921,
};

void AddDescriptors_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto = []() { AddDescriptors_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto(); return true; }();
namespace flyteidl {
namespace plugins {
namespace sagemaker {
const ::google::protobuf::EnumDescriptor* InputMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto);
  return file_level_enum_descriptors_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto[0];
}
bool InputMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AlgorithmName_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto);
  return file_level_enum_descriptors_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto[1];
}
bool AlgorithmName_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void AlgorithmSpecification_MetricDefinition::InitAsDefaultInstance() {
}
class AlgorithmSpecification_MetricDefinition::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlgorithmSpecification_MetricDefinition::kNameFieldNumber;
const int AlgorithmSpecification_MetricDefinition::kRegexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlgorithmSpecification_MetricDefinition::AlgorithmSpecification_MetricDefinition()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
}
AlgorithmSpecification_MetricDefinition::AlgorithmSpecification_MetricDefinition(const AlgorithmSpecification_MetricDefinition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  regex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.regex().size() > 0) {
    regex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regex_);
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
}

void AlgorithmSpecification_MetricDefinition::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AlgorithmSpecification_MetricDefinition_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AlgorithmSpecification_MetricDefinition::~AlgorithmSpecification_MetricDefinition() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  SharedDtor();
}

void AlgorithmSpecification_MetricDefinition::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regex_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AlgorithmSpecification_MetricDefinition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AlgorithmSpecification_MetricDefinition& AlgorithmSpecification_MetricDefinition::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AlgorithmSpecification_MetricDefinition_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto.base);
  return *internal_default_instance();
}


void AlgorithmSpecification_MetricDefinition::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AlgorithmSpecification_MetricDefinition::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AlgorithmSpecification_MetricDefinition*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string regex = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.regex");
        object = msg->mutable_regex();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AlgorithmSpecification_MetricDefinition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string regex = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regex()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->regex().data(), static_cast<int>(this->regex().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.regex"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AlgorithmSpecification_MetricDefinition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string regex = 2;
  if (this->regex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regex().data(), static_cast<int>(this->regex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.regex");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->regex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
}

::google::protobuf::uint8* AlgorithmSpecification_MetricDefinition::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string regex = 2;
  if (this->regex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regex().data(), static_cast<int>(this->regex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.regex");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->regex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  return target;
}

size_t AlgorithmSpecification_MetricDefinition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string regex = 2;
  if (this->regex().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->regex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlgorithmSpecification_MetricDefinition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  GOOGLE_DCHECK_NE(&from, this);
  const AlgorithmSpecification_MetricDefinition* source =
      ::google::protobuf::DynamicCastToGenerated<AlgorithmSpecification_MetricDefinition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
    MergeFrom(*source);
  }
}

void AlgorithmSpecification_MetricDefinition::MergeFrom(const AlgorithmSpecification_MetricDefinition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.regex().size() > 0) {

    regex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regex_);
  }
}

void AlgorithmSpecification_MetricDefinition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlgorithmSpecification_MetricDefinition::CopyFrom(const AlgorithmSpecification_MetricDefinition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlgorithmSpecification_MetricDefinition::IsInitialized() const {
  return true;
}

void AlgorithmSpecification_MetricDefinition::Swap(AlgorithmSpecification_MetricDefinition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlgorithmSpecification_MetricDefinition::InternalSwap(AlgorithmSpecification_MetricDefinition* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  regex_.Swap(&other->regex_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata AlgorithmSpecification_MetricDefinition::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto);
  return ::file_level_metadata_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AlgorithmSpecification::InitAsDefaultInstance() {
}
class AlgorithmSpecification::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlgorithmSpecification::kInputModeFieldNumber;
const int AlgorithmSpecification::kAlgorithmNameFieldNumber;
const int AlgorithmSpecification::kAlgorithmVersionFieldNumber;
const int AlgorithmSpecification::kMetricDefinitionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlgorithmSpecification::AlgorithmSpecification()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.plugins.sagemaker.AlgorithmSpecification)
}
AlgorithmSpecification::AlgorithmSpecification(const AlgorithmSpecification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      metric_definitions_(from.metric_definitions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  algorithm_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.algorithm_version().size() > 0) {
    algorithm_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.algorithm_version_);
  }
  ::memcpy(&input_mode_, &from.input_mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&algorithm_name_) -
    reinterpret_cast<char*>(&input_mode_)) + sizeof(algorithm_name_));
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.AlgorithmSpecification)
}

void AlgorithmSpecification::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AlgorithmSpecification_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto.base);
  algorithm_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&input_mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&algorithm_name_) -
      reinterpret_cast<char*>(&input_mode_)) + sizeof(algorithm_name_));
}

AlgorithmSpecification::~AlgorithmSpecification() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  SharedDtor();
}

void AlgorithmSpecification::SharedDtor() {
  algorithm_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AlgorithmSpecification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AlgorithmSpecification& AlgorithmSpecification::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AlgorithmSpecification_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto.base);
  return *internal_default_instance();
}


void AlgorithmSpecification::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metric_definitions_.Clear();
  algorithm_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&input_mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&algorithm_name_) -
      reinterpret_cast<char*>(&input_mode_)) + sizeof(algorithm_name_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AlgorithmSpecification::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AlgorithmSpecification*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .flyteidl.plugins.sagemaker.InputMode input_mode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_input_mode(static_cast<::flyteidl::plugins::sagemaker::InputMode>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .flyteidl.plugins.sagemaker.AlgorithmName algorithm_name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_algorithm_name(static_cast<::flyteidl::plugins::sagemaker::AlgorithmName>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string algorithm_version = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.plugins.sagemaker.AlgorithmSpecification.algorithm_version");
        object = msg->mutable_algorithm_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition metric_definitions = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition::_InternalParse;
          object = msg->add_metric_definitions();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AlgorithmSpecification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.plugins.sagemaker.InputMode input_mode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_input_mode(static_cast< ::flyteidl::plugins::sagemaker::InputMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.plugins.sagemaker.AlgorithmName algorithm_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_algorithm_name(static_cast< ::flyteidl::plugins::sagemaker::AlgorithmName >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string algorithm_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_algorithm_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->algorithm_version().data(), static_cast<int>(this->algorithm_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.plugins.sagemaker.AlgorithmSpecification.algorithm_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition metric_definitions = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_metric_definitions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AlgorithmSpecification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.plugins.sagemaker.InputMode input_mode = 1;
  if (this->input_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->input_mode(), output);
  }

  // .flyteidl.plugins.sagemaker.AlgorithmName algorithm_name = 2;
  if (this->algorithm_name() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->algorithm_name(), output);
  }

  // string algorithm_version = 3;
  if (this->algorithm_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->algorithm_version().data(), static_cast<int>(this->algorithm_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.AlgorithmSpecification.algorithm_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->algorithm_version(), output);
  }

  // repeated .flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition metric_definitions = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metric_definitions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->metric_definitions(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.plugins.sagemaker.AlgorithmSpecification)
}

::google::protobuf::uint8* AlgorithmSpecification::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.plugins.sagemaker.InputMode input_mode = 1;
  if (this->input_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->input_mode(), target);
  }

  // .flyteidl.plugins.sagemaker.AlgorithmName algorithm_name = 2;
  if (this->algorithm_name() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->algorithm_name(), target);
  }

  // string algorithm_version = 3;
  if (this->algorithm_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->algorithm_version().data(), static_cast<int>(this->algorithm_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.AlgorithmSpecification.algorithm_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->algorithm_version(), target);
  }

  // repeated .flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition metric_definitions = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metric_definitions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->metric_definitions(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  return target;
}

size_t AlgorithmSpecification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition metric_definitions = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->metric_definitions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->metric_definitions(static_cast<int>(i)));
    }
  }

  // string algorithm_version = 3;
  if (this->algorithm_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->algorithm_version());
  }

  // .flyteidl.plugins.sagemaker.InputMode input_mode = 1;
  if (this->input_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->input_mode());
  }

  // .flyteidl.plugins.sagemaker.AlgorithmName algorithm_name = 2;
  if (this->algorithm_name() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->algorithm_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlgorithmSpecification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  GOOGLE_DCHECK_NE(&from, this);
  const AlgorithmSpecification* source =
      ::google::protobuf::DynamicCastToGenerated<AlgorithmSpecification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.plugins.sagemaker.AlgorithmSpecification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.plugins.sagemaker.AlgorithmSpecification)
    MergeFrom(*source);
  }
}

void AlgorithmSpecification::MergeFrom(const AlgorithmSpecification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metric_definitions_.MergeFrom(from.metric_definitions_);
  if (from.algorithm_version().size() > 0) {

    algorithm_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.algorithm_version_);
  }
  if (from.input_mode() != 0) {
    set_input_mode(from.input_mode());
  }
  if (from.algorithm_name() != 0) {
    set_algorithm_name(from.algorithm_name());
  }
}

void AlgorithmSpecification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlgorithmSpecification::CopyFrom(const AlgorithmSpecification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.plugins.sagemaker.AlgorithmSpecification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlgorithmSpecification::IsInitialized() const {
  return true;
}

void AlgorithmSpecification::Swap(AlgorithmSpecification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlgorithmSpecification::InternalSwap(AlgorithmSpecification* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&metric_definitions_)->InternalSwap(CastToBase(&other->metric_definitions_));
  algorithm_version_.Swap(&other->algorithm_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(input_mode_, other->input_mode_);
  swap(algorithm_name_, other->algorithm_name_);
}

::google::protobuf::Metadata AlgorithmSpecification::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto);
  return ::file_level_metadata_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TrainingJobConfig::InitAsDefaultInstance() {
}
class TrainingJobConfig::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrainingJobConfig::kInstanceCountFieldNumber;
const int TrainingJobConfig::kInstanceTypeFieldNumber;
const int TrainingJobConfig::kVolumeSizeInGbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrainingJobConfig::TrainingJobConfig()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.plugins.sagemaker.TrainingJobConfig)
}
TrainingJobConfig::TrainingJobConfig(const TrainingJobConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instance_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance_type().size() > 0) {
    instance_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_type_);
  }
  volume_size_in_gb_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.volume_size_in_gb().size() > 0) {
    volume_size_in_gb_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.volume_size_in_gb_);
  }
  instance_count_ = from.instance_count_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.TrainingJobConfig)
}

void TrainingJobConfig::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TrainingJobConfig_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto.base);
  instance_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_size_in_gb_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_count_ = PROTOBUF_LONGLONG(0);
}

TrainingJobConfig::~TrainingJobConfig() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.TrainingJobConfig)
  SharedDtor();
}

void TrainingJobConfig::SharedDtor() {
  instance_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_size_in_gb_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TrainingJobConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TrainingJobConfig& TrainingJobConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TrainingJobConfig_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto.base);
  return *internal_default_instance();
}


void TrainingJobConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.plugins.sagemaker.TrainingJobConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instance_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volume_size_in_gb_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_count_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TrainingJobConfig::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TrainingJobConfig*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 instance_count = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_instance_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string instance_type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.plugins.sagemaker.TrainingJobConfig.instance_type");
        object = msg->mutable_instance_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string volume_size_in_gb = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.plugins.sagemaker.TrainingJobConfig.volume_size_in_gb");
        object = msg->mutable_volume_size_in_gb();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TrainingJobConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.plugins.sagemaker.TrainingJobConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 instance_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &instance_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instance_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_type().data(), static_cast<int>(this->instance_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.plugins.sagemaker.TrainingJobConfig.instance_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string volume_size_in_gb = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_volume_size_in_gb()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->volume_size_in_gb().data(), static_cast<int>(this->volume_size_in_gb().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.plugins.sagemaker.TrainingJobConfig.volume_size_in_gb"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.plugins.sagemaker.TrainingJobConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.plugins.sagemaker.TrainingJobConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TrainingJobConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.plugins.sagemaker.TrainingJobConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 instance_count = 1;
  if (this->instance_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->instance_count(), output);
  }

  // string instance_type = 2;
  if (this->instance_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_type().data(), static_cast<int>(this->instance_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.TrainingJobConfig.instance_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->instance_type(), output);
  }

  // string volume_size_in_gb = 3;
  if (this->volume_size_in_gb().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->volume_size_in_gb().data(), static_cast<int>(this->volume_size_in_gb().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.TrainingJobConfig.volume_size_in_gb");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->volume_size_in_gb(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.plugins.sagemaker.TrainingJobConfig)
}

::google::protobuf::uint8* TrainingJobConfig::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.plugins.sagemaker.TrainingJobConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 instance_count = 1;
  if (this->instance_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->instance_count(), target);
  }

  // string instance_type = 2;
  if (this->instance_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_type().data(), static_cast<int>(this->instance_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.TrainingJobConfig.instance_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->instance_type(), target);
  }

  // string volume_size_in_gb = 3;
  if (this->volume_size_in_gb().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->volume_size_in_gb().data(), static_cast<int>(this->volume_size_in_gb().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.plugins.sagemaker.TrainingJobConfig.volume_size_in_gb");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->volume_size_in_gb(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.plugins.sagemaker.TrainingJobConfig)
  return target;
}

size_t TrainingJobConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.plugins.sagemaker.TrainingJobConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string instance_type = 2;
  if (this->instance_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance_type());
  }

  // string volume_size_in_gb = 3;
  if (this->volume_size_in_gb().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->volume_size_in_gb());
  }

  // int64 instance_count = 1;
  if (this->instance_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->instance_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TrainingJobConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.plugins.sagemaker.TrainingJobConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const TrainingJobConfig* source =
      ::google::protobuf::DynamicCastToGenerated<TrainingJobConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.plugins.sagemaker.TrainingJobConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.plugins.sagemaker.TrainingJobConfig)
    MergeFrom(*source);
  }
}

void TrainingJobConfig::MergeFrom(const TrainingJobConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.plugins.sagemaker.TrainingJobConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instance_type().size() > 0) {

    instance_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_type_);
  }
  if (from.volume_size_in_gb().size() > 0) {

    volume_size_in_gb_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.volume_size_in_gb_);
  }
  if (from.instance_count() != 0) {
    set_instance_count(from.instance_count());
  }
}

void TrainingJobConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.plugins.sagemaker.TrainingJobConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainingJobConfig::CopyFrom(const TrainingJobConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.plugins.sagemaker.TrainingJobConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainingJobConfig::IsInitialized() const {
  return true;
}

void TrainingJobConfig::Swap(TrainingJobConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrainingJobConfig::InternalSwap(TrainingJobConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  instance_type_.Swap(&other->instance_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  volume_size_in_gb_.Swap(&other->volume_size_in_gb_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(instance_count_, other->instance_count_);
}

::google::protobuf::Metadata TrainingJobConfig::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto);
  return ::file_level_metadata_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StoppingCondition::InitAsDefaultInstance() {
}
class StoppingCondition::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoppingCondition::kMaxRuntimeInSecondsFieldNumber;
const int StoppingCondition::kMaxWaitTimeInSecondsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoppingCondition::StoppingCondition()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.plugins.sagemaker.StoppingCondition)
}
StoppingCondition::StoppingCondition(const StoppingCondition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&max_runtime_in_seconds_, &from.max_runtime_in_seconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_wait_time_in_seconds_) -
    reinterpret_cast<char*>(&max_runtime_in_seconds_)) + sizeof(max_wait_time_in_seconds_));
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.StoppingCondition)
}

void StoppingCondition::SharedCtor() {
  ::memset(&max_runtime_in_seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_wait_time_in_seconds_) -
      reinterpret_cast<char*>(&max_runtime_in_seconds_)) + sizeof(max_wait_time_in_seconds_));
}

StoppingCondition::~StoppingCondition() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.StoppingCondition)
  SharedDtor();
}

void StoppingCondition::SharedDtor() {
}

void StoppingCondition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StoppingCondition& StoppingCondition::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StoppingCondition_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto.base);
  return *internal_default_instance();
}


void StoppingCondition::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.plugins.sagemaker.StoppingCondition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&max_runtime_in_seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_wait_time_in_seconds_) -
      reinterpret_cast<char*>(&max_runtime_in_seconds_)) + sizeof(max_wait_time_in_seconds_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StoppingCondition::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StoppingCondition*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int64 max_runtime_in_seconds = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_max_runtime_in_seconds(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int64 max_wait_time_in_seconds = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_max_wait_time_in_seconds(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StoppingCondition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.plugins.sagemaker.StoppingCondition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 max_runtime_in_seconds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &max_runtime_in_seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 max_wait_time_in_seconds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &max_wait_time_in_seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.plugins.sagemaker.StoppingCondition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.plugins.sagemaker.StoppingCondition)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StoppingCondition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.plugins.sagemaker.StoppingCondition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 max_runtime_in_seconds = 1;
  if (this->max_runtime_in_seconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->max_runtime_in_seconds(), output);
  }

  // int64 max_wait_time_in_seconds = 2;
  if (this->max_wait_time_in_seconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->max_wait_time_in_seconds(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.plugins.sagemaker.StoppingCondition)
}

::google::protobuf::uint8* StoppingCondition::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.plugins.sagemaker.StoppingCondition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 max_runtime_in_seconds = 1;
  if (this->max_runtime_in_seconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->max_runtime_in_seconds(), target);
  }

  // int64 max_wait_time_in_seconds = 2;
  if (this->max_wait_time_in_seconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->max_wait_time_in_seconds(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.plugins.sagemaker.StoppingCondition)
  return target;
}

size_t StoppingCondition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.plugins.sagemaker.StoppingCondition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 max_runtime_in_seconds = 1;
  if (this->max_runtime_in_seconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->max_runtime_in_seconds());
  }

  // int64 max_wait_time_in_seconds = 2;
  if (this->max_wait_time_in_seconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->max_wait_time_in_seconds());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StoppingCondition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.plugins.sagemaker.StoppingCondition)
  GOOGLE_DCHECK_NE(&from, this);
  const StoppingCondition* source =
      ::google::protobuf::DynamicCastToGenerated<StoppingCondition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.plugins.sagemaker.StoppingCondition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.plugins.sagemaker.StoppingCondition)
    MergeFrom(*source);
  }
}

void StoppingCondition::MergeFrom(const StoppingCondition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.plugins.sagemaker.StoppingCondition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.max_runtime_in_seconds() != 0) {
    set_max_runtime_in_seconds(from.max_runtime_in_seconds());
  }
  if (from.max_wait_time_in_seconds() != 0) {
    set_max_wait_time_in_seconds(from.max_wait_time_in_seconds());
  }
}

void StoppingCondition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.plugins.sagemaker.StoppingCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoppingCondition::CopyFrom(const StoppingCondition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.plugins.sagemaker.StoppingCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoppingCondition::IsInitialized() const {
  return true;
}

void StoppingCondition::Swap(StoppingCondition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoppingCondition::InternalSwap(StoppingCondition* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(max_runtime_in_seconds_, other->max_runtime_in_seconds_);
  swap(max_wait_time_in_seconds_, other->max_wait_time_in_seconds_);
}

::google::protobuf::Metadata StoppingCondition::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto);
  return ::file_level_metadata_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TrainingJob::InitAsDefaultInstance() {
  ::flyteidl::plugins::sagemaker::_TrainingJob_default_instance_._instance.get_mutable()->algorithm_specification_ = const_cast< ::flyteidl::plugins::sagemaker::AlgorithmSpecification*>(
      ::flyteidl::plugins::sagemaker::AlgorithmSpecification::internal_default_instance());
  ::flyteidl::plugins::sagemaker::_TrainingJob_default_instance_._instance.get_mutable()->training_job_config_ = const_cast< ::flyteidl::plugins::sagemaker::TrainingJobConfig*>(
      ::flyteidl::plugins::sagemaker::TrainingJobConfig::internal_default_instance());
}
class TrainingJob::HasBitSetters {
 public:
  static const ::flyteidl::plugins::sagemaker::AlgorithmSpecification& algorithm_specification(const TrainingJob* msg);
  static const ::flyteidl::plugins::sagemaker::TrainingJobConfig& training_job_config(const TrainingJob* msg);
};

const ::flyteidl::plugins::sagemaker::AlgorithmSpecification&
TrainingJob::HasBitSetters::algorithm_specification(const TrainingJob* msg) {
  return *msg->algorithm_specification_;
}
const ::flyteidl::plugins::sagemaker::TrainingJobConfig&
TrainingJob::HasBitSetters::training_job_config(const TrainingJob* msg) {
  return *msg->training_job_config_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrainingJob::kAlgorithmSpecificationFieldNumber;
const int TrainingJob::kTrainingJobConfigFieldNumber;
const int TrainingJob::kInterruptibleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrainingJob::TrainingJob()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.plugins.sagemaker.TrainingJob)
}
TrainingJob::TrainingJob(const TrainingJob& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_algorithm_specification()) {
    algorithm_specification_ = new ::flyteidl::plugins::sagemaker::AlgorithmSpecification(*from.algorithm_specification_);
  } else {
    algorithm_specification_ = nullptr;
  }
  if (from.has_training_job_config()) {
    training_job_config_ = new ::flyteidl::plugins::sagemaker::TrainingJobConfig(*from.training_job_config_);
  } else {
    training_job_config_ = nullptr;
  }
  interruptible_ = from.interruptible_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.plugins.sagemaker.TrainingJob)
}

void TrainingJob::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TrainingJob_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto.base);
  ::memset(&algorithm_specification_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interruptible_) -
      reinterpret_cast<char*>(&algorithm_specification_)) + sizeof(interruptible_));
}

TrainingJob::~TrainingJob() {
  // @@protoc_insertion_point(destructor:flyteidl.plugins.sagemaker.TrainingJob)
  SharedDtor();
}

void TrainingJob::SharedDtor() {
  if (this != internal_default_instance()) delete algorithm_specification_;
  if (this != internal_default_instance()) delete training_job_config_;
}

void TrainingJob::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TrainingJob& TrainingJob::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TrainingJob_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto.base);
  return *internal_default_instance();
}


void TrainingJob::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.plugins.sagemaker.TrainingJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && algorithm_specification_ != nullptr) {
    delete algorithm_specification_;
  }
  algorithm_specification_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && training_job_config_ != nullptr) {
    delete training_job_config_;
  }
  training_job_config_ = nullptr;
  interruptible_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TrainingJob::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TrainingJob*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .flyteidl.plugins.sagemaker.AlgorithmSpecification algorithm_specification = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::plugins::sagemaker::AlgorithmSpecification::_InternalParse;
        object = msg->mutable_algorithm_specification();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .flyteidl.plugins.sagemaker.TrainingJobConfig training_job_config = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::flyteidl::plugins::sagemaker::TrainingJobConfig::_InternalParse;
        object = msg->mutable_training_job_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bool interruptible = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_interruptible(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TrainingJob::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.plugins.sagemaker.TrainingJob)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.plugins.sagemaker.AlgorithmSpecification algorithm_specification = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_algorithm_specification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.plugins.sagemaker.TrainingJobConfig training_job_config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_training_job_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool interruptible = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &interruptible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.plugins.sagemaker.TrainingJob)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.plugins.sagemaker.TrainingJob)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TrainingJob::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.plugins.sagemaker.TrainingJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.plugins.sagemaker.AlgorithmSpecification algorithm_specification = 1;
  if (this->has_algorithm_specification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::algorithm_specification(this), output);
  }

  // .flyteidl.plugins.sagemaker.TrainingJobConfig training_job_config = 2;
  if (this->has_training_job_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::training_job_config(this), output);
  }

  // bool interruptible = 4;
  if (this->interruptible() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->interruptible(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.plugins.sagemaker.TrainingJob)
}

::google::protobuf::uint8* TrainingJob::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.plugins.sagemaker.TrainingJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.plugins.sagemaker.AlgorithmSpecification algorithm_specification = 1;
  if (this->has_algorithm_specification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::algorithm_specification(this), target);
  }

  // .flyteidl.plugins.sagemaker.TrainingJobConfig training_job_config = 2;
  if (this->has_training_job_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::training_job_config(this), target);
  }

  // bool interruptible = 4;
  if (this->interruptible() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->interruptible(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.plugins.sagemaker.TrainingJob)
  return target;
}

size_t TrainingJob::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.plugins.sagemaker.TrainingJob)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .flyteidl.plugins.sagemaker.AlgorithmSpecification algorithm_specification = 1;
  if (this->has_algorithm_specification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *algorithm_specification_);
  }

  // .flyteidl.plugins.sagemaker.TrainingJobConfig training_job_config = 2;
  if (this->has_training_job_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *training_job_config_);
  }

  // bool interruptible = 4;
  if (this->interruptible() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TrainingJob::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.plugins.sagemaker.TrainingJob)
  GOOGLE_DCHECK_NE(&from, this);
  const TrainingJob* source =
      ::google::protobuf::DynamicCastToGenerated<TrainingJob>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.plugins.sagemaker.TrainingJob)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.plugins.sagemaker.TrainingJob)
    MergeFrom(*source);
  }
}

void TrainingJob::MergeFrom(const TrainingJob& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.plugins.sagemaker.TrainingJob)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_algorithm_specification()) {
    mutable_algorithm_specification()->::flyteidl::plugins::sagemaker::AlgorithmSpecification::MergeFrom(from.algorithm_specification());
  }
  if (from.has_training_job_config()) {
    mutable_training_job_config()->::flyteidl::plugins::sagemaker::TrainingJobConfig::MergeFrom(from.training_job_config());
  }
  if (from.interruptible() != 0) {
    set_interruptible(from.interruptible());
  }
}

void TrainingJob::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.plugins.sagemaker.TrainingJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainingJob::CopyFrom(const TrainingJob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.plugins.sagemaker.TrainingJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainingJob::IsInitialized() const {
  return true;
}

void TrainingJob::Swap(TrainingJob* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrainingJob::InternalSwap(TrainingJob* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(algorithm_specification_, other->algorithm_specification_);
  swap(training_job_config_, other->training_job_config_);
  swap(interruptible_, other->interruptible_);
}

::google::protobuf::Metadata TrainingJob::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto);
  return ::file_level_metadata_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sagemaker
}  // namespace plugins
}  // namespace flyteidl
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::AlgorithmSpecification* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::AlgorithmSpecification >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::plugins::sagemaker::AlgorithmSpecification >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::TrainingJobConfig* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::TrainingJobConfig >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::plugins::sagemaker::TrainingJobConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::StoppingCondition* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::StoppingCondition >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::plugins::sagemaker::StoppingCondition >(arena);
}
template<> PROTOBUF_NOINLINE ::flyteidl::plugins::sagemaker::TrainingJob* Arena::CreateMaybeMessage< ::flyteidl::plugins::sagemaker::TrainingJob >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::plugins::sagemaker::TrainingJob >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
