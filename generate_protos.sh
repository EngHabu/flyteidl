DIR=`pwd`
rm -rf $DIR/gen
docker run -v $DIR:/defs namely/protoc-all:1.14_0  -d example --with-gateway -l go --go-source-relative
docker run -v $DIR:/defs namely/protoc-all:1.14_0  -i ./protos -d protos/flyteidl/service --with-gateway -l go --go-source-relative
docker run -v $DIR:/defs namely/protoc-all:1.14_0  -i ./protos -d protos/flyteidl/admin --with-gateway -l go --go-source-relative
docker run -v $DIR:/defs namely/protoc-all:1.14_0  -i ./protos -d protos/flyteidl/core --with-gateway -l go --go-source-relative
docker run -v $DIR:/defs namely/protoc-all:1.14_0  -i ./protos -d protos/flyteidl/service -l python
docker run -v $DIR:/defs namely/protoc-all:1.14_0  -i ./protos -d protos/flyteidl/admin -l python
docker run -v $DIR:/defs namely/protoc-all:1.14_0  -i ./protos -d protos/flyteidl/core -l python
docker run -v $DIR:/defs schottra/docker-protobufjs:latest --module-name flyteidl -d protos/flyteidl/core -d protos/flyteidl/admin -d protos/flyteidl/service -- --root flyteidl -t static-module -w es6 --no-delimited --force-long --no-convert -p /defs/protos

# Unfortunately, the `--grpc-gateway-out` plugin doesnâ€™t yet support the `source_relative` option. Until it does, we need to move the files from the autogenerated location to the source_relative location.
sudo cp -r gen/pb-go/github.com/lyft/flyteidl/gen/* gen/
sudo rm -rf gen/pb-go/github.com

if [ -n "$DELTA_CHECK" ]; then
  DIRTY=$(git status --porcelain)
  if [ -n "$DIRTY" ]; then
    echo "FAILED: Protos updated without commiting generated code."
    echo "Ensure make generate has run and all changes are committed."
    exit 1
  else
    echo "SUCCESS: Generated code is up to date."
  fi
fi
