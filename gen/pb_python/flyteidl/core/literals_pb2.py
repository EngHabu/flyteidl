# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flyteidl/core/literals.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from flyteidl.core import identifier_pb2 as flyteidl_dot_core_dot_identifier__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from google.protobuf import duration_pb2 as google_dot_protobuf_dot_duration__pb2
from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2
from flyteidl.core import types_pb2 as flyteidl_dot_core_dot_types__pb2
from flyteidl.core import condition_pb2 as flyteidl_dot_core_dot_condition__pb2
from flyteidl.core import tasks_pb2 as flyteidl_dot_core_dot_tasks__pb2
from flyteidl.core import primitives_pb2 as flyteidl_dot_core_dot_primitives__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='flyteidl/core/literals.proto',
  package='flyteidl.core',
  syntax='proto3',
  serialized_pb=_b('\n\x1c\x66lyteidl/core/literals.proto\x12\rflyteidl.core\x1a\x1e\x66lyteidl/core/identifier.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x19\x66lyteidl/core/types.proto\x1a\x1d\x66lyteidl/core/condition.proto\x1a\x19\x66lyteidl/core/tasks.proto\x1a\x1e\x66lyteidl/core/primitives.proto\"\x06\n\x04Void\"B\n\x04\x42lob\x12-\n\x08metadata\x18\x01 \x01(\x0b\x32\x1b.flyteidl.core.BlobMetadata\x12\x0b\n\x03uri\x18\x03 \x01(\t\"5\n\x0c\x42lobMetadata\x12%\n\x04type\x18\x01 \x01(\x0b\x32\x17.flyteidl.core.BlobType\"$\n\x06\x42inary\x12\r\n\x05value\x18\x01 \x01(\x0c\x12\x0b\n\x03tag\x18\x02 \x01(\t\">\n\x06Schema\x12\x0b\n\x03uri\x18\x01 \x01(\t\x12\'\n\x04type\x18\x03 \x01(\x0b\x32\x19.flyteidl.core.SchemaType\"\xdf\x02\n\x06Scalar\x12-\n\tprimitive\x18\x01 \x01(\x0b\x32\x18.flyteidl.core.PrimitiveH\x00\x12#\n\x04\x62lob\x18\x02 \x01(\x0b\x32\x13.flyteidl.core.BlobH\x00\x12\'\n\x06\x62inary\x18\x03 \x01(\x0b\x32\x15.flyteidl.core.BinaryH\x00\x12\'\n\x06schema\x18\x04 \x01(\x0b\x32\x15.flyteidl.core.SchemaH\x00\x12(\n\tnone_type\x18\x05 \x01(\x0b\x32\x13.flyteidl.core.VoidH\x00\x12%\n\x05\x65rror\x18\x06 \x01(\x0b\x32\x14.flyteidl.core.ErrorH\x00\x12*\n\x07generic\x18\x07 \x01(\x0b\x32\x17.google.protobuf.StructH\x00\x12)\n\x07\x63losure\x18\x08 \x01(\x0b\x32\x16.flyteidl.core.ClosureH\x00\x42\x07\n\x05value\"\x90\x01\n\x07\x43losure\x12!\n\x04node\x18\x01 \x01(\x0b\x32\x13.flyteidl.core.Node\x12*\n\x05tasks\x18\x02 \x03(\x0b\x32\x1b.flyteidl.core.TaskTemplate\x12\x36\n\rsub_workflows\x18\x03 \x03(\x0b\x32\x1f.flyteidl.core.WorkflowTemplate\"\x9d\x01\n\x07Literal\x12\'\n\x06scalar\x18\x01 \x01(\x0b\x32\x15.flyteidl.core.ScalarH\x00\x12\x36\n\ncollection\x18\x02 \x01(\x0b\x32 .flyteidl.core.LiteralCollectionH\x00\x12(\n\x03map\x18\x03 \x01(\x0b\x32\x19.flyteidl.core.LiteralMapH\x00\x42\x07\n\x05value\"=\n\x11LiteralCollection\x12(\n\x08literals\x18\x01 \x03(\x0b\x32\x16.flyteidl.core.Literal\"\x90\x01\n\nLiteralMap\x12\x39\n\x08literals\x18\x01 \x03(\x0b\x32\'.flyteidl.core.LiteralMap.LiteralsEntry\x1aG\n\rLiteralsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12%\n\x05value\x18\x02 \x01(\x0b\x32\x16.flyteidl.core.Literal:\x02\x38\x01\"E\n\x15\x42indingDataCollection\x12,\n\x08\x62indings\x18\x01 \x03(\x0b\x32\x1a.flyteidl.core.BindingData\"\x9c\x01\n\x0e\x42indingDataMap\x12=\n\x08\x62indings\x18\x01 \x03(\x0b\x32+.flyteidl.core.BindingDataMap.BindingsEntry\x1aK\n\rBindingsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12)\n\x05value\x18\x02 \x01(\x0b\x32\x1a.flyteidl.core.BindingData:\x02\x38\x01\"\x87\x02\n\x0b\x42indingData\x12\'\n\x06scalar\x18\x01 \x01(\x0b\x32\x15.flyteidl.core.ScalarH\x00\x12:\n\ncollection\x18\x02 \x01(\x0b\x32$.flyteidl.core.BindingDataCollectionH\x00\x12\x31\n\x07promise\x18\x03 \x01(\x0b\x32\x1e.flyteidl.core.OutputReferenceH\x00\x12,\n\x03map\x18\x04 \x01(\x0b\x32\x1d.flyteidl.core.BindingDataMapH\x00\x12)\n\x07\x63losure\x18\x05 \x01(\x0b\x32\x16.flyteidl.core.ClosureH\x00\x42\x07\n\x05value\"C\n\x07\x42inding\x12\x0b\n\x03var\x18\x01 \x01(\t\x12+\n\x07\x62inding\x18\x02 \x01(\x0b\x32\x1a.flyteidl.core.BindingData\"f\n\x07IfBlock\x12\x33\n\tcondition\x18\x01 \x01(\x0b\x32 .flyteidl.core.BooleanExpression\x12&\n\tthen_node\x18\x02 \x01(\x0b\x32\x13.flyteidl.core.Node\"\xb6\x01\n\x0bIfElseBlock\x12$\n\x04\x63\x61se\x18\x01 \x01(\x0b\x32\x16.flyteidl.core.IfBlock\x12%\n\x05other\x18\x02 \x03(\x0b\x32\x16.flyteidl.core.IfBlock\x12(\n\telse_node\x18\x03 \x01(\x0b\x32\x13.flyteidl.core.NodeH\x00\x12%\n\x05\x65rror\x18\x04 \x01(\x0b\x32\x14.flyteidl.core.ErrorH\x00\x42\t\n\x07\x64\x65\x66\x61ult\"9\n\nBranchNode\x12+\n\x07if_else\x18\x01 \x01(\x0b\x32\x1a.flyteidl.core.IfElseBlock\"?\n\x0b\x43losureNode\x12\x30\n\x0c\x63losure_type\x18\x01 \x01(\x0b\x32\x1a.flyteidl.core.ClosureType\"J\n\x08TaskNode\x12\x31\n\x0creference_id\x18\x01 \x01(\x0b\x32\x19.flyteidl.core.IdentifierH\x00\x42\x0b\n\treference\"\x87\x01\n\x0cWorkflowNode\x12\x33\n\x0elaunchplan_ref\x18\x01 \x01(\x0b\x32\x19.flyteidl.core.IdentifierH\x00\x12\x35\n\x10sub_workflow_ref\x18\x02 \x01(\x0b\x32\x19.flyteidl.core.IdentifierH\x00\x42\x0b\n\treference\"w\n\x0cNodeMetadata\x12\x0c\n\x04name\x18\x01 \x01(\t\x12*\n\x07timeout\x18\x04 \x01(\x0b\x32\x19.google.protobuf.Duration\x12-\n\x07retries\x18\x05 \x01(\x0b\x32\x1c.flyteidl.core.RetryStrategy\"#\n\x05\x41lias\x12\x0b\n\x03var\x18\x01 \x01(\t\x12\r\n\x05\x61lias\x18\x02 \x01(\t\"\x86\x03\n\x04Node\x12\n\n\x02id\x18\x01 \x01(\t\x12-\n\x08metadata\x18\x02 \x01(\x0b\x32\x1b.flyteidl.core.NodeMetadata\x12&\n\x06inputs\x18\x03 \x03(\x0b\x32\x16.flyteidl.core.Binding\x12\x19\n\x11upstream_node_ids\x18\x04 \x03(\t\x12,\n\x0eoutput_aliases\x18\x05 \x03(\x0b\x32\x14.flyteidl.core.Alias\x12,\n\ttask_node\x18\x06 \x01(\x0b\x32\x17.flyteidl.core.TaskNodeH\x00\x12\x34\n\rworkflow_node\x18\x07 \x01(\x0b\x32\x1b.flyteidl.core.WorkflowNodeH\x00\x12\x30\n\x0b\x62ranch_node\x18\x08 \x01(\x0b\x32\x19.flyteidl.core.BranchNodeH\x00\x12\x32\n\x0c\x63losure_node\x18\t \x01(\x0b\x32\x1a.flyteidl.core.ClosureNodeH\x00\x42\x08\n\x06target\"\x12\n\x10WorkflowMetadata\"\x96\x02\n\x10WorkflowTemplate\x12%\n\x02id\x18\x01 \x01(\x0b\x32\x19.flyteidl.core.Identifier\x12\x31\n\x08metadata\x18\x02 \x01(\x0b\x32\x1f.flyteidl.core.WorkflowMetadata\x12\x30\n\tinterface\x18\x03 \x01(\x0b\x32\x1d.flyteidl.core.TypedInterface\x12\"\n\x05nodes\x18\x04 \x03(\x0b\x32\x13.flyteidl.core.Node\x12\'\n\x07outputs\x18\x05 \x03(\x0b\x32\x16.flyteidl.core.Binding\x12)\n\x0c\x66\x61ilure_node\x18\x06 \x01(\x0b\x32\x13.flyteidl.core.NodeB2Z0github.com/lyft/flyteidl/gen/pb-go/flyteidl/coreb\x06proto3')
  ,
  dependencies=[flyteidl_dot_core_dot_identifier__pb2.DESCRIPTOR,google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,google_dot_protobuf_dot_duration__pb2.DESCRIPTOR,google_dot_protobuf_dot_struct__pb2.DESCRIPTOR,flyteidl_dot_core_dot_types__pb2.DESCRIPTOR,flyteidl_dot_core_dot_condition__pb2.DESCRIPTOR,flyteidl_dot_core_dot_tasks__pb2.DESCRIPTOR,flyteidl_dot_core_dot_primitives__pb2.DESCRIPTOR,])




_VOID = _descriptor.Descriptor(
  name='Void',
  full_name='flyteidl.core.Void',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=291,
  serialized_end=297,
)


_BLOB = _descriptor.Descriptor(
  name='Blob',
  full_name='flyteidl.core.Blob',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='metadata', full_name='flyteidl.core.Blob.metadata', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='uri', full_name='flyteidl.core.Blob.uri', index=1,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=299,
  serialized_end=365,
)


_BLOBMETADATA = _descriptor.Descriptor(
  name='BlobMetadata',
  full_name='flyteidl.core.BlobMetadata',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='flyteidl.core.BlobMetadata.type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=367,
  serialized_end=420,
)


_BINARY = _descriptor.Descriptor(
  name='Binary',
  full_name='flyteidl.core.Binary',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='flyteidl.core.Binary.value', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tag', full_name='flyteidl.core.Binary.tag', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=422,
  serialized_end=458,
)


_SCHEMA = _descriptor.Descriptor(
  name='Schema',
  full_name='flyteidl.core.Schema',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='uri', full_name='flyteidl.core.Schema.uri', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='type', full_name='flyteidl.core.Schema.type', index=1,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=460,
  serialized_end=522,
)


_SCALAR = _descriptor.Descriptor(
  name='Scalar',
  full_name='flyteidl.core.Scalar',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='primitive', full_name='flyteidl.core.Scalar.primitive', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='blob', full_name='flyteidl.core.Scalar.blob', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='binary', full_name='flyteidl.core.Scalar.binary', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='schema', full_name='flyteidl.core.Scalar.schema', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='none_type', full_name='flyteidl.core.Scalar.none_type', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='error', full_name='flyteidl.core.Scalar.error', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='generic', full_name='flyteidl.core.Scalar.generic', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='closure', full_name='flyteidl.core.Scalar.closure', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='flyteidl.core.Scalar.value',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=525,
  serialized_end=876,
)


_CLOSURE = _descriptor.Descriptor(
  name='Closure',
  full_name='flyteidl.core.Closure',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='node', full_name='flyteidl.core.Closure.node', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tasks', full_name='flyteidl.core.Closure.tasks', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sub_workflows', full_name='flyteidl.core.Closure.sub_workflows', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=879,
  serialized_end=1023,
)


_LITERAL = _descriptor.Descriptor(
  name='Literal',
  full_name='flyteidl.core.Literal',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scalar', full_name='flyteidl.core.Literal.scalar', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='collection', full_name='flyteidl.core.Literal.collection', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='map', full_name='flyteidl.core.Literal.map', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='flyteidl.core.Literal.value',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1026,
  serialized_end=1183,
)


_LITERALCOLLECTION = _descriptor.Descriptor(
  name='LiteralCollection',
  full_name='flyteidl.core.LiteralCollection',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='literals', full_name='flyteidl.core.LiteralCollection.literals', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1185,
  serialized_end=1246,
)


_LITERALMAP_LITERALSENTRY = _descriptor.Descriptor(
  name='LiteralsEntry',
  full_name='flyteidl.core.LiteralMap.LiteralsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='flyteidl.core.LiteralMap.LiteralsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='flyteidl.core.LiteralMap.LiteralsEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1322,
  serialized_end=1393,
)

_LITERALMAP = _descriptor.Descriptor(
  name='LiteralMap',
  full_name='flyteidl.core.LiteralMap',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='literals', full_name='flyteidl.core.LiteralMap.literals', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_LITERALMAP_LITERALSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1249,
  serialized_end=1393,
)


_BINDINGDATACOLLECTION = _descriptor.Descriptor(
  name='BindingDataCollection',
  full_name='flyteidl.core.BindingDataCollection',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bindings', full_name='flyteidl.core.BindingDataCollection.bindings', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1395,
  serialized_end=1464,
)


_BINDINGDATAMAP_BINDINGSENTRY = _descriptor.Descriptor(
  name='BindingsEntry',
  full_name='flyteidl.core.BindingDataMap.BindingsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='flyteidl.core.BindingDataMap.BindingsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='flyteidl.core.BindingDataMap.BindingsEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1548,
  serialized_end=1623,
)

_BINDINGDATAMAP = _descriptor.Descriptor(
  name='BindingDataMap',
  full_name='flyteidl.core.BindingDataMap',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bindings', full_name='flyteidl.core.BindingDataMap.bindings', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_BINDINGDATAMAP_BINDINGSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1467,
  serialized_end=1623,
)


_BINDINGDATA = _descriptor.Descriptor(
  name='BindingData',
  full_name='flyteidl.core.BindingData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scalar', full_name='flyteidl.core.BindingData.scalar', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='collection', full_name='flyteidl.core.BindingData.collection', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='promise', full_name='flyteidl.core.BindingData.promise', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='map', full_name='flyteidl.core.BindingData.map', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='closure', full_name='flyteidl.core.BindingData.closure', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='flyteidl.core.BindingData.value',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1626,
  serialized_end=1889,
)


_BINDING = _descriptor.Descriptor(
  name='Binding',
  full_name='flyteidl.core.Binding',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='var', full_name='flyteidl.core.Binding.var', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='binding', full_name='flyteidl.core.Binding.binding', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1891,
  serialized_end=1958,
)


_IFBLOCK = _descriptor.Descriptor(
  name='IfBlock',
  full_name='flyteidl.core.IfBlock',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='condition', full_name='flyteidl.core.IfBlock.condition', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='then_node', full_name='flyteidl.core.IfBlock.then_node', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1960,
  serialized_end=2062,
)


_IFELSEBLOCK = _descriptor.Descriptor(
  name='IfElseBlock',
  full_name='flyteidl.core.IfElseBlock',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='case', full_name='flyteidl.core.IfElseBlock.case', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='other', full_name='flyteidl.core.IfElseBlock.other', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='else_node', full_name='flyteidl.core.IfElseBlock.else_node', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='error', full_name='flyteidl.core.IfElseBlock.error', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='default', full_name='flyteidl.core.IfElseBlock.default',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=2065,
  serialized_end=2247,
)


_BRANCHNODE = _descriptor.Descriptor(
  name='BranchNode',
  full_name='flyteidl.core.BranchNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='if_else', full_name='flyteidl.core.BranchNode.if_else', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2249,
  serialized_end=2306,
)


_CLOSURENODE = _descriptor.Descriptor(
  name='ClosureNode',
  full_name='flyteidl.core.ClosureNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='closure_type', full_name='flyteidl.core.ClosureNode.closure_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2308,
  serialized_end=2371,
)


_TASKNODE = _descriptor.Descriptor(
  name='TaskNode',
  full_name='flyteidl.core.TaskNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reference_id', full_name='flyteidl.core.TaskNode.reference_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='reference', full_name='flyteidl.core.TaskNode.reference',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=2373,
  serialized_end=2447,
)


_WORKFLOWNODE = _descriptor.Descriptor(
  name='WorkflowNode',
  full_name='flyteidl.core.WorkflowNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='launchplan_ref', full_name='flyteidl.core.WorkflowNode.launchplan_ref', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sub_workflow_ref', full_name='flyteidl.core.WorkflowNode.sub_workflow_ref', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='reference', full_name='flyteidl.core.WorkflowNode.reference',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=2450,
  serialized_end=2585,
)


_NODEMETADATA = _descriptor.Descriptor(
  name='NodeMetadata',
  full_name='flyteidl.core.NodeMetadata',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='flyteidl.core.NodeMetadata.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timeout', full_name='flyteidl.core.NodeMetadata.timeout', index=1,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='retries', full_name='flyteidl.core.NodeMetadata.retries', index=2,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2587,
  serialized_end=2706,
)


_ALIAS = _descriptor.Descriptor(
  name='Alias',
  full_name='flyteidl.core.Alias',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='var', full_name='flyteidl.core.Alias.var', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='alias', full_name='flyteidl.core.Alias.alias', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2708,
  serialized_end=2743,
)


_NODE = _descriptor.Descriptor(
  name='Node',
  full_name='flyteidl.core.Node',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='flyteidl.core.Node.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='metadata', full_name='flyteidl.core.Node.metadata', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='inputs', full_name='flyteidl.core.Node.inputs', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='upstream_node_ids', full_name='flyteidl.core.Node.upstream_node_ids', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='output_aliases', full_name='flyteidl.core.Node.output_aliases', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='task_node', full_name='flyteidl.core.Node.task_node', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='workflow_node', full_name='flyteidl.core.Node.workflow_node', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='branch_node', full_name='flyteidl.core.Node.branch_node', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='closure_node', full_name='flyteidl.core.Node.closure_node', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='target', full_name='flyteidl.core.Node.target',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=2746,
  serialized_end=3136,
)


_WORKFLOWMETADATA = _descriptor.Descriptor(
  name='WorkflowMetadata',
  full_name='flyteidl.core.WorkflowMetadata',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3138,
  serialized_end=3156,
)


_WORKFLOWTEMPLATE = _descriptor.Descriptor(
  name='WorkflowTemplate',
  full_name='flyteidl.core.WorkflowTemplate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='flyteidl.core.WorkflowTemplate.id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='metadata', full_name='flyteidl.core.WorkflowTemplate.metadata', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='interface', full_name='flyteidl.core.WorkflowTemplate.interface', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='nodes', full_name='flyteidl.core.WorkflowTemplate.nodes', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='outputs', full_name='flyteidl.core.WorkflowTemplate.outputs', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='failure_node', full_name='flyteidl.core.WorkflowTemplate.failure_node', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3159,
  serialized_end=3437,
)

_BLOB.fields_by_name['metadata'].message_type = _BLOBMETADATA
_BLOBMETADATA.fields_by_name['type'].message_type = flyteidl_dot_core_dot_types__pb2._BLOBTYPE
_SCHEMA.fields_by_name['type'].message_type = flyteidl_dot_core_dot_types__pb2._SCHEMATYPE
_SCALAR.fields_by_name['primitive'].message_type = flyteidl_dot_core_dot_primitives__pb2._PRIMITIVE
_SCALAR.fields_by_name['blob'].message_type = _BLOB
_SCALAR.fields_by_name['binary'].message_type = _BINARY
_SCALAR.fields_by_name['schema'].message_type = _SCHEMA
_SCALAR.fields_by_name['none_type'].message_type = _VOID
_SCALAR.fields_by_name['error'].message_type = flyteidl_dot_core_dot_types__pb2._ERROR
_SCALAR.fields_by_name['generic'].message_type = google_dot_protobuf_dot_struct__pb2._STRUCT
_SCALAR.fields_by_name['closure'].message_type = _CLOSURE
_SCALAR.oneofs_by_name['value'].fields.append(
  _SCALAR.fields_by_name['primitive'])
_SCALAR.fields_by_name['primitive'].containing_oneof = _SCALAR.oneofs_by_name['value']
_SCALAR.oneofs_by_name['value'].fields.append(
  _SCALAR.fields_by_name['blob'])
_SCALAR.fields_by_name['blob'].containing_oneof = _SCALAR.oneofs_by_name['value']
_SCALAR.oneofs_by_name['value'].fields.append(
  _SCALAR.fields_by_name['binary'])
_SCALAR.fields_by_name['binary'].containing_oneof = _SCALAR.oneofs_by_name['value']
_SCALAR.oneofs_by_name['value'].fields.append(
  _SCALAR.fields_by_name['schema'])
_SCALAR.fields_by_name['schema'].containing_oneof = _SCALAR.oneofs_by_name['value']
_SCALAR.oneofs_by_name['value'].fields.append(
  _SCALAR.fields_by_name['none_type'])
_SCALAR.fields_by_name['none_type'].containing_oneof = _SCALAR.oneofs_by_name['value']
_SCALAR.oneofs_by_name['value'].fields.append(
  _SCALAR.fields_by_name['error'])
_SCALAR.fields_by_name['error'].containing_oneof = _SCALAR.oneofs_by_name['value']
_SCALAR.oneofs_by_name['value'].fields.append(
  _SCALAR.fields_by_name['generic'])
_SCALAR.fields_by_name['generic'].containing_oneof = _SCALAR.oneofs_by_name['value']
_SCALAR.oneofs_by_name['value'].fields.append(
  _SCALAR.fields_by_name['closure'])
_SCALAR.fields_by_name['closure'].containing_oneof = _SCALAR.oneofs_by_name['value']
_CLOSURE.fields_by_name['node'].message_type = _NODE
_CLOSURE.fields_by_name['tasks'].message_type = flyteidl_dot_core_dot_tasks__pb2._TASKTEMPLATE
_CLOSURE.fields_by_name['sub_workflows'].message_type = _WORKFLOWTEMPLATE
_LITERAL.fields_by_name['scalar'].message_type = _SCALAR
_LITERAL.fields_by_name['collection'].message_type = _LITERALCOLLECTION
_LITERAL.fields_by_name['map'].message_type = _LITERALMAP
_LITERAL.oneofs_by_name['value'].fields.append(
  _LITERAL.fields_by_name['scalar'])
_LITERAL.fields_by_name['scalar'].containing_oneof = _LITERAL.oneofs_by_name['value']
_LITERAL.oneofs_by_name['value'].fields.append(
  _LITERAL.fields_by_name['collection'])
_LITERAL.fields_by_name['collection'].containing_oneof = _LITERAL.oneofs_by_name['value']
_LITERAL.oneofs_by_name['value'].fields.append(
  _LITERAL.fields_by_name['map'])
_LITERAL.fields_by_name['map'].containing_oneof = _LITERAL.oneofs_by_name['value']
_LITERALCOLLECTION.fields_by_name['literals'].message_type = _LITERAL
_LITERALMAP_LITERALSENTRY.fields_by_name['value'].message_type = _LITERAL
_LITERALMAP_LITERALSENTRY.containing_type = _LITERALMAP
_LITERALMAP.fields_by_name['literals'].message_type = _LITERALMAP_LITERALSENTRY
_BINDINGDATACOLLECTION.fields_by_name['bindings'].message_type = _BINDINGDATA
_BINDINGDATAMAP_BINDINGSENTRY.fields_by_name['value'].message_type = _BINDINGDATA
_BINDINGDATAMAP_BINDINGSENTRY.containing_type = _BINDINGDATAMAP
_BINDINGDATAMAP.fields_by_name['bindings'].message_type = _BINDINGDATAMAP_BINDINGSENTRY
_BINDINGDATA.fields_by_name['scalar'].message_type = _SCALAR
_BINDINGDATA.fields_by_name['collection'].message_type = _BINDINGDATACOLLECTION
_BINDINGDATA.fields_by_name['promise'].message_type = flyteidl_dot_core_dot_types__pb2._OUTPUTREFERENCE
_BINDINGDATA.fields_by_name['map'].message_type = _BINDINGDATAMAP
_BINDINGDATA.fields_by_name['closure'].message_type = _CLOSURE
_BINDINGDATA.oneofs_by_name['value'].fields.append(
  _BINDINGDATA.fields_by_name['scalar'])
_BINDINGDATA.fields_by_name['scalar'].containing_oneof = _BINDINGDATA.oneofs_by_name['value']
_BINDINGDATA.oneofs_by_name['value'].fields.append(
  _BINDINGDATA.fields_by_name['collection'])
_BINDINGDATA.fields_by_name['collection'].containing_oneof = _BINDINGDATA.oneofs_by_name['value']
_BINDINGDATA.oneofs_by_name['value'].fields.append(
  _BINDINGDATA.fields_by_name['promise'])
_BINDINGDATA.fields_by_name['promise'].containing_oneof = _BINDINGDATA.oneofs_by_name['value']
_BINDINGDATA.oneofs_by_name['value'].fields.append(
  _BINDINGDATA.fields_by_name['map'])
_BINDINGDATA.fields_by_name['map'].containing_oneof = _BINDINGDATA.oneofs_by_name['value']
_BINDINGDATA.oneofs_by_name['value'].fields.append(
  _BINDINGDATA.fields_by_name['closure'])
_BINDINGDATA.fields_by_name['closure'].containing_oneof = _BINDINGDATA.oneofs_by_name['value']
_BINDING.fields_by_name['binding'].message_type = _BINDINGDATA
_IFBLOCK.fields_by_name['condition'].message_type = flyteidl_dot_core_dot_condition__pb2._BOOLEANEXPRESSION
_IFBLOCK.fields_by_name['then_node'].message_type = _NODE
_IFELSEBLOCK.fields_by_name['case'].message_type = _IFBLOCK
_IFELSEBLOCK.fields_by_name['other'].message_type = _IFBLOCK
_IFELSEBLOCK.fields_by_name['else_node'].message_type = _NODE
_IFELSEBLOCK.fields_by_name['error'].message_type = flyteidl_dot_core_dot_types__pb2._ERROR
_IFELSEBLOCK.oneofs_by_name['default'].fields.append(
  _IFELSEBLOCK.fields_by_name['else_node'])
_IFELSEBLOCK.fields_by_name['else_node'].containing_oneof = _IFELSEBLOCK.oneofs_by_name['default']
_IFELSEBLOCK.oneofs_by_name['default'].fields.append(
  _IFELSEBLOCK.fields_by_name['error'])
_IFELSEBLOCK.fields_by_name['error'].containing_oneof = _IFELSEBLOCK.oneofs_by_name['default']
_BRANCHNODE.fields_by_name['if_else'].message_type = _IFELSEBLOCK
_CLOSURENODE.fields_by_name['closure_type'].message_type = flyteidl_dot_core_dot_types__pb2._CLOSURETYPE
_TASKNODE.fields_by_name['reference_id'].message_type = flyteidl_dot_core_dot_identifier__pb2._IDENTIFIER
_TASKNODE.oneofs_by_name['reference'].fields.append(
  _TASKNODE.fields_by_name['reference_id'])
_TASKNODE.fields_by_name['reference_id'].containing_oneof = _TASKNODE.oneofs_by_name['reference']
_WORKFLOWNODE.fields_by_name['launchplan_ref'].message_type = flyteidl_dot_core_dot_identifier__pb2._IDENTIFIER
_WORKFLOWNODE.fields_by_name['sub_workflow_ref'].message_type = flyteidl_dot_core_dot_identifier__pb2._IDENTIFIER
_WORKFLOWNODE.oneofs_by_name['reference'].fields.append(
  _WORKFLOWNODE.fields_by_name['launchplan_ref'])
_WORKFLOWNODE.fields_by_name['launchplan_ref'].containing_oneof = _WORKFLOWNODE.oneofs_by_name['reference']
_WORKFLOWNODE.oneofs_by_name['reference'].fields.append(
  _WORKFLOWNODE.fields_by_name['sub_workflow_ref'])
_WORKFLOWNODE.fields_by_name['sub_workflow_ref'].containing_oneof = _WORKFLOWNODE.oneofs_by_name['reference']
_NODEMETADATA.fields_by_name['timeout'].message_type = google_dot_protobuf_dot_duration__pb2._DURATION
_NODEMETADATA.fields_by_name['retries'].message_type = flyteidl_dot_core_dot_tasks__pb2._RETRYSTRATEGY
_NODE.fields_by_name['metadata'].message_type = _NODEMETADATA
_NODE.fields_by_name['inputs'].message_type = _BINDING
_NODE.fields_by_name['output_aliases'].message_type = _ALIAS
_NODE.fields_by_name['task_node'].message_type = _TASKNODE
_NODE.fields_by_name['workflow_node'].message_type = _WORKFLOWNODE
_NODE.fields_by_name['branch_node'].message_type = _BRANCHNODE
_NODE.fields_by_name['closure_node'].message_type = _CLOSURENODE
_NODE.oneofs_by_name['target'].fields.append(
  _NODE.fields_by_name['task_node'])
_NODE.fields_by_name['task_node'].containing_oneof = _NODE.oneofs_by_name['target']
_NODE.oneofs_by_name['target'].fields.append(
  _NODE.fields_by_name['workflow_node'])
_NODE.fields_by_name['workflow_node'].containing_oneof = _NODE.oneofs_by_name['target']
_NODE.oneofs_by_name['target'].fields.append(
  _NODE.fields_by_name['branch_node'])
_NODE.fields_by_name['branch_node'].containing_oneof = _NODE.oneofs_by_name['target']
_NODE.oneofs_by_name['target'].fields.append(
  _NODE.fields_by_name['closure_node'])
_NODE.fields_by_name['closure_node'].containing_oneof = _NODE.oneofs_by_name['target']
_WORKFLOWTEMPLATE.fields_by_name['id'].message_type = flyteidl_dot_core_dot_identifier__pb2._IDENTIFIER
_WORKFLOWTEMPLATE.fields_by_name['metadata'].message_type = _WORKFLOWMETADATA
_WORKFLOWTEMPLATE.fields_by_name['interface'].message_type = flyteidl_dot_core_dot_types__pb2._TYPEDINTERFACE
_WORKFLOWTEMPLATE.fields_by_name['nodes'].message_type = _NODE
_WORKFLOWTEMPLATE.fields_by_name['outputs'].message_type = _BINDING
_WORKFLOWTEMPLATE.fields_by_name['failure_node'].message_type = _NODE
DESCRIPTOR.message_types_by_name['Void'] = _VOID
DESCRIPTOR.message_types_by_name['Blob'] = _BLOB
DESCRIPTOR.message_types_by_name['BlobMetadata'] = _BLOBMETADATA
DESCRIPTOR.message_types_by_name['Binary'] = _BINARY
DESCRIPTOR.message_types_by_name['Schema'] = _SCHEMA
DESCRIPTOR.message_types_by_name['Scalar'] = _SCALAR
DESCRIPTOR.message_types_by_name['Closure'] = _CLOSURE
DESCRIPTOR.message_types_by_name['Literal'] = _LITERAL
DESCRIPTOR.message_types_by_name['LiteralCollection'] = _LITERALCOLLECTION
DESCRIPTOR.message_types_by_name['LiteralMap'] = _LITERALMAP
DESCRIPTOR.message_types_by_name['BindingDataCollection'] = _BINDINGDATACOLLECTION
DESCRIPTOR.message_types_by_name['BindingDataMap'] = _BINDINGDATAMAP
DESCRIPTOR.message_types_by_name['BindingData'] = _BINDINGDATA
DESCRIPTOR.message_types_by_name['Binding'] = _BINDING
DESCRIPTOR.message_types_by_name['IfBlock'] = _IFBLOCK
DESCRIPTOR.message_types_by_name['IfElseBlock'] = _IFELSEBLOCK
DESCRIPTOR.message_types_by_name['BranchNode'] = _BRANCHNODE
DESCRIPTOR.message_types_by_name['ClosureNode'] = _CLOSURENODE
DESCRIPTOR.message_types_by_name['TaskNode'] = _TASKNODE
DESCRIPTOR.message_types_by_name['WorkflowNode'] = _WORKFLOWNODE
DESCRIPTOR.message_types_by_name['NodeMetadata'] = _NODEMETADATA
DESCRIPTOR.message_types_by_name['Alias'] = _ALIAS
DESCRIPTOR.message_types_by_name['Node'] = _NODE
DESCRIPTOR.message_types_by_name['WorkflowMetadata'] = _WORKFLOWMETADATA
DESCRIPTOR.message_types_by_name['WorkflowTemplate'] = _WORKFLOWTEMPLATE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Void = _reflection.GeneratedProtocolMessageType('Void', (_message.Message,), dict(
  DESCRIPTOR = _VOID,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.Void)
  ))
_sym_db.RegisterMessage(Void)

Blob = _reflection.GeneratedProtocolMessageType('Blob', (_message.Message,), dict(
  DESCRIPTOR = _BLOB,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.Blob)
  ))
_sym_db.RegisterMessage(Blob)

BlobMetadata = _reflection.GeneratedProtocolMessageType('BlobMetadata', (_message.Message,), dict(
  DESCRIPTOR = _BLOBMETADATA,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.BlobMetadata)
  ))
_sym_db.RegisterMessage(BlobMetadata)

Binary = _reflection.GeneratedProtocolMessageType('Binary', (_message.Message,), dict(
  DESCRIPTOR = _BINARY,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.Binary)
  ))
_sym_db.RegisterMessage(Binary)

Schema = _reflection.GeneratedProtocolMessageType('Schema', (_message.Message,), dict(
  DESCRIPTOR = _SCHEMA,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.Schema)
  ))
_sym_db.RegisterMessage(Schema)

Scalar = _reflection.GeneratedProtocolMessageType('Scalar', (_message.Message,), dict(
  DESCRIPTOR = _SCALAR,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.Scalar)
  ))
_sym_db.RegisterMessage(Scalar)

Closure = _reflection.GeneratedProtocolMessageType('Closure', (_message.Message,), dict(
  DESCRIPTOR = _CLOSURE,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.Closure)
  ))
_sym_db.RegisterMessage(Closure)

Literal = _reflection.GeneratedProtocolMessageType('Literal', (_message.Message,), dict(
  DESCRIPTOR = _LITERAL,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.Literal)
  ))
_sym_db.RegisterMessage(Literal)

LiteralCollection = _reflection.GeneratedProtocolMessageType('LiteralCollection', (_message.Message,), dict(
  DESCRIPTOR = _LITERALCOLLECTION,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.LiteralCollection)
  ))
_sym_db.RegisterMessage(LiteralCollection)

LiteralMap = _reflection.GeneratedProtocolMessageType('LiteralMap', (_message.Message,), dict(

  LiteralsEntry = _reflection.GeneratedProtocolMessageType('LiteralsEntry', (_message.Message,), dict(
    DESCRIPTOR = _LITERALMAP_LITERALSENTRY,
    __module__ = 'flyteidl.core.literals_pb2'
    # @@protoc_insertion_point(class_scope:flyteidl.core.LiteralMap.LiteralsEntry)
    ))
  ,
  DESCRIPTOR = _LITERALMAP,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.LiteralMap)
  ))
_sym_db.RegisterMessage(LiteralMap)
_sym_db.RegisterMessage(LiteralMap.LiteralsEntry)

BindingDataCollection = _reflection.GeneratedProtocolMessageType('BindingDataCollection', (_message.Message,), dict(
  DESCRIPTOR = _BINDINGDATACOLLECTION,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.BindingDataCollection)
  ))
_sym_db.RegisterMessage(BindingDataCollection)

BindingDataMap = _reflection.GeneratedProtocolMessageType('BindingDataMap', (_message.Message,), dict(

  BindingsEntry = _reflection.GeneratedProtocolMessageType('BindingsEntry', (_message.Message,), dict(
    DESCRIPTOR = _BINDINGDATAMAP_BINDINGSENTRY,
    __module__ = 'flyteidl.core.literals_pb2'
    # @@protoc_insertion_point(class_scope:flyteidl.core.BindingDataMap.BindingsEntry)
    ))
  ,
  DESCRIPTOR = _BINDINGDATAMAP,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.BindingDataMap)
  ))
_sym_db.RegisterMessage(BindingDataMap)
_sym_db.RegisterMessage(BindingDataMap.BindingsEntry)

BindingData = _reflection.GeneratedProtocolMessageType('BindingData', (_message.Message,), dict(
  DESCRIPTOR = _BINDINGDATA,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.BindingData)
  ))
_sym_db.RegisterMessage(BindingData)

Binding = _reflection.GeneratedProtocolMessageType('Binding', (_message.Message,), dict(
  DESCRIPTOR = _BINDING,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.Binding)
  ))
_sym_db.RegisterMessage(Binding)

IfBlock = _reflection.GeneratedProtocolMessageType('IfBlock', (_message.Message,), dict(
  DESCRIPTOR = _IFBLOCK,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.IfBlock)
  ))
_sym_db.RegisterMessage(IfBlock)

IfElseBlock = _reflection.GeneratedProtocolMessageType('IfElseBlock', (_message.Message,), dict(
  DESCRIPTOR = _IFELSEBLOCK,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.IfElseBlock)
  ))
_sym_db.RegisterMessage(IfElseBlock)

BranchNode = _reflection.GeneratedProtocolMessageType('BranchNode', (_message.Message,), dict(
  DESCRIPTOR = _BRANCHNODE,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.BranchNode)
  ))
_sym_db.RegisterMessage(BranchNode)

ClosureNode = _reflection.GeneratedProtocolMessageType('ClosureNode', (_message.Message,), dict(
  DESCRIPTOR = _CLOSURENODE,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.ClosureNode)
  ))
_sym_db.RegisterMessage(ClosureNode)

TaskNode = _reflection.GeneratedProtocolMessageType('TaskNode', (_message.Message,), dict(
  DESCRIPTOR = _TASKNODE,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.TaskNode)
  ))
_sym_db.RegisterMessage(TaskNode)

WorkflowNode = _reflection.GeneratedProtocolMessageType('WorkflowNode', (_message.Message,), dict(
  DESCRIPTOR = _WORKFLOWNODE,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.WorkflowNode)
  ))
_sym_db.RegisterMessage(WorkflowNode)

NodeMetadata = _reflection.GeneratedProtocolMessageType('NodeMetadata', (_message.Message,), dict(
  DESCRIPTOR = _NODEMETADATA,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.NodeMetadata)
  ))
_sym_db.RegisterMessage(NodeMetadata)

Alias = _reflection.GeneratedProtocolMessageType('Alias', (_message.Message,), dict(
  DESCRIPTOR = _ALIAS,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.Alias)
  ))
_sym_db.RegisterMessage(Alias)

Node = _reflection.GeneratedProtocolMessageType('Node', (_message.Message,), dict(
  DESCRIPTOR = _NODE,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.Node)
  ))
_sym_db.RegisterMessage(Node)

WorkflowMetadata = _reflection.GeneratedProtocolMessageType('WorkflowMetadata', (_message.Message,), dict(
  DESCRIPTOR = _WORKFLOWMETADATA,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.WorkflowMetadata)
  ))
_sym_db.RegisterMessage(WorkflowMetadata)

WorkflowTemplate = _reflection.GeneratedProtocolMessageType('WorkflowTemplate', (_message.Message,), dict(
  DESCRIPTOR = _WORKFLOWTEMPLATE,
  __module__ = 'flyteidl.core.literals_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.core.WorkflowTemplate)
  ))
_sym_db.RegisterMessage(WorkflowTemplate)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z0github.com/lyft/flyteidl/gen/pb-go/flyteidl/core'))
_LITERALMAP_LITERALSENTRY.has_options = True
_LITERALMAP_LITERALSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_BINDINGDATAMAP_BINDINGSENTRY.has_options = True
_BINDINGDATAMAP_BINDINGSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
# @@protoc_insertion_point(module_scope)
