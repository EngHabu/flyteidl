// Code generated by protoc-gen-go. DO NOT EDIT.
// source: core/tasks.proto

package core

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TaskCategory int32

const (
	// Task category that identifies if the system can use default structures in UI, etc to drive the task
	// TODO should we add Container type of tasks as a special Class?
	TaskCategory_SingleStepTask TaskCategory = 0
	TaskCategory_MultiStepTask  TaskCategory = 1
)

var TaskCategory_name = map[int32]string{
	0: "SingleStepTask",
	1: "MultiStepTask",
}
var TaskCategory_value = map[string]int32{
	"SingleStepTask": 0,
	"MultiStepTask":  1,
}

func (x TaskCategory) String() string {
	return proto.EnumName(TaskCategory_name, int32(x))
}
func (TaskCategory) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tasks_0932ee0ddf27a3ad, []int{0}
}

type RuntimeMetadata_RuntimeType int32

const (
	RuntimeMetadata_FlyteSDK RuntimeMetadata_RuntimeType = 0
	RuntimeMetadata_Other    RuntimeMetadata_RuntimeType = 1
)

var RuntimeMetadata_RuntimeType_name = map[int32]string{
	0: "FlyteSDK",
	1: "Other",
}
var RuntimeMetadata_RuntimeType_value = map[string]int32{
	"FlyteSDK": 0,
	"Other":    1,
}

func (x RuntimeMetadata_RuntimeType) String() string {
	return proto.EnumName(RuntimeMetadata_RuntimeType_name, int32(x))
}
func (RuntimeMetadata_RuntimeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tasks_0932ee0ddf27a3ad, []int{1, 0}
}

// A customizable interface to convey resources requested for a container. This can be interpretted differently for different
// container engines.
type Resources struct {
	// The desired set of resources requested.
	Requests map[string]string `protobuf:"bytes,1,rep,name=requests" json:"requests,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Defines a set of bounds (e.g. min/max) within which the task can reliably run.
	Limits map[string]string `protobuf:"bytes,2,rep,name=limits" json:"limits,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Defines a set of bounds (e.g. min/max) within which the task can reliably run.
	EnvDictionary        map[string]string `protobuf:"bytes,3,rep,name=env_dictionary,json=envDictionary" json:"env_dictionary,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Resources) Reset()         { *m = Resources{} }
func (m *Resources) String() string { return proto.CompactTextString(m) }
func (*Resources) ProtoMessage()    {}
func (*Resources) Descriptor() ([]byte, []int) {
	return fileDescriptor_tasks_0932ee0ddf27a3ad, []int{0}
}
func (m *Resources) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resources.Unmarshal(m, b)
}
func (m *Resources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resources.Marshal(b, m, deterministic)
}
func (dst *Resources) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resources.Merge(dst, src)
}
func (m *Resources) XXX_Size() int {
	return xxx_messageInfo_Resources.Size(m)
}
func (m *Resources) XXX_DiscardUnknown() {
	xxx_messageInfo_Resources.DiscardUnknown(m)
}

var xxx_messageInfo_Resources proto.InternalMessageInfo

func (m *Resources) GetRequests() map[string]string {
	if m != nil {
		return m.Requests
	}
	return nil
}

func (m *Resources) GetLimits() map[string]string {
	if m != nil {
		return m.Limits
	}
	return nil
}

func (m *Resources) GetEnvDictionary() map[string]string {
	if m != nil {
		return m.EnvDictionary
	}
	return nil
}

// Runtime information. This is losely defined to allow for extensibility.
type RuntimeMetadata struct {
	// Type of runtime.
	Type RuntimeMetadata_RuntimeType `protobuf:"varint,1,opt,name=type,enum=core.RuntimeMetadata_RuntimeType" json:"type,omitempty"`
	// Version of the runtime. All versions should be backward compatible. However, certain cases call for version
	// checks to ensure tighter validation or setting expectations.
	Version string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	// +optional It can be used to provide extra information about the runtime (e.g. python, golang... etc.).
	Flavor               string   `protobuf:"bytes,3,opt,name=flavor" json:"flavor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RuntimeMetadata) Reset()         { *m = RuntimeMetadata{} }
func (m *RuntimeMetadata) String() string { return proto.CompactTextString(m) }
func (*RuntimeMetadata) ProtoMessage()    {}
func (*RuntimeMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_tasks_0932ee0ddf27a3ad, []int{1}
}
func (m *RuntimeMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuntimeMetadata.Unmarshal(m, b)
}
func (m *RuntimeMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuntimeMetadata.Marshal(b, m, deterministic)
}
func (dst *RuntimeMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeMetadata.Merge(dst, src)
}
func (m *RuntimeMetadata) XXX_Size() int {
	return xxx_messageInfo_RuntimeMetadata.Size(m)
}
func (m *RuntimeMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeMetadata proto.InternalMessageInfo

func (m *RuntimeMetadata) GetType() RuntimeMetadata_RuntimeType {
	if m != nil {
		return m.Type
	}
	return RuntimeMetadata_FlyteSDK
}

func (m *RuntimeMetadata) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *RuntimeMetadata) GetFlavor() string {
	if m != nil {
		return m.Flavor
	}
	return ""
}

// Task Metadata
type TaskMetadata struct {
	// Indicates whether the system should attempt to lookup this task's output to avoid duplication of work.
	Discoverable bool `protobuf:"varint,1,opt,name=discoverable" json:"discoverable,omitempty"`
	// Runtime information about the task.
	Runtime              *RuntimeMetadata `protobuf:"bytes,2,opt,name=runtime" json:"runtime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TaskMetadata) Reset()         { *m = TaskMetadata{} }
func (m *TaskMetadata) String() string { return proto.CompactTextString(m) }
func (*TaskMetadata) ProtoMessage()    {}
func (*TaskMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_tasks_0932ee0ddf27a3ad, []int{2}
}
func (m *TaskMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskMetadata.Unmarshal(m, b)
}
func (m *TaskMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskMetadata.Marshal(b, m, deterministic)
}
func (dst *TaskMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskMetadata.Merge(dst, src)
}
func (m *TaskMetadata) XXX_Size() int {
	return xxx_messageInfo_TaskMetadata.Size(m)
}
func (m *TaskMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_TaskMetadata proto.InternalMessageInfo

func (m *TaskMetadata) GetDiscoverable() bool {
	if m != nil {
		return m.Discoverable
	}
	return false
}

func (m *TaskMetadata) GetRuntime() *RuntimeMetadata {
	if m != nil {
		return m.Runtime
	}
	return nil
}

// A Task structure that uniquely identifies a task in the system
// Tasks are registered as a first step in the system.
type TaskTemplate struct {
	// Auto generated taskId. Task Id uniquely identifies this task globally.
	SystemId string `protobuf:"bytes,1,opt,name=system_id,json=systemId" json:"system_id,omitempty"`
	// Category of the task. These are predefined and help provide defaults
	Category TaskCategory `protobuf:"varint,2,opt,name=category,enum=core.TaskCategory" json:"category,omitempty"`
	// A predefined yet extensible Task type identifier. This can be used to customize any of the components. If no
	// extensions are provided in the system, Flyte will resolve the this task to its TaskCategory and default the
	// implementation registered for the TaskCategory.
	Type string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	// Extra metadata about the task.
	Metadata *TaskMetadata `protobuf:"bytes,4,opt,name=metadata" json:"metadata,omitempty"`
	// A strongly typed interface for the task. This enables others to use this task within a workflow and gauarantees
	// compile-time validation of the workflow to avoid costly runtime failures.
	Interface *TypedInterface `protobuf:"bytes,5,opt,name=interface" json:"interface,omitempty"`
	// Custom data about the task. This is extensible to allow various plugins in the system.
	CustomTaskInfo []byte `protobuf:"bytes,6,opt,name=custom_task_info,json=customTaskInfo,proto3" json:"custom_task_info,omitempty"`
	// Known task types that the system will guarantee plugins for. Custom SDK plugins are allowed to set these if needed.
	// If no corresponding execution-layer plugins are found, the system will default to handling these using built-in
	// handlers.
	//
	// Types that are valid to be assigned to Task:
	//	*TaskTemplate_Container
	Task                 isTaskTemplate_Task `protobuf_oneof:"task"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TaskTemplate) Reset()         { *m = TaskTemplate{} }
func (m *TaskTemplate) String() string { return proto.CompactTextString(m) }
func (*TaskTemplate) ProtoMessage()    {}
func (*TaskTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_tasks_0932ee0ddf27a3ad, []int{3}
}
func (m *TaskTemplate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskTemplate.Unmarshal(m, b)
}
func (m *TaskTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskTemplate.Marshal(b, m, deterministic)
}
func (dst *TaskTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskTemplate.Merge(dst, src)
}
func (m *TaskTemplate) XXX_Size() int {
	return xxx_messageInfo_TaskTemplate.Size(m)
}
func (m *TaskTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_TaskTemplate proto.InternalMessageInfo

type isTaskTemplate_Task interface {
	isTaskTemplate_Task()
}

type TaskTemplate_Container struct {
	Container *ContainerTask `protobuf:"bytes,7,opt,name=container,oneof"`
}

func (*TaskTemplate_Container) isTaskTemplate_Task() {}

func (m *TaskTemplate) GetTask() isTaskTemplate_Task {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *TaskTemplate) GetSystemId() string {
	if m != nil {
		return m.SystemId
	}
	return ""
}

func (m *TaskTemplate) GetCategory() TaskCategory {
	if m != nil {
		return m.Category
	}
	return TaskCategory_SingleStepTask
}

func (m *TaskTemplate) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TaskTemplate) GetMetadata() *TaskMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *TaskTemplate) GetInterface() *TypedInterface {
	if m != nil {
		return m.Interface
	}
	return nil
}

func (m *TaskTemplate) GetCustomTaskInfo() []byte {
	if m != nil {
		return m.CustomTaskInfo
	}
	return nil
}

func (m *TaskTemplate) GetContainer() *ContainerTask {
	if x, ok := m.GetTask().(*TaskTemplate_Container); ok {
		return x.Container
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TaskTemplate) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TaskTemplate_OneofMarshaler, _TaskTemplate_OneofUnmarshaler, _TaskTemplate_OneofSizer, []interface{}{
		(*TaskTemplate_Container)(nil),
	}
}

func _TaskTemplate_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TaskTemplate)
	// task
	switch x := m.Task.(type) {
	case *TaskTemplate_Container:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Container); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TaskTemplate.Task has unexpected type %T", x)
	}
	return nil
}

func _TaskTemplate_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TaskTemplate)
	switch tag {
	case 7: // task.container
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ContainerTask)
		err := b.DecodeMessage(msg)
		m.Task = &TaskTemplate_Container{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TaskTemplate_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TaskTemplate)
	// task
	switch x := m.Task.(type) {
	case *TaskTemplate_Container:
		s := proto.Size(x.Container)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ContainerTask struct {
	// Container image url. Eg: docker/redis:latest
	Image string `protobuf:"bytes,1,opt,name=image" json:"image,omitempty"`
	// Command to be executed, if not provided, the default entrypoint in the container image will be used.
	Command []string `protobuf:"bytes,2,rep,name=command" json:"command,omitempty"`
	// These will default to Flyte given paths. If provided, the system will not append known paths. If the task still
	// needs flyte's inputs and outputs path, add $(FLYTE_INPUT_FILE), $(FLYTE_OUTPUT_FILE) wherever makes sense and the
	// system will populate these before executing the container.
	Args []string `protobuf:"bytes,3,rep,name=args" json:"args,omitempty"`
	// Container resources requirement as specified by the container engine.
	Resources            *Resources `protobuf:"bytes,4,opt,name=resources" json:"resources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ContainerTask) Reset()         { *m = ContainerTask{} }
func (m *ContainerTask) String() string { return proto.CompactTextString(m) }
func (*ContainerTask) ProtoMessage()    {}
func (*ContainerTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_tasks_0932ee0ddf27a3ad, []int{4}
}
func (m *ContainerTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerTask.Unmarshal(m, b)
}
func (m *ContainerTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerTask.Marshal(b, m, deterministic)
}
func (dst *ContainerTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerTask.Merge(dst, src)
}
func (m *ContainerTask) XXX_Size() int {
	return xxx_messageInfo_ContainerTask.Size(m)
}
func (m *ContainerTask) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerTask.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerTask proto.InternalMessageInfo

func (m *ContainerTask) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ContainerTask) GetCommand() []string {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *ContainerTask) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *ContainerTask) GetResources() *Resources {
	if m != nil {
		return m.Resources
	}
	return nil
}

func init() {
	proto.RegisterType((*Resources)(nil), "core.Resources")
	proto.RegisterMapType((map[string]string)(nil), "core.Resources.EnvDictionaryEntry")
	proto.RegisterMapType((map[string]string)(nil), "core.Resources.LimitsEntry")
	proto.RegisterMapType((map[string]string)(nil), "core.Resources.RequestsEntry")
	proto.RegisterType((*RuntimeMetadata)(nil), "core.RuntimeMetadata")
	proto.RegisterType((*TaskMetadata)(nil), "core.TaskMetadata")
	proto.RegisterType((*TaskTemplate)(nil), "core.TaskTemplate")
	proto.RegisterType((*ContainerTask)(nil), "core.ContainerTask")
	proto.RegisterEnum("core.TaskCategory", TaskCategory_name, TaskCategory_value)
	proto.RegisterEnum("core.RuntimeMetadata_RuntimeType", RuntimeMetadata_RuntimeType_name, RuntimeMetadata_RuntimeType_value)
}

func init() { proto.RegisterFile("core/tasks.proto", fileDescriptor_tasks_0932ee0ddf27a3ad) }

var fileDescriptor_tasks_0932ee0ddf27a3ad = []byte{
	// 608 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x5d, 0xda, 0xae, 0x6b, 0x6e, 0x3f, 0x56, 0xcc, 0x40, 0xd1, 0x26, 0xa4, 0x91, 0x07, 0x54,
	0x21, 0xd1, 0x49, 0x9d, 0x26, 0x31, 0x78, 0x41, 0xfb, 0x40, 0x54, 0x30, 0x21, 0x79, 0x7b, 0xe2,
	0xa5, 0xf2, 0x92, 0xdb, 0x62, 0x2d, 0xb1, 0x8b, 0xed, 0x56, 0xca, 0x1b, 0xe2, 0xa7, 0xf0, 0x33,
	0xf8, 0x75, 0x28, 0x76, 0x92, 0x7e, 0xc0, 0xcb, 0xde, 0x72, 0xef, 0x3d, 0xe7, 0xf8, 0xf4, 0xd4,
	0xd7, 0xd0, 0x8f, 0xa4, 0xc2, 0x13, 0xc3, 0xf4, 0x83, 0x1e, 0xce, 0x95, 0x34, 0x92, 0x34, 0xf2,
	0xce, 0xe1, 0x81, 0xed, 0x73, 0x61, 0x50, 0x4d, 0x59, 0x84, 0x6e, 0x16, 0xfe, 0xac, 0x83, 0x4f,
	0x51, 0xcb, 0x85, 0x8a, 0x50, 0x93, 0x73, 0x68, 0x29, 0xfc, 0xb1, 0x40, 0x6d, 0x74, 0xe0, 0x1d,
	0xd7, 0x07, 0xed, 0xd1, 0x8b, 0x61, 0x4e, 0x1b, 0x56, 0x90, 0x21, 0x2d, 0xe6, 0xd7, 0xc2, 0xa8,
	0x8c, 0x56, 0x70, 0x72, 0x0a, 0xcd, 0x84, 0xa7, 0xdc, 0xe8, 0xa0, 0x66, 0x89, 0x47, 0xdb, 0xc4,
	0x2f, 0x76, 0xea, 0x68, 0x05, 0x94, 0x8c, 0xa1, 0x87, 0x62, 0x39, 0x89, 0x79, 0x64, 0xb8, 0x14,
	0x4c, 0x65, 0x41, 0xdd, 0x92, 0xc3, 0x6d, 0xf2, 0xb5, 0x58, 0x5e, 0x55, 0x20, 0xa7, 0xd1, 0xc5,
	0xf5, 0xde, 0xe1, 0x7b, 0xe8, 0x6e, 0x58, 0x23, 0x7d, 0xa8, 0x3f, 0x60, 0x16, 0x78, 0xc7, 0xde,
	0xc0, 0xa7, 0xf9, 0x27, 0x39, 0x80, 0xdd, 0x25, 0x4b, 0x16, 0x18, 0xd4, 0x6c, 0xcf, 0x15, 0xef,
	0x6a, 0x6f, 0xbd, 0xc3, 0x73, 0x68, 0xaf, 0xd9, 0x7b, 0x14, 0xf5, 0x03, 0x90, 0x7f, 0xcd, 0x3d,
	0x46, 0x21, 0xfc, 0xed, 0xc1, 0x3e, 0x5d, 0x08, 0xc3, 0x53, 0xbc, 0x41, 0xc3, 0x62, 0x66, 0x18,
	0x39, 0x83, 0x86, 0xc9, 0xe6, 0x68, 0x05, 0x7a, 0xa3, 0x97, 0x45, 0x1c, 0x9b, 0xa0, 0xb2, 0xbe,
	0xcb, 0xe6, 0x48, 0x2d, 0x9c, 0x04, 0xb0, 0xb7, 0x44, 0xa5, 0xb9, 0x14, 0xc5, 0x31, 0x65, 0x49,
	0x9e, 0x43, 0x73, 0x9a, 0xb0, 0xa5, 0x54, 0x41, 0xdd, 0x0e, 0x8a, 0x2a, 0x7c, 0x05, 0xed, 0x35,
	0x19, 0xd2, 0x81, 0xd6, 0xc7, 0x24, 0x33, 0x78, 0x7b, 0xf5, 0xb9, 0xbf, 0x43, 0x7c, 0xd8, 0xfd,
	0x6a, 0xbe, 0xa3, 0xea, 0x7b, 0x61, 0x04, 0x9d, 0x3b, 0xa6, 0x1f, 0x2a, 0x83, 0x21, 0x74, 0x62,
	0xae, 0x23, 0xb9, 0x44, 0xc5, 0xee, 0x13, 0x67, 0xb4, 0x45, 0x37, 0x7a, 0xe4, 0x04, 0xf6, 0x94,
	0xd3, 0xb6, 0x6e, 0xda, 0xa3, 0x67, 0xff, 0xfd, 0x1d, 0xb4, 0x44, 0x85, 0x7f, 0x6a, 0xee, 0x94,
	0x3b, 0x4c, 0xe7, 0x09, 0x33, 0x48, 0x8e, 0xc0, 0xd7, 0x99, 0x36, 0x98, 0x4e, 0x78, 0x5c, 0x84,
	0xd9, 0x72, 0x8d, 0x71, 0x4c, 0x86, 0xd0, 0x8a, 0x98, 0xc1, 0x99, 0x54, 0x99, 0xd5, 0xef, 0x8d,
	0x88, 0xd3, 0xcf, 0x25, 0x2e, 0x8b, 0x09, 0xad, 0x30, 0x84, 0x14, 0x99, 0xba, 0x00, 0x5c, 0x60,
	0x43, 0x68, 0xa5, 0x85, 0x8d, 0xa0, 0x61, 0x3d, 0xae, 0x69, 0x54, 0x06, 0x2b, 0x0c, 0x19, 0x81,
	0x5f, 0x6d, 0x50, 0xb0, 0x6b, 0x09, 0x07, 0x05, 0x21, 0x9b, 0x63, 0x3c, 0x2e, 0x67, 0x74, 0x05,
	0x23, 0x03, 0xe8, 0x47, 0x0b, 0x6d, 0x64, 0x3a, 0xc9, 0x97, 0x72, 0xc2, 0xc5, 0x54, 0x06, 0xcd,
	0x63, 0x6f, 0xd0, 0xa1, 0x3d, 0xd7, 0xcf, 0xcf, 0x1a, 0x8b, 0xa9, 0x24, 0xa7, 0xe0, 0x47, 0x52,
	0x18, 0xc6, 0x05, 0xaa, 0x60, 0xcf, 0xaa, 0x3f, 0x75, 0xea, 0x97, 0x65, 0x3b, 0xc7, 0x7e, 0xda,
	0xa1, 0x2b, 0xdc, 0x45, 0x13, 0x1a, 0xb9, 0x6e, 0xf8, 0xcb, 0x83, 0xee, 0x06, 0x2c, 0xbf, 0x72,
	0x3c, 0x65, 0x33, 0x2c, 0x92, 0x73, 0x45, 0x7e, 0x47, 0x22, 0x99, 0xa6, 0x4c, 0xc4, 0x76, 0x53,
	0x7d, 0x5a, 0x96, 0x79, 0x40, 0x4c, 0xcd, 0xb4, 0xdd, 0x41, 0x9f, 0xda, 0x6f, 0xf2, 0x06, 0x7c,
	0x55, 0x6e, 0x61, 0x91, 0xd0, 0xfe, 0xd6, 0x72, 0xd2, 0x15, 0xe2, 0xf5, 0x99, 0xfb, 0x03, 0x2f,
	0x57, 0x99, 0xf7, 0x6e, 0xb9, 0x98, 0x25, 0x78, 0x6b, 0x70, 0x9e, 0x4f, 0xfa, 0x3b, 0xe4, 0x09,
	0x74, 0x6f, 0x16, 0x89, 0xe1, 0x55, 0xcb, 0xbb, 0x68, 0x7e, 0xb3, 0x6f, 0xd4, 0x7d, 0xd3, 0x3e,
	0x4a, 0xa7, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xc6, 0x53, 0xd8, 0xf1, 0xc4, 0x04, 0x00, 0x00,
}
