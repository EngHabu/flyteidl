// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/project_attributes.proto

#ifndef PROTOBUF_INCLUDED_flyteidl_2fadmin_2fproject_5fattributes_2eproto
#define PROTOBUF_INCLUDED_flyteidl_2fadmin_2fproject_5fattributes_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "flyteidl/core/tasks.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_flyteidl_2fadmin_2fproject_5fattributes_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_flyteidl_2fadmin_2fproject_5fattributes_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_flyteidl_2fadmin_2fproject_5fattributes_2eproto();
namespace flyteidl {
namespace admin {
class ProjectAttributes;
class ProjectAttributesDefaultTypeInternal;
extern ProjectAttributesDefaultTypeInternal _ProjectAttributes_default_instance_;
class ProjectAttributesUpdateRequest;
class ProjectAttributesUpdateRequestDefaultTypeInternal;
extern ProjectAttributesUpdateRequestDefaultTypeInternal _ProjectAttributesUpdateRequest_default_instance_;
class ProjectAttributesUpdateResponse;
class ProjectAttributesUpdateResponseDefaultTypeInternal;
extern ProjectAttributesUpdateResponseDefaultTypeInternal _ProjectAttributesUpdateResponse_default_instance_;
class ProjectAttributes_AttributesEntry_DoNotUse;
class ProjectAttributes_AttributesEntry_DoNotUseDefaultTypeInternal;
extern ProjectAttributes_AttributesEntry_DoNotUseDefaultTypeInternal _ProjectAttributes_AttributesEntry_DoNotUse_default_instance_;
}  // namespace admin
}  // namespace flyteidl
namespace google {
namespace protobuf {
template<> ::flyteidl::admin::ProjectAttributes* Arena::CreateMaybeMessage<::flyteidl::admin::ProjectAttributes>(Arena*);
template<> ::flyteidl::admin::ProjectAttributesUpdateRequest* Arena::CreateMaybeMessage<::flyteidl::admin::ProjectAttributesUpdateRequest>(Arena*);
template<> ::flyteidl::admin::ProjectAttributesUpdateResponse* Arena::CreateMaybeMessage<::flyteidl::admin::ProjectAttributesUpdateResponse>(Arena*);
template<> ::flyteidl::admin::ProjectAttributes_AttributesEntry_DoNotUse* Arena::CreateMaybeMessage<::flyteidl::admin::ProjectAttributes_AttributesEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace flyteidl {
namespace admin {

// ===================================================================

class ProjectAttributes_AttributesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<ProjectAttributes_AttributesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<ProjectAttributes_AttributesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  ProjectAttributes_AttributesEntry_DoNotUse();
  ProjectAttributes_AttributesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const ProjectAttributes_AttributesEntry_DoNotUse& other);
  static const ProjectAttributes_AttributesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ProjectAttributes_AttributesEntry_DoNotUse*>(&_ProjectAttributes_AttributesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class ProjectAttributes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.ProjectAttributes) */ {
 public:
  ProjectAttributes();
  virtual ~ProjectAttributes();

  ProjectAttributes(const ProjectAttributes& from);

  inline ProjectAttributes& operator=(const ProjectAttributes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProjectAttributes(ProjectAttributes&& from) noexcept
    : ProjectAttributes() {
    *this = ::std::move(from);
  }

  inline ProjectAttributes& operator=(ProjectAttributes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProjectAttributes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProjectAttributes* internal_default_instance() {
    return reinterpret_cast<const ProjectAttributes*>(
               &_ProjectAttributes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ProjectAttributes* other);
  friend void swap(ProjectAttributes& a, ProjectAttributes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProjectAttributes* New() const final {
    return CreateMaybeMessage<ProjectAttributes>(nullptr);
  }

  ProjectAttributes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProjectAttributes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProjectAttributes& from);
  void MergeFrom(const ProjectAttributes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProjectAttributes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> attributes = 2;
  int attributes_size() const;
  void clear_attributes();
  static const int kAttributesFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      attributes() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_attributes();

  // repeated string tags = 4;
  int tags_size() const;
  void clear_tags();
  static const int kTagsFieldNumber = 4;
  const ::std::string& tags(int index) const;
  ::std::string* mutable_tags(int index);
  void set_tags(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_tags(int index, ::std::string&& value);
  #endif
  void set_tags(int index, const char* value);
  void set_tags(int index, const char* value, size_t size);
  ::std::string* add_tags();
  void add_tags(const ::std::string& value);
  #if LANG_CXX11
  void add_tags(::std::string&& value);
  #endif
  void add_tags(const char* value);
  void add_tags(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& tags() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_tags();

  // string project = 1;
  void clear_project();
  static const int kProjectFieldNumber = 1;
  const ::std::string& project() const;
  void set_project(const ::std::string& value);
  #if LANG_CXX11
  void set_project(::std::string&& value);
  #endif
  void set_project(const char* value);
  void set_project(const char* value, size_t size);
  ::std::string* mutable_project();
  ::std::string* release_project();
  void set_allocated_project(::std::string* project);

  // .flyteidl.core.Resources task_resource_attributes = 3;
  bool has_task_resource_attributes() const;
  void clear_task_resource_attributes();
  static const int kTaskResourceAttributesFieldNumber = 3;
  const ::flyteidl::core::Resources& task_resource_attributes() const;
  ::flyteidl::core::Resources* release_task_resource_attributes();
  ::flyteidl::core::Resources* mutable_task_resource_attributes();
  void set_allocated_task_resource_attributes(::flyteidl::core::Resources* task_resource_attributes);

  // @@protoc_insertion_point(class_scope:flyteidl.admin.ProjectAttributes)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      ProjectAttributes_AttributesEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > attributes_;
  ::google::protobuf::RepeatedPtrField<::std::string> tags_;
  ::google::protobuf::internal::ArenaStringPtr project_;
  ::flyteidl::core::Resources* task_resource_attributes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fproject_5fattributes_2eproto;
};
// -------------------------------------------------------------------

class ProjectAttributesUpdateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.ProjectAttributesUpdateRequest) */ {
 public:
  ProjectAttributesUpdateRequest();
  virtual ~ProjectAttributesUpdateRequest();

  ProjectAttributesUpdateRequest(const ProjectAttributesUpdateRequest& from);

  inline ProjectAttributesUpdateRequest& operator=(const ProjectAttributesUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProjectAttributesUpdateRequest(ProjectAttributesUpdateRequest&& from) noexcept
    : ProjectAttributesUpdateRequest() {
    *this = ::std::move(from);
  }

  inline ProjectAttributesUpdateRequest& operator=(ProjectAttributesUpdateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProjectAttributesUpdateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProjectAttributesUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const ProjectAttributesUpdateRequest*>(
               &_ProjectAttributesUpdateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ProjectAttributesUpdateRequest* other);
  friend void swap(ProjectAttributesUpdateRequest& a, ProjectAttributesUpdateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProjectAttributesUpdateRequest* New() const final {
    return CreateMaybeMessage<ProjectAttributesUpdateRequest>(nullptr);
  }

  ProjectAttributesUpdateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProjectAttributesUpdateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProjectAttributesUpdateRequest& from);
  void MergeFrom(const ProjectAttributesUpdateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProjectAttributesUpdateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .flyteidl.admin.ProjectAttributes attributes = 1;
  bool has_attributes() const;
  void clear_attributes();
  static const int kAttributesFieldNumber = 1;
  const ::flyteidl::admin::ProjectAttributes& attributes() const;
  ::flyteidl::admin::ProjectAttributes* release_attributes();
  ::flyteidl::admin::ProjectAttributes* mutable_attributes();
  void set_allocated_attributes(::flyteidl::admin::ProjectAttributes* attributes);

  // @@protoc_insertion_point(class_scope:flyteidl.admin.ProjectAttributesUpdateRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::flyteidl::admin::ProjectAttributes* attributes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fproject_5fattributes_2eproto;
};
// -------------------------------------------------------------------

class ProjectAttributesUpdateResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.admin.ProjectAttributesUpdateResponse) */ {
 public:
  ProjectAttributesUpdateResponse();
  virtual ~ProjectAttributesUpdateResponse();

  ProjectAttributesUpdateResponse(const ProjectAttributesUpdateResponse& from);

  inline ProjectAttributesUpdateResponse& operator=(const ProjectAttributesUpdateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProjectAttributesUpdateResponse(ProjectAttributesUpdateResponse&& from) noexcept
    : ProjectAttributesUpdateResponse() {
    *this = ::std::move(from);
  }

  inline ProjectAttributesUpdateResponse& operator=(ProjectAttributesUpdateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProjectAttributesUpdateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProjectAttributesUpdateResponse* internal_default_instance() {
    return reinterpret_cast<const ProjectAttributesUpdateResponse*>(
               &_ProjectAttributesUpdateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ProjectAttributesUpdateResponse* other);
  friend void swap(ProjectAttributesUpdateResponse& a, ProjectAttributesUpdateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProjectAttributesUpdateResponse* New() const final {
    return CreateMaybeMessage<ProjectAttributesUpdateResponse>(nullptr);
  }

  ProjectAttributesUpdateResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProjectAttributesUpdateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProjectAttributesUpdateResponse& from);
  void MergeFrom(const ProjectAttributesUpdateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProjectAttributesUpdateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:flyteidl.admin.ProjectAttributesUpdateResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fadmin_2fproject_5fattributes_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ProjectAttributes

// string project = 1;
inline void ProjectAttributes::clear_project() {
  project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProjectAttributes::project() const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.ProjectAttributes.project)
  return project_.GetNoArena();
}
inline void ProjectAttributes::set_project(const ::std::string& value) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.admin.ProjectAttributes.project)
}
#if LANG_CXX11
inline void ProjectAttributes::set_project(::std::string&& value) {
  
  project_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.admin.ProjectAttributes.project)
}
#endif
inline void ProjectAttributes::set_project(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.ProjectAttributes.project)
}
inline void ProjectAttributes::set_project(const char* value, size_t size) {
  
  project_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.ProjectAttributes.project)
}
inline ::std::string* ProjectAttributes::mutable_project() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.ProjectAttributes.project)
  return project_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProjectAttributes::release_project() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.ProjectAttributes.project)
  
  return project_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProjectAttributes::set_allocated_project(::std::string* project) {
  if (project != nullptr) {
    
  } else {
    
  }
  project_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.ProjectAttributes.project)
}

// map<string, string> attributes = 2;
inline int ProjectAttributes::attributes_size() const {
  return attributes_.size();
}
inline void ProjectAttributes::clear_attributes() {
  attributes_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
ProjectAttributes::attributes() const {
  // @@protoc_insertion_point(field_map:flyteidl.admin.ProjectAttributes.attributes)
  return attributes_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
ProjectAttributes::mutable_attributes() {
  // @@protoc_insertion_point(field_mutable_map:flyteidl.admin.ProjectAttributes.attributes)
  return attributes_.MutableMap();
}

// .flyteidl.core.Resources task_resource_attributes = 3;
inline bool ProjectAttributes::has_task_resource_attributes() const {
  return this != internal_default_instance() && task_resource_attributes_ != nullptr;
}
inline const ::flyteidl::core::Resources& ProjectAttributes::task_resource_attributes() const {
  const ::flyteidl::core::Resources* p = task_resource_attributes_;
  // @@protoc_insertion_point(field_get:flyteidl.admin.ProjectAttributes.task_resource_attributes)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::core::Resources*>(
      &::flyteidl::core::_Resources_default_instance_);
}
inline ::flyteidl::core::Resources* ProjectAttributes::release_task_resource_attributes() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.ProjectAttributes.task_resource_attributes)
  
  ::flyteidl::core::Resources* temp = task_resource_attributes_;
  task_resource_attributes_ = nullptr;
  return temp;
}
inline ::flyteidl::core::Resources* ProjectAttributes::mutable_task_resource_attributes() {
  
  if (task_resource_attributes_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::core::Resources>(GetArenaNoVirtual());
    task_resource_attributes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.ProjectAttributes.task_resource_attributes)
  return task_resource_attributes_;
}
inline void ProjectAttributes::set_allocated_task_resource_attributes(::flyteidl::core::Resources* task_resource_attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(task_resource_attributes_);
  }
  if (task_resource_attributes) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      task_resource_attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, task_resource_attributes, submessage_arena);
    }
    
  } else {
    
  }
  task_resource_attributes_ = task_resource_attributes;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.ProjectAttributes.task_resource_attributes)
}

// repeated string tags = 4;
inline int ProjectAttributes::tags_size() const {
  return tags_.size();
}
inline void ProjectAttributes::clear_tags() {
  tags_.Clear();
}
inline const ::std::string& ProjectAttributes::tags(int index) const {
  // @@protoc_insertion_point(field_get:flyteidl.admin.ProjectAttributes.tags)
  return tags_.Get(index);
}
inline ::std::string* ProjectAttributes::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.ProjectAttributes.tags)
  return tags_.Mutable(index);
}
inline void ProjectAttributes::set_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:flyteidl.admin.ProjectAttributes.tags)
  tags_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ProjectAttributes::set_tags(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:flyteidl.admin.ProjectAttributes.tags)
  tags_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ProjectAttributes::set_tags(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:flyteidl.admin.ProjectAttributes.tags)
}
inline void ProjectAttributes::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:flyteidl.admin.ProjectAttributes.tags)
}
inline ::std::string* ProjectAttributes::add_tags() {
  // @@protoc_insertion_point(field_add_mutable:flyteidl.admin.ProjectAttributes.tags)
  return tags_.Add();
}
inline void ProjectAttributes::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:flyteidl.admin.ProjectAttributes.tags)
}
#if LANG_CXX11
inline void ProjectAttributes::add_tags(::std::string&& value) {
  tags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:flyteidl.admin.ProjectAttributes.tags)
}
#endif
inline void ProjectAttributes::add_tags(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:flyteidl.admin.ProjectAttributes.tags)
}
inline void ProjectAttributes::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:flyteidl.admin.ProjectAttributes.tags)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
ProjectAttributes::tags() const {
  // @@protoc_insertion_point(field_list:flyteidl.admin.ProjectAttributes.tags)
  return tags_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
ProjectAttributes::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:flyteidl.admin.ProjectAttributes.tags)
  return &tags_;
}

// -------------------------------------------------------------------

// ProjectAttributesUpdateRequest

// .flyteidl.admin.ProjectAttributes attributes = 1;
inline bool ProjectAttributesUpdateRequest::has_attributes() const {
  return this != internal_default_instance() && attributes_ != nullptr;
}
inline void ProjectAttributesUpdateRequest::clear_attributes() {
  if (GetArenaNoVirtual() == nullptr && attributes_ != nullptr) {
    delete attributes_;
  }
  attributes_ = nullptr;
}
inline const ::flyteidl::admin::ProjectAttributes& ProjectAttributesUpdateRequest::attributes() const {
  const ::flyteidl::admin::ProjectAttributes* p = attributes_;
  // @@protoc_insertion_point(field_get:flyteidl.admin.ProjectAttributesUpdateRequest.attributes)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::admin::ProjectAttributes*>(
      &::flyteidl::admin::_ProjectAttributes_default_instance_);
}
inline ::flyteidl::admin::ProjectAttributes* ProjectAttributesUpdateRequest::release_attributes() {
  // @@protoc_insertion_point(field_release:flyteidl.admin.ProjectAttributesUpdateRequest.attributes)
  
  ::flyteidl::admin::ProjectAttributes* temp = attributes_;
  attributes_ = nullptr;
  return temp;
}
inline ::flyteidl::admin::ProjectAttributes* ProjectAttributesUpdateRequest::mutable_attributes() {
  
  if (attributes_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::admin::ProjectAttributes>(GetArenaNoVirtual());
    attributes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.admin.ProjectAttributesUpdateRequest.attributes)
  return attributes_;
}
inline void ProjectAttributesUpdateRequest::set_allocated_attributes(::flyteidl::admin::ProjectAttributes* attributes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete attributes_;
  }
  if (attributes) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      attributes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, attributes, submessage_arena);
    }
    
  } else {
    
  }
  attributes_ = attributes;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.ProjectAttributesUpdateRequest.attributes)
}

// -------------------------------------------------------------------

// ProjectAttributesUpdateResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace admin
}  // namespace flyteidl

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_flyteidl_2fadmin_2fproject_5fattributes_2eproto
