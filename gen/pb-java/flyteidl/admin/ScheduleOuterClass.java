// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/schedule.proto

package flyteidl.admin;

public final class ScheduleOuterClass {
  private ScheduleOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Represents a frequency at which to run a schedule.
   * </pre>
   *
   * Protobuf enum {@code flyteidl.admin.FixedRateUnit}
   */
  public enum FixedRateUnit
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MINUTE = 0;</code>
     */
    MINUTE(0),
    /**
     * <code>HOUR = 1;</code>
     */
    HOUR(1),
    /**
     * <code>DAY = 2;</code>
     */
    DAY(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>MINUTE = 0;</code>
     */
    public static final int MINUTE_VALUE = 0;
    /**
     * <code>HOUR = 1;</code>
     */
    public static final int HOUR_VALUE = 1;
    /**
     * <code>DAY = 2;</code>
     */
    public static final int DAY_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FixedRateUnit valueOf(int value) {
      return forNumber(value);
    }

    public static FixedRateUnit forNumber(int value) {
      switch (value) {
        case 0: return MINUTE;
        case 1: return HOUR;
        case 2: return DAY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FixedRateUnit>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FixedRateUnit> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FixedRateUnit>() {
            public FixedRateUnit findValueByNumber(int number) {
              return FixedRateUnit.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return flyteidl.admin.ScheduleOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final FixedRateUnit[] VALUES = values();

    public static FixedRateUnit valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FixedRateUnit(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:flyteidl.admin.FixedRateUnit)
  }

  public interface FixedRateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.admin.FixedRate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 value = 1;</code>
     */
    int getValue();

    /**
     * <code>.flyteidl.admin.FixedRateUnit unit = 2;</code>
     */
    int getUnitValue();
    /**
     * <code>.flyteidl.admin.FixedRateUnit unit = 2;</code>
     */
    flyteidl.admin.ScheduleOuterClass.FixedRateUnit getUnit();
  }
  /**
   * <pre>
   * Option for schedules run at a certain frequency, e.g. every 2 minutes.
   * </pre>
   *
   * Protobuf type {@code flyteidl.admin.FixedRate}
   */
  public  static final class FixedRate extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.admin.FixedRate)
      FixedRateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FixedRate.newBuilder() to construct.
    private FixedRate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FixedRate() {
      unit_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FixedRate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              value_ = input.readUInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              unit_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.admin.ScheduleOuterClass.internal_static_flyteidl_admin_FixedRate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.admin.ScheduleOuterClass.internal_static_flyteidl_admin_FixedRate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.admin.ScheduleOuterClass.FixedRate.class, flyteidl.admin.ScheduleOuterClass.FixedRate.Builder.class);
    }

    public static final int VALUE_FIELD_NUMBER = 1;
    private int value_;
    /**
     * <code>uint32 value = 1;</code>
     */
    public int getValue() {
      return value_;
    }

    public static final int UNIT_FIELD_NUMBER = 2;
    private int unit_;
    /**
     * <code>.flyteidl.admin.FixedRateUnit unit = 2;</code>
     */
    public int getUnitValue() {
      return unit_;
    }
    /**
     * <code>.flyteidl.admin.FixedRateUnit unit = 2;</code>
     */
    public flyteidl.admin.ScheduleOuterClass.FixedRateUnit getUnit() {
      @SuppressWarnings("deprecation")
      flyteidl.admin.ScheduleOuterClass.FixedRateUnit result = flyteidl.admin.ScheduleOuterClass.FixedRateUnit.valueOf(unit_);
      return result == null ? flyteidl.admin.ScheduleOuterClass.FixedRateUnit.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (value_ != 0) {
        output.writeUInt32(1, value_);
      }
      if (unit_ != flyteidl.admin.ScheduleOuterClass.FixedRateUnit.MINUTE.getNumber()) {
        output.writeEnum(2, unit_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (value_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, value_);
      }
      if (unit_ != flyteidl.admin.ScheduleOuterClass.FixedRateUnit.MINUTE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, unit_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.admin.ScheduleOuterClass.FixedRate)) {
        return super.equals(obj);
      }
      flyteidl.admin.ScheduleOuterClass.FixedRate other = (flyteidl.admin.ScheduleOuterClass.FixedRate) obj;

      if (getValue()
          != other.getValue()) return false;
      if (unit_ != other.unit_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue();
      hash = (37 * hash) + UNIT_FIELD_NUMBER;
      hash = (53 * hash) + unit_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.admin.ScheduleOuterClass.FixedRate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.admin.ScheduleOuterClass.FixedRate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.admin.ScheduleOuterClass.FixedRate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.admin.ScheduleOuterClass.FixedRate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.admin.ScheduleOuterClass.FixedRate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.admin.ScheduleOuterClass.FixedRate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.admin.ScheduleOuterClass.FixedRate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.admin.ScheduleOuterClass.FixedRate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.admin.ScheduleOuterClass.FixedRate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.admin.ScheduleOuterClass.FixedRate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.admin.ScheduleOuterClass.FixedRate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.admin.ScheduleOuterClass.FixedRate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.admin.ScheduleOuterClass.FixedRate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Option for schedules run at a certain frequency, e.g. every 2 minutes.
     * </pre>
     *
     * Protobuf type {@code flyteidl.admin.FixedRate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.admin.FixedRate)
        flyteidl.admin.ScheduleOuterClass.FixedRateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.admin.ScheduleOuterClass.internal_static_flyteidl_admin_FixedRate_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.admin.ScheduleOuterClass.internal_static_flyteidl_admin_FixedRate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.admin.ScheduleOuterClass.FixedRate.class, flyteidl.admin.ScheduleOuterClass.FixedRate.Builder.class);
      }

      // Construct using flyteidl.admin.ScheduleOuterClass.FixedRate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        value_ = 0;

        unit_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.admin.ScheduleOuterClass.internal_static_flyteidl_admin_FixedRate_descriptor;
      }

      @java.lang.Override
      public flyteidl.admin.ScheduleOuterClass.FixedRate getDefaultInstanceForType() {
        return flyteidl.admin.ScheduleOuterClass.FixedRate.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.admin.ScheduleOuterClass.FixedRate build() {
        flyteidl.admin.ScheduleOuterClass.FixedRate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.admin.ScheduleOuterClass.FixedRate buildPartial() {
        flyteidl.admin.ScheduleOuterClass.FixedRate result = new flyteidl.admin.ScheduleOuterClass.FixedRate(this);
        result.value_ = value_;
        result.unit_ = unit_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.admin.ScheduleOuterClass.FixedRate) {
          return mergeFrom((flyteidl.admin.ScheduleOuterClass.FixedRate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.admin.ScheduleOuterClass.FixedRate other) {
        if (other == flyteidl.admin.ScheduleOuterClass.FixedRate.getDefaultInstance()) return this;
        if (other.getValue() != 0) {
          setValue(other.getValue());
        }
        if (other.unit_ != 0) {
          setUnitValue(other.getUnitValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.admin.ScheduleOuterClass.FixedRate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.admin.ScheduleOuterClass.FixedRate) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int value_ ;
      /**
       * <code>uint32 value = 1;</code>
       */
      public int getValue() {
        return value_;
      }
      /**
       * <code>uint32 value = 1;</code>
       */
      public Builder setValue(int value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 value = 1;</code>
       */
      public Builder clearValue() {
        
        value_ = 0;
        onChanged();
        return this;
      }

      private int unit_ = 0;
      /**
       * <code>.flyteidl.admin.FixedRateUnit unit = 2;</code>
       */
      public int getUnitValue() {
        return unit_;
      }
      /**
       * <code>.flyteidl.admin.FixedRateUnit unit = 2;</code>
       */
      public Builder setUnitValue(int value) {
        unit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.flyteidl.admin.FixedRateUnit unit = 2;</code>
       */
      public flyteidl.admin.ScheduleOuterClass.FixedRateUnit getUnit() {
        @SuppressWarnings("deprecation")
        flyteidl.admin.ScheduleOuterClass.FixedRateUnit result = flyteidl.admin.ScheduleOuterClass.FixedRateUnit.valueOf(unit_);
        return result == null ? flyteidl.admin.ScheduleOuterClass.FixedRateUnit.UNRECOGNIZED : result;
      }
      /**
       * <code>.flyteidl.admin.FixedRateUnit unit = 2;</code>
       */
      public Builder setUnit(flyteidl.admin.ScheduleOuterClass.FixedRateUnit value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        unit_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.flyteidl.admin.FixedRateUnit unit = 2;</code>
       */
      public Builder clearUnit() {
        
        unit_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.admin.FixedRate)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.admin.FixedRate)
    private static final flyteidl.admin.ScheduleOuterClass.FixedRate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.admin.ScheduleOuterClass.FixedRate();
    }

    public static flyteidl.admin.ScheduleOuterClass.FixedRate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FixedRate>
        PARSER = new com.google.protobuf.AbstractParser<FixedRate>() {
      @java.lang.Override
      public FixedRate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FixedRate(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FixedRate> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FixedRate> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.admin.ScheduleOuterClass.FixedRate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ScheduleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:flyteidl.admin.Schedule)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Uses AWS syntax: "Minutes Hours Day-of-month Month Day-of-week Year"
     * e.g. for a schedule that runs every 15 minutes: "0/15 * * * ? *"
     * </pre>
     *
     * <code>string cron_expression = 1;</code>
     */
    java.lang.String getCronExpression();
    /**
     * <pre>
     * Uses AWS syntax: "Minutes Hours Day-of-month Month Day-of-week Year"
     * e.g. for a schedule that runs every 15 minutes: "0/15 * * * ? *"
     * </pre>
     *
     * <code>string cron_expression = 1;</code>
     */
    com.google.protobuf.ByteString
        getCronExpressionBytes();

    /**
     * <code>.flyteidl.admin.FixedRate rate = 2;</code>
     */
    boolean hasRate();
    /**
     * <code>.flyteidl.admin.FixedRate rate = 2;</code>
     */
    flyteidl.admin.ScheduleOuterClass.FixedRate getRate();
    /**
     * <code>.flyteidl.admin.FixedRate rate = 2;</code>
     */
    flyteidl.admin.ScheduleOuterClass.FixedRateOrBuilder getRateOrBuilder();

    /**
     * <pre>
     * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
     * </pre>
     *
     * <code>string kickoff_time_input_arg = 3;</code>
     */
    java.lang.String getKickoffTimeInputArg();
    /**
     * <pre>
     * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
     * </pre>
     *
     * <code>string kickoff_time_input_arg = 3;</code>
     */
    com.google.protobuf.ByteString
        getKickoffTimeInputArgBytes();

    public flyteidl.admin.ScheduleOuterClass.Schedule.ScheduleExpressionCase getScheduleExpressionCase();
  }
  /**
   * <pre>
   * Defines complete set of information required to trigger an execution on a schedule.
   * </pre>
   *
   * Protobuf type {@code flyteidl.admin.Schedule}
   */
  public  static final class Schedule extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:flyteidl.admin.Schedule)
      ScheduleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Schedule.newBuilder() to construct.
    private Schedule(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Schedule() {
      kickoffTimeInputArg_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Schedule(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              scheduleExpressionCase_ = 1;
              scheduleExpression_ = s;
              break;
            }
            case 18: {
              flyteidl.admin.ScheduleOuterClass.FixedRate.Builder subBuilder = null;
              if (scheduleExpressionCase_ == 2) {
                subBuilder = ((flyteidl.admin.ScheduleOuterClass.FixedRate) scheduleExpression_).toBuilder();
              }
              scheduleExpression_ =
                  input.readMessage(flyteidl.admin.ScheduleOuterClass.FixedRate.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((flyteidl.admin.ScheduleOuterClass.FixedRate) scheduleExpression_);
                scheduleExpression_ = subBuilder.buildPartial();
              }
              scheduleExpressionCase_ = 2;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              kickoffTimeInputArg_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return flyteidl.admin.ScheduleOuterClass.internal_static_flyteidl_admin_Schedule_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return flyteidl.admin.ScheduleOuterClass.internal_static_flyteidl_admin_Schedule_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              flyteidl.admin.ScheduleOuterClass.Schedule.class, flyteidl.admin.ScheduleOuterClass.Schedule.Builder.class);
    }

    private int scheduleExpressionCase_ = 0;
    private java.lang.Object scheduleExpression_;
    public enum ScheduleExpressionCase
        implements com.google.protobuf.Internal.EnumLite {
      CRON_EXPRESSION(1),
      RATE(2),
      SCHEDULEEXPRESSION_NOT_SET(0);
      private final int value;
      private ScheduleExpressionCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ScheduleExpressionCase valueOf(int value) {
        return forNumber(value);
      }

      public static ScheduleExpressionCase forNumber(int value) {
        switch (value) {
          case 1: return CRON_EXPRESSION;
          case 2: return RATE;
          case 0: return SCHEDULEEXPRESSION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ScheduleExpressionCase
    getScheduleExpressionCase() {
      return ScheduleExpressionCase.forNumber(
          scheduleExpressionCase_);
    }

    public static final int CRON_EXPRESSION_FIELD_NUMBER = 1;
    /**
     * <pre>
     * Uses AWS syntax: "Minutes Hours Day-of-month Month Day-of-week Year"
     * e.g. for a schedule that runs every 15 minutes: "0/15 * * * ? *"
     * </pre>
     *
     * <code>string cron_expression = 1;</code>
     */
    public java.lang.String getCronExpression() {
      java.lang.Object ref = "";
      if (scheduleExpressionCase_ == 1) {
        ref = scheduleExpression_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (scheduleExpressionCase_ == 1) {
          scheduleExpression_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Uses AWS syntax: "Minutes Hours Day-of-month Month Day-of-week Year"
     * e.g. for a schedule that runs every 15 minutes: "0/15 * * * ? *"
     * </pre>
     *
     * <code>string cron_expression = 1;</code>
     */
    public com.google.protobuf.ByteString
        getCronExpressionBytes() {
      java.lang.Object ref = "";
      if (scheduleExpressionCase_ == 1) {
        ref = scheduleExpression_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (scheduleExpressionCase_ == 1) {
          scheduleExpression_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RATE_FIELD_NUMBER = 2;
    /**
     * <code>.flyteidl.admin.FixedRate rate = 2;</code>
     */
    public boolean hasRate() {
      return scheduleExpressionCase_ == 2;
    }
    /**
     * <code>.flyteidl.admin.FixedRate rate = 2;</code>
     */
    public flyteidl.admin.ScheduleOuterClass.FixedRate getRate() {
      if (scheduleExpressionCase_ == 2) {
         return (flyteidl.admin.ScheduleOuterClass.FixedRate) scheduleExpression_;
      }
      return flyteidl.admin.ScheduleOuterClass.FixedRate.getDefaultInstance();
    }
    /**
     * <code>.flyteidl.admin.FixedRate rate = 2;</code>
     */
    public flyteidl.admin.ScheduleOuterClass.FixedRateOrBuilder getRateOrBuilder() {
      if (scheduleExpressionCase_ == 2) {
         return (flyteidl.admin.ScheduleOuterClass.FixedRate) scheduleExpression_;
      }
      return flyteidl.admin.ScheduleOuterClass.FixedRate.getDefaultInstance();
    }

    public static final int KICKOFF_TIME_INPUT_ARG_FIELD_NUMBER = 3;
    private volatile java.lang.Object kickoffTimeInputArg_;
    /**
     * <pre>
     * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
     * </pre>
     *
     * <code>string kickoff_time_input_arg = 3;</code>
     */
    public java.lang.String getKickoffTimeInputArg() {
      java.lang.Object ref = kickoffTimeInputArg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        kickoffTimeInputArg_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
     * </pre>
     *
     * <code>string kickoff_time_input_arg = 3;</code>
     */
    public com.google.protobuf.ByteString
        getKickoffTimeInputArgBytes() {
      java.lang.Object ref = kickoffTimeInputArg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        kickoffTimeInputArg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (scheduleExpressionCase_ == 1) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, scheduleExpression_);
      }
      if (scheduleExpressionCase_ == 2) {
        output.writeMessage(2, (flyteidl.admin.ScheduleOuterClass.FixedRate) scheduleExpression_);
      }
      if (!getKickoffTimeInputArgBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, kickoffTimeInputArg_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (scheduleExpressionCase_ == 1) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, scheduleExpression_);
      }
      if (scheduleExpressionCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (flyteidl.admin.ScheduleOuterClass.FixedRate) scheduleExpression_);
      }
      if (!getKickoffTimeInputArgBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, kickoffTimeInputArg_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof flyteidl.admin.ScheduleOuterClass.Schedule)) {
        return super.equals(obj);
      }
      flyteidl.admin.ScheduleOuterClass.Schedule other = (flyteidl.admin.ScheduleOuterClass.Schedule) obj;

      if (!getKickoffTimeInputArg()
          .equals(other.getKickoffTimeInputArg())) return false;
      if (!getScheduleExpressionCase().equals(other.getScheduleExpressionCase())) return false;
      switch (scheduleExpressionCase_) {
        case 1:
          if (!getCronExpression()
              .equals(other.getCronExpression())) return false;
          break;
        case 2:
          if (!getRate()
              .equals(other.getRate())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KICKOFF_TIME_INPUT_ARG_FIELD_NUMBER;
      hash = (53 * hash) + getKickoffTimeInputArg().hashCode();
      switch (scheduleExpressionCase_) {
        case 1:
          hash = (37 * hash) + CRON_EXPRESSION_FIELD_NUMBER;
          hash = (53 * hash) + getCronExpression().hashCode();
          break;
        case 2:
          hash = (37 * hash) + RATE_FIELD_NUMBER;
          hash = (53 * hash) + getRate().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static flyteidl.admin.ScheduleOuterClass.Schedule parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.admin.ScheduleOuterClass.Schedule parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.admin.ScheduleOuterClass.Schedule parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.admin.ScheduleOuterClass.Schedule parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.admin.ScheduleOuterClass.Schedule parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static flyteidl.admin.ScheduleOuterClass.Schedule parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static flyteidl.admin.ScheduleOuterClass.Schedule parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.admin.ScheduleOuterClass.Schedule parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.admin.ScheduleOuterClass.Schedule parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static flyteidl.admin.ScheduleOuterClass.Schedule parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static flyteidl.admin.ScheduleOuterClass.Schedule parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static flyteidl.admin.ScheduleOuterClass.Schedule parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(flyteidl.admin.ScheduleOuterClass.Schedule prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Defines complete set of information required to trigger an execution on a schedule.
     * </pre>
     *
     * Protobuf type {@code flyteidl.admin.Schedule}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:flyteidl.admin.Schedule)
        flyteidl.admin.ScheduleOuterClass.ScheduleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return flyteidl.admin.ScheduleOuterClass.internal_static_flyteidl_admin_Schedule_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return flyteidl.admin.ScheduleOuterClass.internal_static_flyteidl_admin_Schedule_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                flyteidl.admin.ScheduleOuterClass.Schedule.class, flyteidl.admin.ScheduleOuterClass.Schedule.Builder.class);
      }

      // Construct using flyteidl.admin.ScheduleOuterClass.Schedule.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        kickoffTimeInputArg_ = "";

        scheduleExpressionCase_ = 0;
        scheduleExpression_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return flyteidl.admin.ScheduleOuterClass.internal_static_flyteidl_admin_Schedule_descriptor;
      }

      @java.lang.Override
      public flyteidl.admin.ScheduleOuterClass.Schedule getDefaultInstanceForType() {
        return flyteidl.admin.ScheduleOuterClass.Schedule.getDefaultInstance();
      }

      @java.lang.Override
      public flyteidl.admin.ScheduleOuterClass.Schedule build() {
        flyteidl.admin.ScheduleOuterClass.Schedule result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public flyteidl.admin.ScheduleOuterClass.Schedule buildPartial() {
        flyteidl.admin.ScheduleOuterClass.Schedule result = new flyteidl.admin.ScheduleOuterClass.Schedule(this);
        if (scheduleExpressionCase_ == 1) {
          result.scheduleExpression_ = scheduleExpression_;
        }
        if (scheduleExpressionCase_ == 2) {
          if (rateBuilder_ == null) {
            result.scheduleExpression_ = scheduleExpression_;
          } else {
            result.scheduleExpression_ = rateBuilder_.build();
          }
        }
        result.kickoffTimeInputArg_ = kickoffTimeInputArg_;
        result.scheduleExpressionCase_ = scheduleExpressionCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof flyteidl.admin.ScheduleOuterClass.Schedule) {
          return mergeFrom((flyteidl.admin.ScheduleOuterClass.Schedule)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(flyteidl.admin.ScheduleOuterClass.Schedule other) {
        if (other == flyteidl.admin.ScheduleOuterClass.Schedule.getDefaultInstance()) return this;
        if (!other.getKickoffTimeInputArg().isEmpty()) {
          kickoffTimeInputArg_ = other.kickoffTimeInputArg_;
          onChanged();
        }
        switch (other.getScheduleExpressionCase()) {
          case CRON_EXPRESSION: {
            scheduleExpressionCase_ = 1;
            scheduleExpression_ = other.scheduleExpression_;
            onChanged();
            break;
          }
          case RATE: {
            mergeRate(other.getRate());
            break;
          }
          case SCHEDULEEXPRESSION_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        flyteidl.admin.ScheduleOuterClass.Schedule parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (flyteidl.admin.ScheduleOuterClass.Schedule) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int scheduleExpressionCase_ = 0;
      private java.lang.Object scheduleExpression_;
      public ScheduleExpressionCase
          getScheduleExpressionCase() {
        return ScheduleExpressionCase.forNumber(
            scheduleExpressionCase_);
      }

      public Builder clearScheduleExpression() {
        scheduleExpressionCase_ = 0;
        scheduleExpression_ = null;
        onChanged();
        return this;
      }


      /**
       * <pre>
       * Uses AWS syntax: "Minutes Hours Day-of-month Month Day-of-week Year"
       * e.g. for a schedule that runs every 15 minutes: "0/15 * * * ? *"
       * </pre>
       *
       * <code>string cron_expression = 1;</code>
       */
      public java.lang.String getCronExpression() {
        java.lang.Object ref = "";
        if (scheduleExpressionCase_ == 1) {
          ref = scheduleExpression_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (scheduleExpressionCase_ == 1) {
            scheduleExpression_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Uses AWS syntax: "Minutes Hours Day-of-month Month Day-of-week Year"
       * e.g. for a schedule that runs every 15 minutes: "0/15 * * * ? *"
       * </pre>
       *
       * <code>string cron_expression = 1;</code>
       */
      public com.google.protobuf.ByteString
          getCronExpressionBytes() {
        java.lang.Object ref = "";
        if (scheduleExpressionCase_ == 1) {
          ref = scheduleExpression_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (scheduleExpressionCase_ == 1) {
            scheduleExpression_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Uses AWS syntax: "Minutes Hours Day-of-month Month Day-of-week Year"
       * e.g. for a schedule that runs every 15 minutes: "0/15 * * * ? *"
       * </pre>
       *
       * <code>string cron_expression = 1;</code>
       */
      public Builder setCronExpression(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  scheduleExpressionCase_ = 1;
        scheduleExpression_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Uses AWS syntax: "Minutes Hours Day-of-month Month Day-of-week Year"
       * e.g. for a schedule that runs every 15 minutes: "0/15 * * * ? *"
       * </pre>
       *
       * <code>string cron_expression = 1;</code>
       */
      public Builder clearCronExpression() {
        if (scheduleExpressionCase_ == 1) {
          scheduleExpressionCase_ = 0;
          scheduleExpression_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Uses AWS syntax: "Minutes Hours Day-of-month Month Day-of-week Year"
       * e.g. for a schedule that runs every 15 minutes: "0/15 * * * ? *"
       * </pre>
       *
       * <code>string cron_expression = 1;</code>
       */
      public Builder setCronExpressionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        scheduleExpressionCase_ = 1;
        scheduleExpression_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.admin.ScheduleOuterClass.FixedRate, flyteidl.admin.ScheduleOuterClass.FixedRate.Builder, flyteidl.admin.ScheduleOuterClass.FixedRateOrBuilder> rateBuilder_;
      /**
       * <code>.flyteidl.admin.FixedRate rate = 2;</code>
       */
      public boolean hasRate() {
        return scheduleExpressionCase_ == 2;
      }
      /**
       * <code>.flyteidl.admin.FixedRate rate = 2;</code>
       */
      public flyteidl.admin.ScheduleOuterClass.FixedRate getRate() {
        if (rateBuilder_ == null) {
          if (scheduleExpressionCase_ == 2) {
            return (flyteidl.admin.ScheduleOuterClass.FixedRate) scheduleExpression_;
          }
          return flyteidl.admin.ScheduleOuterClass.FixedRate.getDefaultInstance();
        } else {
          if (scheduleExpressionCase_ == 2) {
            return rateBuilder_.getMessage();
          }
          return flyteidl.admin.ScheduleOuterClass.FixedRate.getDefaultInstance();
        }
      }
      /**
       * <code>.flyteidl.admin.FixedRate rate = 2;</code>
       */
      public Builder setRate(flyteidl.admin.ScheduleOuterClass.FixedRate value) {
        if (rateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          scheduleExpression_ = value;
          onChanged();
        } else {
          rateBuilder_.setMessage(value);
        }
        scheduleExpressionCase_ = 2;
        return this;
      }
      /**
       * <code>.flyteidl.admin.FixedRate rate = 2;</code>
       */
      public Builder setRate(
          flyteidl.admin.ScheduleOuterClass.FixedRate.Builder builderForValue) {
        if (rateBuilder_ == null) {
          scheduleExpression_ = builderForValue.build();
          onChanged();
        } else {
          rateBuilder_.setMessage(builderForValue.build());
        }
        scheduleExpressionCase_ = 2;
        return this;
      }
      /**
       * <code>.flyteidl.admin.FixedRate rate = 2;</code>
       */
      public Builder mergeRate(flyteidl.admin.ScheduleOuterClass.FixedRate value) {
        if (rateBuilder_ == null) {
          if (scheduleExpressionCase_ == 2 &&
              scheduleExpression_ != flyteidl.admin.ScheduleOuterClass.FixedRate.getDefaultInstance()) {
            scheduleExpression_ = flyteidl.admin.ScheduleOuterClass.FixedRate.newBuilder((flyteidl.admin.ScheduleOuterClass.FixedRate) scheduleExpression_)
                .mergeFrom(value).buildPartial();
          } else {
            scheduleExpression_ = value;
          }
          onChanged();
        } else {
          if (scheduleExpressionCase_ == 2) {
            rateBuilder_.mergeFrom(value);
          }
          rateBuilder_.setMessage(value);
        }
        scheduleExpressionCase_ = 2;
        return this;
      }
      /**
       * <code>.flyteidl.admin.FixedRate rate = 2;</code>
       */
      public Builder clearRate() {
        if (rateBuilder_ == null) {
          if (scheduleExpressionCase_ == 2) {
            scheduleExpressionCase_ = 0;
            scheduleExpression_ = null;
            onChanged();
          }
        } else {
          if (scheduleExpressionCase_ == 2) {
            scheduleExpressionCase_ = 0;
            scheduleExpression_ = null;
          }
          rateBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.flyteidl.admin.FixedRate rate = 2;</code>
       */
      public flyteidl.admin.ScheduleOuterClass.FixedRate.Builder getRateBuilder() {
        return getRateFieldBuilder().getBuilder();
      }
      /**
       * <code>.flyteidl.admin.FixedRate rate = 2;</code>
       */
      public flyteidl.admin.ScheduleOuterClass.FixedRateOrBuilder getRateOrBuilder() {
        if ((scheduleExpressionCase_ == 2) && (rateBuilder_ != null)) {
          return rateBuilder_.getMessageOrBuilder();
        } else {
          if (scheduleExpressionCase_ == 2) {
            return (flyteidl.admin.ScheduleOuterClass.FixedRate) scheduleExpression_;
          }
          return flyteidl.admin.ScheduleOuterClass.FixedRate.getDefaultInstance();
        }
      }
      /**
       * <code>.flyteidl.admin.FixedRate rate = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          flyteidl.admin.ScheduleOuterClass.FixedRate, flyteidl.admin.ScheduleOuterClass.FixedRate.Builder, flyteidl.admin.ScheduleOuterClass.FixedRateOrBuilder> 
          getRateFieldBuilder() {
        if (rateBuilder_ == null) {
          if (!(scheduleExpressionCase_ == 2)) {
            scheduleExpression_ = flyteidl.admin.ScheduleOuterClass.FixedRate.getDefaultInstance();
          }
          rateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              flyteidl.admin.ScheduleOuterClass.FixedRate, flyteidl.admin.ScheduleOuterClass.FixedRate.Builder, flyteidl.admin.ScheduleOuterClass.FixedRateOrBuilder>(
                  (flyteidl.admin.ScheduleOuterClass.FixedRate) scheduleExpression_,
                  getParentForChildren(),
                  isClean());
          scheduleExpression_ = null;
        }
        scheduleExpressionCase_ = 2;
        onChanged();;
        return rateBuilder_;
      }

      private java.lang.Object kickoffTimeInputArg_ = "";
      /**
       * <pre>
       * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
       * </pre>
       *
       * <code>string kickoff_time_input_arg = 3;</code>
       */
      public java.lang.String getKickoffTimeInputArg() {
        java.lang.Object ref = kickoffTimeInputArg_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          kickoffTimeInputArg_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
       * </pre>
       *
       * <code>string kickoff_time_input_arg = 3;</code>
       */
      public com.google.protobuf.ByteString
          getKickoffTimeInputArgBytes() {
        java.lang.Object ref = kickoffTimeInputArg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          kickoffTimeInputArg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
       * </pre>
       *
       * <code>string kickoff_time_input_arg = 3;</code>
       */
      public Builder setKickoffTimeInputArg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        kickoffTimeInputArg_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
       * </pre>
       *
       * <code>string kickoff_time_input_arg = 3;</code>
       */
      public Builder clearKickoffTimeInputArg() {
        
        kickoffTimeInputArg_ = getDefaultInstance().getKickoffTimeInputArg();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the input variable that the kickoff time will be supplied to when the workflow is kicked off.
       * </pre>
       *
       * <code>string kickoff_time_input_arg = 3;</code>
       */
      public Builder setKickoffTimeInputArgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        kickoffTimeInputArg_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:flyteidl.admin.Schedule)
    }

    // @@protoc_insertion_point(class_scope:flyteidl.admin.Schedule)
    private static final flyteidl.admin.ScheduleOuterClass.Schedule DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new flyteidl.admin.ScheduleOuterClass.Schedule();
    }

    public static flyteidl.admin.ScheduleOuterClass.Schedule getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Schedule>
        PARSER = new com.google.protobuf.AbstractParser<Schedule>() {
      @java.lang.Override
      public Schedule parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Schedule(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Schedule> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Schedule> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public flyteidl.admin.ScheduleOuterClass.Schedule getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_admin_FixedRate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_admin_FixedRate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_flyteidl_admin_Schedule_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_flyteidl_admin_Schedule_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035flyteidl/admin/schedule.proto\022\016flyteid" +
      "l.admin\"G\n\tFixedRate\022\r\n\005value\030\001 \001(\r\022+\n\004u" +
      "nit\030\002 \001(\0162\035.flyteidl.admin.FixedRateUnit" +
      "\"\206\001\n\010Schedule\022\031\n\017cron_expression\030\001 \001(\tH\000" +
      "\022)\n\004rate\030\002 \001(\0132\031.flyteidl.admin.FixedRat" +
      "eH\000\022\036\n\026kickoff_time_input_arg\030\003 \001(\tB\024\n\022S" +
      "cheduleExpression*.\n\rFixedRateUnit\022\n\n\006MI" +
      "NUTE\020\000\022\010\n\004HOUR\020\001\022\007\n\003DAY\020\002B3Z1github.com/" +
      "lyft/flyteidl/gen/pb-go/flyteidl/adminb\006" +
      "proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_flyteidl_admin_FixedRate_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_flyteidl_admin_FixedRate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_admin_FixedRate_descriptor,
        new java.lang.String[] { "Value", "Unit", });
    internal_static_flyteidl_admin_Schedule_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_flyteidl_admin_Schedule_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_flyteidl_admin_Schedule_descriptor,
        new java.lang.String[] { "CronExpression", "Rate", "KickoffTimeInputArg", "ScheduleExpression", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
