// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/plugins/sagemaker/hpojob.proto

#ifndef PROTOBUF_INCLUDED_flyteidl_2fplugins_2fsagemaker_2fhpojob_2eproto
#define PROTOBUF_INCLUDED_flyteidl_2fplugins_2fsagemaker_2fhpojob_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "flyteidl/plugins/sagemaker/parameterranges.pb.h"
#include "flyteidl/plugins/sagemaker/trainingjob.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_flyteidl_2fplugins_2fsagemaker_2fhpojob_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_flyteidl_2fplugins_2fsagemaker_2fhpojob_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_flyteidl_2fplugins_2fsagemaker_2fhpojob_2eproto();
namespace flyteidl {
namespace plugins {
namespace sagemaker {
class HPOJob;
class HPOJobDefaultTypeInternal;
extern HPOJobDefaultTypeInternal _HPOJob_default_instance_;
class HPOJobObjective;
class HPOJobObjectiveDefaultTypeInternal;
extern HPOJobObjectiveDefaultTypeInternal _HPOJobObjective_default_instance_;
}  // namespace sagemaker
}  // namespace plugins
}  // namespace flyteidl
namespace google {
namespace protobuf {
template<> ::flyteidl::plugins::sagemaker::HPOJob* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::HPOJob>(Arena*);
template<> ::flyteidl::plugins::sagemaker::HPOJobObjective* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::HPOJobObjective>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace flyteidl {
namespace plugins {
namespace sagemaker {

enum HPOJobObjective_HPOJobObjectiveType {
  HPOJobObjective_HPOJobObjectiveType_MINIMIZE = 0,
  HPOJobObjective_HPOJobObjectiveType_MAXIMIZE = 1,
  HPOJobObjective_HPOJobObjectiveType_HPOJobObjective_HPOJobObjectiveType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  HPOJobObjective_HPOJobObjectiveType_HPOJobObjective_HPOJobObjectiveType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool HPOJobObjective_HPOJobObjectiveType_IsValid(int value);
const HPOJobObjective_HPOJobObjectiveType HPOJobObjective_HPOJobObjectiveType_HPOJobObjectiveType_MIN = HPOJobObjective_HPOJobObjectiveType_MINIMIZE;
const HPOJobObjective_HPOJobObjectiveType HPOJobObjective_HPOJobObjectiveType_HPOJobObjectiveType_MAX = HPOJobObjective_HPOJobObjectiveType_MAXIMIZE;
const int HPOJobObjective_HPOJobObjectiveType_HPOJobObjectiveType_ARRAYSIZE = HPOJobObjective_HPOJobObjectiveType_HPOJobObjectiveType_MAX + 1;

const ::google::protobuf::EnumDescriptor* HPOJobObjective_HPOJobObjectiveType_descriptor();
inline const ::std::string& HPOJobObjective_HPOJobObjectiveType_Name(HPOJobObjective_HPOJobObjectiveType value) {
  return ::google::protobuf::internal::NameOfEnum(
    HPOJobObjective_HPOJobObjectiveType_descriptor(), value);
}
inline bool HPOJobObjective_HPOJobObjectiveType_Parse(
    const ::std::string& name, HPOJobObjective_HPOJobObjectiveType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HPOJobObjective_HPOJobObjectiveType>(
    HPOJobObjective_HPOJobObjectiveType_descriptor(), name, value);
}
// ===================================================================

class HPOJobObjective final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.HPOJobObjective) */ {
 public:
  HPOJobObjective();
  virtual ~HPOJobObjective();

  HPOJobObjective(const HPOJobObjective& from);

  inline HPOJobObjective& operator=(const HPOJobObjective& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HPOJobObjective(HPOJobObjective&& from) noexcept
    : HPOJobObjective() {
    *this = ::std::move(from);
  }

  inline HPOJobObjective& operator=(HPOJobObjective&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HPOJobObjective& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HPOJobObjective* internal_default_instance() {
    return reinterpret_cast<const HPOJobObjective*>(
               &_HPOJobObjective_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(HPOJobObjective* other);
  friend void swap(HPOJobObjective& a, HPOJobObjective& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HPOJobObjective* New() const final {
    return CreateMaybeMessage<HPOJobObjective>(nullptr);
  }

  HPOJobObjective* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HPOJobObjective>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HPOJobObjective& from);
  void MergeFrom(const HPOJobObjective& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HPOJobObjective* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef HPOJobObjective_HPOJobObjectiveType HPOJobObjectiveType;
  static const HPOJobObjectiveType MINIMIZE =
    HPOJobObjective_HPOJobObjectiveType_MINIMIZE;
  static const HPOJobObjectiveType MAXIMIZE =
    HPOJobObjective_HPOJobObjectiveType_MAXIMIZE;
  static inline bool HPOJobObjectiveType_IsValid(int value) {
    return HPOJobObjective_HPOJobObjectiveType_IsValid(value);
  }
  static const HPOJobObjectiveType HPOJobObjectiveType_MIN =
    HPOJobObjective_HPOJobObjectiveType_HPOJobObjectiveType_MIN;
  static const HPOJobObjectiveType HPOJobObjectiveType_MAX =
    HPOJobObjective_HPOJobObjectiveType_HPOJobObjectiveType_MAX;
  static const int HPOJobObjectiveType_ARRAYSIZE =
    HPOJobObjective_HPOJobObjectiveType_HPOJobObjectiveType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  HPOJobObjectiveType_descriptor() {
    return HPOJobObjective_HPOJobObjectiveType_descriptor();
  }
  static inline const ::std::string& HPOJobObjectiveType_Name(HPOJobObjectiveType value) {
    return HPOJobObjective_HPOJobObjectiveType_Name(value);
  }
  static inline bool HPOJobObjectiveType_Parse(const ::std::string& name,
      HPOJobObjectiveType* value) {
    return HPOJobObjective_HPOJobObjectiveType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string MetricName = 2;
  void clear_metricname();
  static const int kMetricNameFieldNumber = 2;
  const ::std::string& metricname() const;
  void set_metricname(const ::std::string& value);
  #if LANG_CXX11
  void set_metricname(::std::string&& value);
  #endif
  void set_metricname(const char* value);
  void set_metricname(const char* value, size_t size);
  ::std::string* mutable_metricname();
  ::std::string* release_metricname();
  void set_allocated_metricname(::std::string* metricname);

  // .flyteidl.plugins.sagemaker.HPOJobObjective.HPOJobObjectiveType Type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::flyteidl::plugins::sagemaker::HPOJobObjective_HPOJobObjectiveType type() const;
  void set_type(::flyteidl::plugins::sagemaker::HPOJobObjective_HPOJobObjectiveType value);

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.HPOJobObjective)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr metricname_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2fhpojob_2eproto;
};
// -------------------------------------------------------------------

class HPOJob final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.HPOJob) */ {
 public:
  HPOJob();
  virtual ~HPOJob();

  HPOJob(const HPOJob& from);

  inline HPOJob& operator=(const HPOJob& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HPOJob(HPOJob&& from) noexcept
    : HPOJob() {
    *this = ::std::move(from);
  }

  inline HPOJob& operator=(HPOJob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HPOJob& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HPOJob* internal_default_instance() {
    return reinterpret_cast<const HPOJob*>(
               &_HPOJob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(HPOJob* other);
  friend void swap(HPOJob& a, HPOJob& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HPOJob* New() const final {
    return CreateMaybeMessage<HPOJob>(nullptr);
  }

  HPOJob* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HPOJob>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HPOJob& from);
  void MergeFrom(const HPOJob& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HPOJob* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Strategy = 1;
  void clear_strategy();
  static const int kStrategyFieldNumber = 1;
  const ::std::string& strategy() const;
  void set_strategy(const ::std::string& value);
  #if LANG_CXX11
  void set_strategy(::std::string&& value);
  #endif
  void set_strategy(const char* value);
  void set_strategy(const char* value, size_t size);
  ::std::string* mutable_strategy();
  ::std::string* release_strategy();
  void set_allocated_strategy(::std::string* strategy);

  // .flyteidl.plugins.sagemaker.HPOJobObjective Objective = 2;
  bool has_objective() const;
  void clear_objective();
  static const int kObjectiveFieldNumber = 2;
  const ::flyteidl::plugins::sagemaker::HPOJobObjective& objective() const;
  ::flyteidl::plugins::sagemaker::HPOJobObjective* release_objective();
  ::flyteidl::plugins::sagemaker::HPOJobObjective* mutable_objective();
  void set_allocated_objective(::flyteidl::plugins::sagemaker::HPOJobObjective* objective);

  // .flyteidl.plugins.sagemaker.ParameterRanges ParameterRanges = 5;
  bool has_parameterranges() const;
  void clear_parameterranges();
  static const int kParameterRangesFieldNumber = 5;
  const ::flyteidl::plugins::sagemaker::ParameterRanges& parameterranges() const;
  ::flyteidl::plugins::sagemaker::ParameterRanges* release_parameterranges();
  ::flyteidl::plugins::sagemaker::ParameterRanges* mutable_parameterranges();
  void set_allocated_parameterranges(::flyteidl::plugins::sagemaker::ParameterRanges* parameterranges);

  // .flyteidl.plugins.sagemaker.TrainingJob TrainingJob = 6;
  bool has_trainingjob() const;
  void clear_trainingjob();
  static const int kTrainingJobFieldNumber = 6;
  const ::flyteidl::plugins::sagemaker::TrainingJob& trainingjob() const;
  ::flyteidl::plugins::sagemaker::TrainingJob* release_trainingjob();
  ::flyteidl::plugins::sagemaker::TrainingJob* mutable_trainingjob();
  void set_allocated_trainingjob(::flyteidl::plugins::sagemaker::TrainingJob* trainingjob);

  // int64 MaxNumberOfTrainingJobs = 3;
  void clear_maxnumberoftrainingjobs();
  static const int kMaxNumberOfTrainingJobsFieldNumber = 3;
  ::google::protobuf::int64 maxnumberoftrainingjobs() const;
  void set_maxnumberoftrainingjobs(::google::protobuf::int64 value);

  // int64 MaxParallelTrainingJobs = 4;
  void clear_maxparalleltrainingjobs();
  static const int kMaxParallelTrainingJobsFieldNumber = 4;
  ::google::protobuf::int64 maxparalleltrainingjobs() const;
  void set_maxparalleltrainingjobs(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.HPOJob)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strategy_;
  ::flyteidl::plugins::sagemaker::HPOJobObjective* objective_;
  ::flyteidl::plugins::sagemaker::ParameterRanges* parameterranges_;
  ::flyteidl::plugins::sagemaker::TrainingJob* trainingjob_;
  ::google::protobuf::int64 maxnumberoftrainingjobs_;
  ::google::protobuf::int64 maxparalleltrainingjobs_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2fhpojob_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HPOJobObjective

// .flyteidl.plugins.sagemaker.HPOJobObjective.HPOJobObjectiveType Type = 1;
inline void HPOJobObjective::clear_type() {
  type_ = 0;
}
inline ::flyteidl::plugins::sagemaker::HPOJobObjective_HPOJobObjectiveType HPOJobObjective::type() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HPOJobObjective.Type)
  return static_cast< ::flyteidl::plugins::sagemaker::HPOJobObjective_HPOJobObjectiveType >(type_);
}
inline void HPOJobObjective::set_type(::flyteidl::plugins::sagemaker::HPOJobObjective_HPOJobObjectiveType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.HPOJobObjective.Type)
}

// string MetricName = 2;
inline void HPOJobObjective::clear_metricname() {
  metricname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HPOJobObjective::metricname() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HPOJobObjective.MetricName)
  return metricname_.GetNoArena();
}
inline void HPOJobObjective::set_metricname(const ::std::string& value) {
  
  metricname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.HPOJobObjective.MetricName)
}
#if LANG_CXX11
inline void HPOJobObjective::set_metricname(::std::string&& value) {
  
  metricname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.plugins.sagemaker.HPOJobObjective.MetricName)
}
#endif
inline void HPOJobObjective::set_metricname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  metricname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.plugins.sagemaker.HPOJobObjective.MetricName)
}
inline void HPOJobObjective::set_metricname(const char* value, size_t size) {
  
  metricname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.plugins.sagemaker.HPOJobObjective.MetricName)
}
inline ::std::string* HPOJobObjective::mutable_metricname() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.HPOJobObjective.MetricName)
  return metricname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HPOJobObjective::release_metricname() {
  // @@protoc_insertion_point(field_release:flyteidl.plugins.sagemaker.HPOJobObjective.MetricName)
  
  return metricname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HPOJobObjective::set_allocated_metricname(::std::string* metricname) {
  if (metricname != nullptr) {
    
  } else {
    
  }
  metricname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), metricname);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.plugins.sagemaker.HPOJobObjective.MetricName)
}

// -------------------------------------------------------------------

// HPOJob

// string Strategy = 1;
inline void HPOJob::clear_strategy() {
  strategy_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HPOJob::strategy() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HPOJob.Strategy)
  return strategy_.GetNoArena();
}
inline void HPOJob::set_strategy(const ::std::string& value) {
  
  strategy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.HPOJob.Strategy)
}
#if LANG_CXX11
inline void HPOJob::set_strategy(::std::string&& value) {
  
  strategy_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.plugins.sagemaker.HPOJob.Strategy)
}
#endif
inline void HPOJob::set_strategy(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  strategy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.plugins.sagemaker.HPOJob.Strategy)
}
inline void HPOJob::set_strategy(const char* value, size_t size) {
  
  strategy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.plugins.sagemaker.HPOJob.Strategy)
}
inline ::std::string* HPOJob::mutable_strategy() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.HPOJob.Strategy)
  return strategy_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HPOJob::release_strategy() {
  // @@protoc_insertion_point(field_release:flyteidl.plugins.sagemaker.HPOJob.Strategy)
  
  return strategy_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HPOJob::set_allocated_strategy(::std::string* strategy) {
  if (strategy != nullptr) {
    
  } else {
    
  }
  strategy_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strategy);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.plugins.sagemaker.HPOJob.Strategy)
}

// .flyteidl.plugins.sagemaker.HPOJobObjective Objective = 2;
inline bool HPOJob::has_objective() const {
  return this != internal_default_instance() && objective_ != nullptr;
}
inline void HPOJob::clear_objective() {
  if (GetArenaNoVirtual() == nullptr && objective_ != nullptr) {
    delete objective_;
  }
  objective_ = nullptr;
}
inline const ::flyteidl::plugins::sagemaker::HPOJobObjective& HPOJob::objective() const {
  const ::flyteidl::plugins::sagemaker::HPOJobObjective* p = objective_;
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HPOJob.Objective)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::plugins::sagemaker::HPOJobObjective*>(
      &::flyteidl::plugins::sagemaker::_HPOJobObjective_default_instance_);
}
inline ::flyteidl::plugins::sagemaker::HPOJobObjective* HPOJob::release_objective() {
  // @@protoc_insertion_point(field_release:flyteidl.plugins.sagemaker.HPOJob.Objective)
  
  ::flyteidl::plugins::sagemaker::HPOJobObjective* temp = objective_;
  objective_ = nullptr;
  return temp;
}
inline ::flyteidl::plugins::sagemaker::HPOJobObjective* HPOJob::mutable_objective() {
  
  if (objective_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::plugins::sagemaker::HPOJobObjective>(GetArenaNoVirtual());
    objective_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.HPOJob.Objective)
  return objective_;
}
inline void HPOJob::set_allocated_objective(::flyteidl::plugins::sagemaker::HPOJobObjective* objective) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete objective_;
  }
  if (objective) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      objective = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, objective, submessage_arena);
    }
    
  } else {
    
  }
  objective_ = objective;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.plugins.sagemaker.HPOJob.Objective)
}

// int64 MaxNumberOfTrainingJobs = 3;
inline void HPOJob::clear_maxnumberoftrainingjobs() {
  maxnumberoftrainingjobs_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 HPOJob::maxnumberoftrainingjobs() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HPOJob.MaxNumberOfTrainingJobs)
  return maxnumberoftrainingjobs_;
}
inline void HPOJob::set_maxnumberoftrainingjobs(::google::protobuf::int64 value) {
  
  maxnumberoftrainingjobs_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.HPOJob.MaxNumberOfTrainingJobs)
}

// int64 MaxParallelTrainingJobs = 4;
inline void HPOJob::clear_maxparalleltrainingjobs() {
  maxparalleltrainingjobs_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 HPOJob::maxparalleltrainingjobs() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HPOJob.MaxParallelTrainingJobs)
  return maxparalleltrainingjobs_;
}
inline void HPOJob::set_maxparalleltrainingjobs(::google::protobuf::int64 value) {
  
  maxparalleltrainingjobs_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.HPOJob.MaxParallelTrainingJobs)
}

// .flyteidl.plugins.sagemaker.ParameterRanges ParameterRanges = 5;
inline bool HPOJob::has_parameterranges() const {
  return this != internal_default_instance() && parameterranges_ != nullptr;
}
inline const ::flyteidl::plugins::sagemaker::ParameterRanges& HPOJob::parameterranges() const {
  const ::flyteidl::plugins::sagemaker::ParameterRanges* p = parameterranges_;
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HPOJob.ParameterRanges)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::plugins::sagemaker::ParameterRanges*>(
      &::flyteidl::plugins::sagemaker::_ParameterRanges_default_instance_);
}
inline ::flyteidl::plugins::sagemaker::ParameterRanges* HPOJob::release_parameterranges() {
  // @@protoc_insertion_point(field_release:flyteidl.plugins.sagemaker.HPOJob.ParameterRanges)
  
  ::flyteidl::plugins::sagemaker::ParameterRanges* temp = parameterranges_;
  parameterranges_ = nullptr;
  return temp;
}
inline ::flyteidl::plugins::sagemaker::ParameterRanges* HPOJob::mutable_parameterranges() {
  
  if (parameterranges_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::plugins::sagemaker::ParameterRanges>(GetArenaNoVirtual());
    parameterranges_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.HPOJob.ParameterRanges)
  return parameterranges_;
}
inline void HPOJob::set_allocated_parameterranges(::flyteidl::plugins::sagemaker::ParameterRanges* parameterranges) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(parameterranges_);
  }
  if (parameterranges) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      parameterranges = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, parameterranges, submessage_arena);
    }
    
  } else {
    
  }
  parameterranges_ = parameterranges;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.plugins.sagemaker.HPOJob.ParameterRanges)
}

// .flyteidl.plugins.sagemaker.TrainingJob TrainingJob = 6;
inline bool HPOJob::has_trainingjob() const {
  return this != internal_default_instance() && trainingjob_ != nullptr;
}
inline const ::flyteidl::plugins::sagemaker::TrainingJob& HPOJob::trainingjob() const {
  const ::flyteidl::plugins::sagemaker::TrainingJob* p = trainingjob_;
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.HPOJob.TrainingJob)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::plugins::sagemaker::TrainingJob*>(
      &::flyteidl::plugins::sagemaker::_TrainingJob_default_instance_);
}
inline ::flyteidl::plugins::sagemaker::TrainingJob* HPOJob::release_trainingjob() {
  // @@protoc_insertion_point(field_release:flyteidl.plugins.sagemaker.HPOJob.TrainingJob)
  
  ::flyteidl::plugins::sagemaker::TrainingJob* temp = trainingjob_;
  trainingjob_ = nullptr;
  return temp;
}
inline ::flyteidl::plugins::sagemaker::TrainingJob* HPOJob::mutable_trainingjob() {
  
  if (trainingjob_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::plugins::sagemaker::TrainingJob>(GetArenaNoVirtual());
    trainingjob_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.HPOJob.TrainingJob)
  return trainingjob_;
}
inline void HPOJob::set_allocated_trainingjob(::flyteidl::plugins::sagemaker::TrainingJob* trainingjob) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(trainingjob_);
  }
  if (trainingjob) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      trainingjob = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, trainingjob, submessage_arena);
    }
    
  } else {
    
  }
  trainingjob_ = trainingjob;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.plugins.sagemaker.HPOJob.TrainingJob)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sagemaker
}  // namespace plugins
}  // namespace flyteidl

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::flyteidl::plugins::sagemaker::HPOJobObjective_HPOJobObjectiveType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::flyteidl::plugins::sagemaker::HPOJobObjective_HPOJobObjectiveType>() {
  return ::flyteidl::plugins::sagemaker::HPOJobObjective_HPOJobObjectiveType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_flyteidl_2fplugins_2fsagemaker_2fhpojob_2eproto
