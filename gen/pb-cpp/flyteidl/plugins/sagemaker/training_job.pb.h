// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/plugins/sagemaker/training_job.proto

#ifndef PROTOBUF_INCLUDED_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto
#define PROTOBUF_INCLUDED_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[7]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto();
namespace flyteidl {
namespace plugins {
namespace sagemaker {
class AlgorithmName;
class AlgorithmNameDefaultTypeInternal;
extern AlgorithmNameDefaultTypeInternal _AlgorithmName_default_instance_;
class AlgorithmSpecification;
class AlgorithmSpecificationDefaultTypeInternal;
extern AlgorithmSpecificationDefaultTypeInternal _AlgorithmSpecification_default_instance_;
class AlgorithmSpecification_MetricDefinition;
class AlgorithmSpecification_MetricDefinitionDefaultTypeInternal;
extern AlgorithmSpecification_MetricDefinitionDefaultTypeInternal _AlgorithmSpecification_MetricDefinition_default_instance_;
class InputMode;
class InputModeDefaultTypeInternal;
extern InputModeDefaultTypeInternal _InputMode_default_instance_;
class StoppingCondition;
class StoppingConditionDefaultTypeInternal;
extern StoppingConditionDefaultTypeInternal _StoppingCondition_default_instance_;
class TrainingJob;
class TrainingJobDefaultTypeInternal;
extern TrainingJobDefaultTypeInternal _TrainingJob_default_instance_;
class TrainingJobResourceConfig;
class TrainingJobResourceConfigDefaultTypeInternal;
extern TrainingJobResourceConfigDefaultTypeInternal _TrainingJobResourceConfig_default_instance_;
}  // namespace sagemaker
}  // namespace plugins
}  // namespace flyteidl
namespace google {
namespace protobuf {
template<> ::flyteidl::plugins::sagemaker::AlgorithmName* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::AlgorithmName>(Arena*);
template<> ::flyteidl::plugins::sagemaker::AlgorithmSpecification* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::AlgorithmSpecification>(Arena*);
template<> ::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition>(Arena*);
template<> ::flyteidl::plugins::sagemaker::InputMode* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::InputMode>(Arena*);
template<> ::flyteidl::plugins::sagemaker::StoppingCondition* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::StoppingCondition>(Arena*);
template<> ::flyteidl::plugins::sagemaker::TrainingJob* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::TrainingJob>(Arena*);
template<> ::flyteidl::plugins::sagemaker::TrainingJobResourceConfig* Arena::CreateMaybeMessage<::flyteidl::plugins::sagemaker::TrainingJobResourceConfig>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace flyteidl {
namespace plugins {
namespace sagemaker {

enum InputMode_Value {
  InputMode_Value_FILE = 0,
  InputMode_Value_PIPE = 1,
  InputMode_Value_InputMode_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  InputMode_Value_InputMode_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool InputMode_Value_IsValid(int value);
const InputMode_Value InputMode_Value_Value_MIN = InputMode_Value_FILE;
const InputMode_Value InputMode_Value_Value_MAX = InputMode_Value_PIPE;
const int InputMode_Value_Value_ARRAYSIZE = InputMode_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* InputMode_Value_descriptor();
inline const ::std::string& InputMode_Value_Name(InputMode_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    InputMode_Value_descriptor(), value);
}
inline bool InputMode_Value_Parse(
    const ::std::string& name, InputMode_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InputMode_Value>(
    InputMode_Value_descriptor(), name, value);
}
enum AlgorithmName_Value {
  AlgorithmName_Value_CUSTOM = 0,
  AlgorithmName_Value_XGBOOST = 1,
  AlgorithmName_Value_AlgorithmName_Value_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  AlgorithmName_Value_AlgorithmName_Value_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool AlgorithmName_Value_IsValid(int value);
const AlgorithmName_Value AlgorithmName_Value_Value_MIN = AlgorithmName_Value_CUSTOM;
const AlgorithmName_Value AlgorithmName_Value_Value_MAX = AlgorithmName_Value_XGBOOST;
const int AlgorithmName_Value_Value_ARRAYSIZE = AlgorithmName_Value_Value_MAX + 1;

const ::google::protobuf::EnumDescriptor* AlgorithmName_Value_descriptor();
inline const ::std::string& AlgorithmName_Value_Name(AlgorithmName_Value value) {
  return ::google::protobuf::internal::NameOfEnum(
    AlgorithmName_Value_descriptor(), value);
}
inline bool AlgorithmName_Value_Parse(
    const ::std::string& name, AlgorithmName_Value* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AlgorithmName_Value>(
    AlgorithmName_Value_descriptor(), name, value);
}
// ===================================================================

class InputMode final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.InputMode) */ {
 public:
  InputMode();
  virtual ~InputMode();

  InputMode(const InputMode& from);

  inline InputMode& operator=(const InputMode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InputMode(InputMode&& from) noexcept
    : InputMode() {
    *this = ::std::move(from);
  }

  inline InputMode& operator=(InputMode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const InputMode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputMode* internal_default_instance() {
    return reinterpret_cast<const InputMode*>(
               &_InputMode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(InputMode* other);
  friend void swap(InputMode& a, InputMode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InputMode* New() const final {
    return CreateMaybeMessage<InputMode>(nullptr);
  }

  InputMode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InputMode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InputMode& from);
  void MergeFrom(const InputMode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputMode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef InputMode_Value Value;
  static const Value FILE =
    InputMode_Value_FILE;
  static const Value PIPE =
    InputMode_Value_PIPE;
  static inline bool Value_IsValid(int value) {
    return InputMode_Value_IsValid(value);
  }
  static const Value Value_MIN =
    InputMode_Value_Value_MIN;
  static const Value Value_MAX =
    InputMode_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    InputMode_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return InputMode_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return InputMode_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return InputMode_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.InputMode)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto;
};
// -------------------------------------------------------------------

class AlgorithmName final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.AlgorithmName) */ {
 public:
  AlgorithmName();
  virtual ~AlgorithmName();

  AlgorithmName(const AlgorithmName& from);

  inline AlgorithmName& operator=(const AlgorithmName& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AlgorithmName(AlgorithmName&& from) noexcept
    : AlgorithmName() {
    *this = ::std::move(from);
  }

  inline AlgorithmName& operator=(AlgorithmName&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AlgorithmName& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AlgorithmName* internal_default_instance() {
    return reinterpret_cast<const AlgorithmName*>(
               &_AlgorithmName_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(AlgorithmName* other);
  friend void swap(AlgorithmName& a, AlgorithmName& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AlgorithmName* New() const final {
    return CreateMaybeMessage<AlgorithmName>(nullptr);
  }

  AlgorithmName* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AlgorithmName>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AlgorithmName& from);
  void MergeFrom(const AlgorithmName& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AlgorithmName* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AlgorithmName_Value Value;
  static const Value CUSTOM =
    AlgorithmName_Value_CUSTOM;
  static const Value XGBOOST =
    AlgorithmName_Value_XGBOOST;
  static inline bool Value_IsValid(int value) {
    return AlgorithmName_Value_IsValid(value);
  }
  static const Value Value_MIN =
    AlgorithmName_Value_Value_MIN;
  static const Value Value_MAX =
    AlgorithmName_Value_Value_MAX;
  static const int Value_ARRAYSIZE =
    AlgorithmName_Value_Value_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Value_descriptor() {
    return AlgorithmName_Value_descriptor();
  }
  static inline const ::std::string& Value_Name(Value value) {
    return AlgorithmName_Value_Name(value);
  }
  static inline bool Value_Parse(const ::std::string& name,
      Value* value) {
    return AlgorithmName_Value_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.AlgorithmName)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto;
};
// -------------------------------------------------------------------

class AlgorithmSpecification_MetricDefinition final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition) */ {
 public:
  AlgorithmSpecification_MetricDefinition();
  virtual ~AlgorithmSpecification_MetricDefinition();

  AlgorithmSpecification_MetricDefinition(const AlgorithmSpecification_MetricDefinition& from);

  inline AlgorithmSpecification_MetricDefinition& operator=(const AlgorithmSpecification_MetricDefinition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AlgorithmSpecification_MetricDefinition(AlgorithmSpecification_MetricDefinition&& from) noexcept
    : AlgorithmSpecification_MetricDefinition() {
    *this = ::std::move(from);
  }

  inline AlgorithmSpecification_MetricDefinition& operator=(AlgorithmSpecification_MetricDefinition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AlgorithmSpecification_MetricDefinition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AlgorithmSpecification_MetricDefinition* internal_default_instance() {
    return reinterpret_cast<const AlgorithmSpecification_MetricDefinition*>(
               &_AlgorithmSpecification_MetricDefinition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(AlgorithmSpecification_MetricDefinition* other);
  friend void swap(AlgorithmSpecification_MetricDefinition& a, AlgorithmSpecification_MetricDefinition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AlgorithmSpecification_MetricDefinition* New() const final {
    return CreateMaybeMessage<AlgorithmSpecification_MetricDefinition>(nullptr);
  }

  AlgorithmSpecification_MetricDefinition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AlgorithmSpecification_MetricDefinition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AlgorithmSpecification_MetricDefinition& from);
  void MergeFrom(const AlgorithmSpecification_MetricDefinition& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AlgorithmSpecification_MetricDefinition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string regex = 2;
  void clear_regex();
  static const int kRegexFieldNumber = 2;
  const ::std::string& regex() const;
  void set_regex(const ::std::string& value);
  #if LANG_CXX11
  void set_regex(::std::string&& value);
  #endif
  void set_regex(const char* value);
  void set_regex(const char* value, size_t size);
  ::std::string* mutable_regex();
  ::std::string* release_regex();
  void set_allocated_regex(::std::string* regex);

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr regex_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto;
};
// -------------------------------------------------------------------

class AlgorithmSpecification final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.AlgorithmSpecification) */ {
 public:
  AlgorithmSpecification();
  virtual ~AlgorithmSpecification();

  AlgorithmSpecification(const AlgorithmSpecification& from);

  inline AlgorithmSpecification& operator=(const AlgorithmSpecification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AlgorithmSpecification(AlgorithmSpecification&& from) noexcept
    : AlgorithmSpecification() {
    *this = ::std::move(from);
  }

  inline AlgorithmSpecification& operator=(AlgorithmSpecification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AlgorithmSpecification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AlgorithmSpecification* internal_default_instance() {
    return reinterpret_cast<const AlgorithmSpecification*>(
               &_AlgorithmSpecification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(AlgorithmSpecification* other);
  friend void swap(AlgorithmSpecification& a, AlgorithmSpecification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AlgorithmSpecification* New() const final {
    return CreateMaybeMessage<AlgorithmSpecification>(nullptr);
  }

  AlgorithmSpecification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AlgorithmSpecification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AlgorithmSpecification& from);
  void MergeFrom(const AlgorithmSpecification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AlgorithmSpecification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AlgorithmSpecification_MetricDefinition MetricDefinition;

  // accessors -------------------------------------------------------

  // repeated .flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition metric_definitions = 4;
  int metric_definitions_size() const;
  void clear_metric_definitions();
  static const int kMetricDefinitionsFieldNumber = 4;
  ::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition* mutable_metric_definitions(int index);
  ::google::protobuf::RepeatedPtrField< ::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition >*
      mutable_metric_definitions();
  const ::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition& metric_definitions(int index) const;
  ::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition* add_metric_definitions();
  const ::google::protobuf::RepeatedPtrField< ::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition >&
      metric_definitions() const;

  // string algorithm_version = 3;
  void clear_algorithm_version();
  static const int kAlgorithmVersionFieldNumber = 3;
  const ::std::string& algorithm_version() const;
  void set_algorithm_version(const ::std::string& value);
  #if LANG_CXX11
  void set_algorithm_version(::std::string&& value);
  #endif
  void set_algorithm_version(const char* value);
  void set_algorithm_version(const char* value, size_t size);
  ::std::string* mutable_algorithm_version();
  ::std::string* release_algorithm_version();
  void set_allocated_algorithm_version(::std::string* algorithm_version);

  // .flyteidl.plugins.sagemaker.InputMode.Value input_mode = 1;
  void clear_input_mode();
  static const int kInputModeFieldNumber = 1;
  ::flyteidl::plugins::sagemaker::InputMode_Value input_mode() const;
  void set_input_mode(::flyteidl::plugins::sagemaker::InputMode_Value value);

  // .flyteidl.plugins.sagemaker.AlgorithmName.Value algorithm_name = 2;
  void clear_algorithm_name();
  static const int kAlgorithmNameFieldNumber = 2;
  ::flyteidl::plugins::sagemaker::AlgorithmName_Value algorithm_name() const;
  void set_algorithm_name(::flyteidl::plugins::sagemaker::AlgorithmName_Value value);

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.AlgorithmSpecification)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition > metric_definitions_;
  ::google::protobuf::internal::ArenaStringPtr algorithm_version_;
  int input_mode_;
  int algorithm_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto;
};
// -------------------------------------------------------------------

class TrainingJobResourceConfig final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.TrainingJobResourceConfig) */ {
 public:
  TrainingJobResourceConfig();
  virtual ~TrainingJobResourceConfig();

  TrainingJobResourceConfig(const TrainingJobResourceConfig& from);

  inline TrainingJobResourceConfig& operator=(const TrainingJobResourceConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrainingJobResourceConfig(TrainingJobResourceConfig&& from) noexcept
    : TrainingJobResourceConfig() {
    *this = ::std::move(from);
  }

  inline TrainingJobResourceConfig& operator=(TrainingJobResourceConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TrainingJobResourceConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainingJobResourceConfig* internal_default_instance() {
    return reinterpret_cast<const TrainingJobResourceConfig*>(
               &_TrainingJobResourceConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(TrainingJobResourceConfig* other);
  friend void swap(TrainingJobResourceConfig& a, TrainingJobResourceConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrainingJobResourceConfig* New() const final {
    return CreateMaybeMessage<TrainingJobResourceConfig>(nullptr);
  }

  TrainingJobResourceConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TrainingJobResourceConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TrainingJobResourceConfig& from);
  void MergeFrom(const TrainingJobResourceConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainingJobResourceConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string instance_type = 2;
  void clear_instance_type();
  static const int kInstanceTypeFieldNumber = 2;
  const ::std::string& instance_type() const;
  void set_instance_type(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_type(::std::string&& value);
  #endif
  void set_instance_type(const char* value);
  void set_instance_type(const char* value, size_t size);
  ::std::string* mutable_instance_type();
  ::std::string* release_instance_type();
  void set_allocated_instance_type(::std::string* instance_type);

  // int64 instance_count = 1;
  void clear_instance_count();
  static const int kInstanceCountFieldNumber = 1;
  ::google::protobuf::int64 instance_count() const;
  void set_instance_count(::google::protobuf::int64 value);

  // int64 volume_size_in_gb = 3;
  void clear_volume_size_in_gb();
  static const int kVolumeSizeInGbFieldNumber = 3;
  ::google::protobuf::int64 volume_size_in_gb() const;
  void set_volume_size_in_gb(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.TrainingJobResourceConfig)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr instance_type_;
  ::google::protobuf::int64 instance_count_;
  ::google::protobuf::int64 volume_size_in_gb_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto;
};
// -------------------------------------------------------------------

class StoppingCondition final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.StoppingCondition) */ {
 public:
  StoppingCondition();
  virtual ~StoppingCondition();

  StoppingCondition(const StoppingCondition& from);

  inline StoppingCondition& operator=(const StoppingCondition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StoppingCondition(StoppingCondition&& from) noexcept
    : StoppingCondition() {
    *this = ::std::move(from);
  }

  inline StoppingCondition& operator=(StoppingCondition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StoppingCondition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StoppingCondition* internal_default_instance() {
    return reinterpret_cast<const StoppingCondition*>(
               &_StoppingCondition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(StoppingCondition* other);
  friend void swap(StoppingCondition& a, StoppingCondition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StoppingCondition* New() const final {
    return CreateMaybeMessage<StoppingCondition>(nullptr);
  }

  StoppingCondition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StoppingCondition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StoppingCondition& from);
  void MergeFrom(const StoppingCondition& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StoppingCondition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 max_runtime_in_seconds = 1;
  void clear_max_runtime_in_seconds();
  static const int kMaxRuntimeInSecondsFieldNumber = 1;
  ::google::protobuf::int64 max_runtime_in_seconds() const;
  void set_max_runtime_in_seconds(::google::protobuf::int64 value);

  // int64 max_wait_time_in_seconds = 2;
  void clear_max_wait_time_in_seconds();
  static const int kMaxWaitTimeInSecondsFieldNumber = 2;
  ::google::protobuf::int64 max_wait_time_in_seconds() const;
  void set_max_wait_time_in_seconds(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.StoppingCondition)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 max_runtime_in_seconds_;
  ::google::protobuf::int64 max_wait_time_in_seconds_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto;
};
// -------------------------------------------------------------------

class TrainingJob final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.sagemaker.TrainingJob) */ {
 public:
  TrainingJob();
  virtual ~TrainingJob();

  TrainingJob(const TrainingJob& from);

  inline TrainingJob& operator=(const TrainingJob& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrainingJob(TrainingJob&& from) noexcept
    : TrainingJob() {
    *this = ::std::move(from);
  }

  inline TrainingJob& operator=(TrainingJob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TrainingJob& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainingJob* internal_default_instance() {
    return reinterpret_cast<const TrainingJob*>(
               &_TrainingJob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(TrainingJob* other);
  friend void swap(TrainingJob& a, TrainingJob& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrainingJob* New() const final {
    return CreateMaybeMessage<TrainingJob>(nullptr);
  }

  TrainingJob* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TrainingJob>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TrainingJob& from);
  void MergeFrom(const TrainingJob& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainingJob* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .flyteidl.plugins.sagemaker.AlgorithmSpecification algorithm_specification = 1;
  bool has_algorithm_specification() const;
  void clear_algorithm_specification();
  static const int kAlgorithmSpecificationFieldNumber = 1;
  const ::flyteidl::plugins::sagemaker::AlgorithmSpecification& algorithm_specification() const;
  ::flyteidl::plugins::sagemaker::AlgorithmSpecification* release_algorithm_specification();
  ::flyteidl::plugins::sagemaker::AlgorithmSpecification* mutable_algorithm_specification();
  void set_allocated_algorithm_specification(::flyteidl::plugins::sagemaker::AlgorithmSpecification* algorithm_specification);

  // .flyteidl.plugins.sagemaker.TrainingJobResourceConfig training_job_config = 2;
  bool has_training_job_config() const;
  void clear_training_job_config();
  static const int kTrainingJobConfigFieldNumber = 2;
  const ::flyteidl::plugins::sagemaker::TrainingJobResourceConfig& training_job_config() const;
  ::flyteidl::plugins::sagemaker::TrainingJobResourceConfig* release_training_job_config();
  ::flyteidl::plugins::sagemaker::TrainingJobResourceConfig* mutable_training_job_config();
  void set_allocated_training_job_config(::flyteidl::plugins::sagemaker::TrainingJobResourceConfig* training_job_config);

  // bool interruptible = 3;
  void clear_interruptible();
  static const int kInterruptibleFieldNumber = 3;
  bool interruptible() const;
  void set_interruptible(bool value);

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.sagemaker.TrainingJob)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::flyteidl::plugins::sagemaker::AlgorithmSpecification* algorithm_specification_;
  ::flyteidl::plugins::sagemaker::TrainingJobResourceConfig* training_job_config_;
  bool interruptible_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InputMode

// -------------------------------------------------------------------

// AlgorithmName

// -------------------------------------------------------------------

// AlgorithmSpecification_MetricDefinition

// string name = 1;
inline void AlgorithmSpecification_MetricDefinition::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlgorithmSpecification_MetricDefinition::name() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.name)
  return name_.GetNoArena();
}
inline void AlgorithmSpecification_MetricDefinition::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.name)
}
#if LANG_CXX11
inline void AlgorithmSpecification_MetricDefinition::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.name)
}
#endif
inline void AlgorithmSpecification_MetricDefinition::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.name)
}
inline void AlgorithmSpecification_MetricDefinition::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.name)
}
inline ::std::string* AlgorithmSpecification_MetricDefinition::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlgorithmSpecification_MetricDefinition::release_name() {
  // @@protoc_insertion_point(field_release:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlgorithmSpecification_MetricDefinition::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.name)
}

// string regex = 2;
inline void AlgorithmSpecification_MetricDefinition::clear_regex() {
  regex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlgorithmSpecification_MetricDefinition::regex() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.regex)
  return regex_.GetNoArena();
}
inline void AlgorithmSpecification_MetricDefinition::set_regex(const ::std::string& value) {
  
  regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.regex)
}
#if LANG_CXX11
inline void AlgorithmSpecification_MetricDefinition::set_regex(::std::string&& value) {
  
  regex_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.regex)
}
#endif
inline void AlgorithmSpecification_MetricDefinition::set_regex(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.regex)
}
inline void AlgorithmSpecification_MetricDefinition::set_regex(const char* value, size_t size) {
  
  regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.regex)
}
inline ::std::string* AlgorithmSpecification_MetricDefinition::mutable_regex() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.regex)
  return regex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlgorithmSpecification_MetricDefinition::release_regex() {
  // @@protoc_insertion_point(field_release:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.regex)
  
  return regex_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlgorithmSpecification_MetricDefinition::set_allocated_regex(::std::string* regex) {
  if (regex != nullptr) {
    
  } else {
    
  }
  regex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regex);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition.regex)
}

// -------------------------------------------------------------------

// AlgorithmSpecification

// .flyteidl.plugins.sagemaker.InputMode.Value input_mode = 1;
inline void AlgorithmSpecification::clear_input_mode() {
  input_mode_ = 0;
}
inline ::flyteidl::plugins::sagemaker::InputMode_Value AlgorithmSpecification::input_mode() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.AlgorithmSpecification.input_mode)
  return static_cast< ::flyteidl::plugins::sagemaker::InputMode_Value >(input_mode_);
}
inline void AlgorithmSpecification::set_input_mode(::flyteidl::plugins::sagemaker::InputMode_Value value) {
  
  input_mode_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.AlgorithmSpecification.input_mode)
}

// .flyteidl.plugins.sagemaker.AlgorithmName.Value algorithm_name = 2;
inline void AlgorithmSpecification::clear_algorithm_name() {
  algorithm_name_ = 0;
}
inline ::flyteidl::plugins::sagemaker::AlgorithmName_Value AlgorithmSpecification::algorithm_name() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.AlgorithmSpecification.algorithm_name)
  return static_cast< ::flyteidl::plugins::sagemaker::AlgorithmName_Value >(algorithm_name_);
}
inline void AlgorithmSpecification::set_algorithm_name(::flyteidl::plugins::sagemaker::AlgorithmName_Value value) {
  
  algorithm_name_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.AlgorithmSpecification.algorithm_name)
}

// string algorithm_version = 3;
inline void AlgorithmSpecification::clear_algorithm_version() {
  algorithm_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AlgorithmSpecification::algorithm_version() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.AlgorithmSpecification.algorithm_version)
  return algorithm_version_.GetNoArena();
}
inline void AlgorithmSpecification::set_algorithm_version(const ::std::string& value) {
  
  algorithm_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.AlgorithmSpecification.algorithm_version)
}
#if LANG_CXX11
inline void AlgorithmSpecification::set_algorithm_version(::std::string&& value) {
  
  algorithm_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.plugins.sagemaker.AlgorithmSpecification.algorithm_version)
}
#endif
inline void AlgorithmSpecification::set_algorithm_version(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  algorithm_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.plugins.sagemaker.AlgorithmSpecification.algorithm_version)
}
inline void AlgorithmSpecification::set_algorithm_version(const char* value, size_t size) {
  
  algorithm_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.plugins.sagemaker.AlgorithmSpecification.algorithm_version)
}
inline ::std::string* AlgorithmSpecification::mutable_algorithm_version() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.AlgorithmSpecification.algorithm_version)
  return algorithm_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlgorithmSpecification::release_algorithm_version() {
  // @@protoc_insertion_point(field_release:flyteidl.plugins.sagemaker.AlgorithmSpecification.algorithm_version)
  
  return algorithm_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlgorithmSpecification::set_allocated_algorithm_version(::std::string* algorithm_version) {
  if (algorithm_version != nullptr) {
    
  } else {
    
  }
  algorithm_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), algorithm_version);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.plugins.sagemaker.AlgorithmSpecification.algorithm_version)
}

// repeated .flyteidl.plugins.sagemaker.AlgorithmSpecification.MetricDefinition metric_definitions = 4;
inline int AlgorithmSpecification::metric_definitions_size() const {
  return metric_definitions_.size();
}
inline void AlgorithmSpecification::clear_metric_definitions() {
  metric_definitions_.Clear();
}
inline ::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition* AlgorithmSpecification::mutable_metric_definitions(int index) {
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.AlgorithmSpecification.metric_definitions)
  return metric_definitions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition >*
AlgorithmSpecification::mutable_metric_definitions() {
  // @@protoc_insertion_point(field_mutable_list:flyteidl.plugins.sagemaker.AlgorithmSpecification.metric_definitions)
  return &metric_definitions_;
}
inline const ::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition& AlgorithmSpecification::metric_definitions(int index) const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.AlgorithmSpecification.metric_definitions)
  return metric_definitions_.Get(index);
}
inline ::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition* AlgorithmSpecification::add_metric_definitions() {
  // @@protoc_insertion_point(field_add:flyteidl.plugins.sagemaker.AlgorithmSpecification.metric_definitions)
  return metric_definitions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::flyteidl::plugins::sagemaker::AlgorithmSpecification_MetricDefinition >&
AlgorithmSpecification::metric_definitions() const {
  // @@protoc_insertion_point(field_list:flyteidl.plugins.sagemaker.AlgorithmSpecification.metric_definitions)
  return metric_definitions_;
}

// -------------------------------------------------------------------

// TrainingJobResourceConfig

// int64 instance_count = 1;
inline void TrainingJobResourceConfig::clear_instance_count() {
  instance_count_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 TrainingJobResourceConfig::instance_count() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.TrainingJobResourceConfig.instance_count)
  return instance_count_;
}
inline void TrainingJobResourceConfig::set_instance_count(::google::protobuf::int64 value) {
  
  instance_count_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.TrainingJobResourceConfig.instance_count)
}

// string instance_type = 2;
inline void TrainingJobResourceConfig::clear_instance_type() {
  instance_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TrainingJobResourceConfig::instance_type() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.TrainingJobResourceConfig.instance_type)
  return instance_type_.GetNoArena();
}
inline void TrainingJobResourceConfig::set_instance_type(const ::std::string& value) {
  
  instance_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.TrainingJobResourceConfig.instance_type)
}
#if LANG_CXX11
inline void TrainingJobResourceConfig::set_instance_type(::std::string&& value) {
  
  instance_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:flyteidl.plugins.sagemaker.TrainingJobResourceConfig.instance_type)
}
#endif
inline void TrainingJobResourceConfig::set_instance_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  instance_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:flyteidl.plugins.sagemaker.TrainingJobResourceConfig.instance_type)
}
inline void TrainingJobResourceConfig::set_instance_type(const char* value, size_t size) {
  
  instance_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:flyteidl.plugins.sagemaker.TrainingJobResourceConfig.instance_type)
}
inline ::std::string* TrainingJobResourceConfig::mutable_instance_type() {
  
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.TrainingJobResourceConfig.instance_type)
  return instance_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrainingJobResourceConfig::release_instance_type() {
  // @@protoc_insertion_point(field_release:flyteidl.plugins.sagemaker.TrainingJobResourceConfig.instance_type)
  
  return instance_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrainingJobResourceConfig::set_allocated_instance_type(::std::string* instance_type) {
  if (instance_type != nullptr) {
    
  } else {
    
  }
  instance_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_type);
  // @@protoc_insertion_point(field_set_allocated:flyteidl.plugins.sagemaker.TrainingJobResourceConfig.instance_type)
}

// int64 volume_size_in_gb = 3;
inline void TrainingJobResourceConfig::clear_volume_size_in_gb() {
  volume_size_in_gb_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 TrainingJobResourceConfig::volume_size_in_gb() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.TrainingJobResourceConfig.volume_size_in_gb)
  return volume_size_in_gb_;
}
inline void TrainingJobResourceConfig::set_volume_size_in_gb(::google::protobuf::int64 value) {
  
  volume_size_in_gb_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.TrainingJobResourceConfig.volume_size_in_gb)
}

// -------------------------------------------------------------------

// StoppingCondition

// int64 max_runtime_in_seconds = 1;
inline void StoppingCondition::clear_max_runtime_in_seconds() {
  max_runtime_in_seconds_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 StoppingCondition::max_runtime_in_seconds() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.StoppingCondition.max_runtime_in_seconds)
  return max_runtime_in_seconds_;
}
inline void StoppingCondition::set_max_runtime_in_seconds(::google::protobuf::int64 value) {
  
  max_runtime_in_seconds_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.StoppingCondition.max_runtime_in_seconds)
}

// int64 max_wait_time_in_seconds = 2;
inline void StoppingCondition::clear_max_wait_time_in_seconds() {
  max_wait_time_in_seconds_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 StoppingCondition::max_wait_time_in_seconds() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.StoppingCondition.max_wait_time_in_seconds)
  return max_wait_time_in_seconds_;
}
inline void StoppingCondition::set_max_wait_time_in_seconds(::google::protobuf::int64 value) {
  
  max_wait_time_in_seconds_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.StoppingCondition.max_wait_time_in_seconds)
}

// -------------------------------------------------------------------

// TrainingJob

// .flyteidl.plugins.sagemaker.AlgorithmSpecification algorithm_specification = 1;
inline bool TrainingJob::has_algorithm_specification() const {
  return this != internal_default_instance() && algorithm_specification_ != nullptr;
}
inline void TrainingJob::clear_algorithm_specification() {
  if (GetArenaNoVirtual() == nullptr && algorithm_specification_ != nullptr) {
    delete algorithm_specification_;
  }
  algorithm_specification_ = nullptr;
}
inline const ::flyteidl::plugins::sagemaker::AlgorithmSpecification& TrainingJob::algorithm_specification() const {
  const ::flyteidl::plugins::sagemaker::AlgorithmSpecification* p = algorithm_specification_;
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.TrainingJob.algorithm_specification)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::plugins::sagemaker::AlgorithmSpecification*>(
      &::flyteidl::plugins::sagemaker::_AlgorithmSpecification_default_instance_);
}
inline ::flyteidl::plugins::sagemaker::AlgorithmSpecification* TrainingJob::release_algorithm_specification() {
  // @@protoc_insertion_point(field_release:flyteidl.plugins.sagemaker.TrainingJob.algorithm_specification)
  
  ::flyteidl::plugins::sagemaker::AlgorithmSpecification* temp = algorithm_specification_;
  algorithm_specification_ = nullptr;
  return temp;
}
inline ::flyteidl::plugins::sagemaker::AlgorithmSpecification* TrainingJob::mutable_algorithm_specification() {
  
  if (algorithm_specification_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::plugins::sagemaker::AlgorithmSpecification>(GetArenaNoVirtual());
    algorithm_specification_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.TrainingJob.algorithm_specification)
  return algorithm_specification_;
}
inline void TrainingJob::set_allocated_algorithm_specification(::flyteidl::plugins::sagemaker::AlgorithmSpecification* algorithm_specification) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete algorithm_specification_;
  }
  if (algorithm_specification) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      algorithm_specification = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, algorithm_specification, submessage_arena);
    }
    
  } else {
    
  }
  algorithm_specification_ = algorithm_specification;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.plugins.sagemaker.TrainingJob.algorithm_specification)
}

// .flyteidl.plugins.sagemaker.TrainingJobResourceConfig training_job_config = 2;
inline bool TrainingJob::has_training_job_config() const {
  return this != internal_default_instance() && training_job_config_ != nullptr;
}
inline void TrainingJob::clear_training_job_config() {
  if (GetArenaNoVirtual() == nullptr && training_job_config_ != nullptr) {
    delete training_job_config_;
  }
  training_job_config_ = nullptr;
}
inline const ::flyteidl::plugins::sagemaker::TrainingJobResourceConfig& TrainingJob::training_job_config() const {
  const ::flyteidl::plugins::sagemaker::TrainingJobResourceConfig* p = training_job_config_;
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.TrainingJob.training_job_config)
  return p != nullptr ? *p : *reinterpret_cast<const ::flyteidl::plugins::sagemaker::TrainingJobResourceConfig*>(
      &::flyteidl::plugins::sagemaker::_TrainingJobResourceConfig_default_instance_);
}
inline ::flyteidl::plugins::sagemaker::TrainingJobResourceConfig* TrainingJob::release_training_job_config() {
  // @@protoc_insertion_point(field_release:flyteidl.plugins.sagemaker.TrainingJob.training_job_config)
  
  ::flyteidl::plugins::sagemaker::TrainingJobResourceConfig* temp = training_job_config_;
  training_job_config_ = nullptr;
  return temp;
}
inline ::flyteidl::plugins::sagemaker::TrainingJobResourceConfig* TrainingJob::mutable_training_job_config() {
  
  if (training_job_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::flyteidl::plugins::sagemaker::TrainingJobResourceConfig>(GetArenaNoVirtual());
    training_job_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:flyteidl.plugins.sagemaker.TrainingJob.training_job_config)
  return training_job_config_;
}
inline void TrainingJob::set_allocated_training_job_config(::flyteidl::plugins::sagemaker::TrainingJobResourceConfig* training_job_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete training_job_config_;
  }
  if (training_job_config) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      training_job_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, training_job_config, submessage_arena);
    }
    
  } else {
    
  }
  training_job_config_ = training_job_config;
  // @@protoc_insertion_point(field_set_allocated:flyteidl.plugins.sagemaker.TrainingJob.training_job_config)
}

// bool interruptible = 3;
inline void TrainingJob::clear_interruptible() {
  interruptible_ = false;
}
inline bool TrainingJob::interruptible() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.sagemaker.TrainingJob.interruptible)
  return interruptible_;
}
inline void TrainingJob::set_interruptible(bool value) {
  
  interruptible_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.sagemaker.TrainingJob.interruptible)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sagemaker
}  // namespace plugins
}  // namespace flyteidl

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::flyteidl::plugins::sagemaker::InputMode_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::flyteidl::plugins::sagemaker::InputMode_Value>() {
  return ::flyteidl::plugins::sagemaker::InputMode_Value_descriptor();
}
template <> struct is_proto_enum< ::flyteidl::plugins::sagemaker::AlgorithmName_Value> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::flyteidl::plugins::sagemaker::AlgorithmName_Value>() {
  return ::flyteidl::plugins::sagemaker::AlgorithmName_Value_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_flyteidl_2fplugins_2fsagemaker_2ftraining_5fjob_2eproto
