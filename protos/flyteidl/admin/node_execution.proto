syntax = "proto3";

package flyteidl.admin;
option go_package = "github.com/lyft/flyteidl/gen/pb-go/flyteidl/admin";

import "google/protobuf/duration.proto";
import "flyteidl/core/literals.proto";
import "flyteidl/admin/common.proto";
import "flyteidl/admin/error.proto";

message NodeExecutionEventRequest {
    string execution_id = 1;

    // the unique id of the event per retry
    string event_id            = 2;

    NodeExecutionStatus status  = 3;
    NodeExecutionSpec spec      = 4;
    NodeExecutionResult result  = 5;
}

message NodeExecutionEventResponse {
    // No specific info needed on the response since the event is pushed
}

message NodeExecution {
    string execution_id = 1;

    // Indicates the status of node execution - including retries
    repeated NodeExecutionStatus status = 2;
    NodeExecutionSpec spec      = 3;
    NodeExecutionResult result  = 4;
}

message NodeExecutionList {
    repeated NodeExecution executions = 1;
}

message NodeExecutionStatus {
    // Phase of the executions
    ExecutionPhase phase              = 1;

    // Time taken for the node execution to complete
    google.protobuf.Duration duration = 2;

    // Indicates if the node results were fetched from the cache
    bool discovery_hit                = 3;

    // Indicates the retry value for the Node Execution
    uint32 retry_attempt        = 4;

    // Indicates if node has sub node executions
    bool is_sub_task_available        = 5;

    // Indicates specific info for each type
    bytes custom_task_info            = 6;
}

// Encapsultes the results of the Execution
message NodeExecutionResult {
    oneof output_result {
        // Output of the execution in NamedValue format
        core.LiteralMap outputs = 1;

        // Error information for the Node
        Error error           = 2;
    }
}

message NodeExecutionSpec {
    string node_id     = 1;

    // Inputs that were passed to the task
    core.LiteralMap inputs = 2;
}
