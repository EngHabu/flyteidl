// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flyteidl/core/execution.proto

package core // import "github.com/lyft/flyteidl/gen/pb-go/flyteidl/core"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Indicates various phases of an Execution for both node and launch plan.
type ExecutionPhase int32

const (
	ExecutionPhase_UNDEFINED ExecutionPhase = 0
	ExecutionPhase_RUNNING   ExecutionPhase = 1
	ExecutionPhase_SUCCEEDED ExecutionPhase = 2
	ExecutionPhase_FAILED    ExecutionPhase = 3
	ExecutionPhase_TIMED_OUT ExecutionPhase = 4
	ExecutionPhase_ABORTED   ExecutionPhase = 5
	ExecutionPhase_QUEUED    ExecutionPhase = 6
)

var ExecutionPhase_name = map[int32]string{
	0: "UNDEFINED",
	1: "RUNNING",
	2: "SUCCEEDED",
	3: "FAILED",
	4: "TIMED_OUT",
	5: "ABORTED",
	6: "QUEUED",
}
var ExecutionPhase_value = map[string]int32{
	"UNDEFINED": 0,
	"RUNNING":   1,
	"SUCCEEDED": 2,
	"FAILED":    3,
	"TIMED_OUT": 4,
	"ABORTED":   5,
	"QUEUED":    6,
}

func (x ExecutionPhase) String() string {
	return proto.EnumName(ExecutionPhase_name, int32(x))
}
func (ExecutionPhase) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_execution_66d783ade5ddbc8f, []int{0}
}

// Represents the error message from the execution.
type ExecutionError struct {
	// Error code indicates a grouping of a type of error.
	// More Info: <Link>
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// Detailed description of the error - including stack trace.
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecutionError) Reset()         { *m = ExecutionError{} }
func (m *ExecutionError) String() string { return proto.CompactTextString(m) }
func (*ExecutionError) ProtoMessage()    {}
func (*ExecutionError) Descriptor() ([]byte, []int) {
	return fileDescriptor_execution_66d783ade5ddbc8f, []int{0}
}
func (m *ExecutionError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionError.Unmarshal(m, b)
}
func (m *ExecutionError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionError.Marshal(b, m, deterministic)
}
func (dst *ExecutionError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionError.Merge(dst, src)
}
func (m *ExecutionError) XXX_Size() int {
	return xxx_messageInfo_ExecutionError.Size(m)
}
func (m *ExecutionError) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionError.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionError proto.InternalMessageInfo

func (m *ExecutionError) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ExecutionError) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*ExecutionError)(nil), "flyteidl.core.ExecutionError")
	proto.RegisterEnum("flyteidl.core.ExecutionPhase", ExecutionPhase_name, ExecutionPhase_value)
}

func init() {
	proto.RegisterFile("flyteidl/core/execution.proto", fileDescriptor_execution_66d783ade5ddbc8f)
}

var fileDescriptor_execution_66d783ade5ddbc8f = []byte{
	// 240 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x4d, 0xad, 0x29, 0x5d, 0xa9, 0x2c, 0x7b, 0xca, 0x45, 0x10, 0x4f, 0x22, 0x98, 0x15,
	0xbd, 0x0b, 0x6d, 0x77, 0x2a, 0x01, 0xdd, 0x6a, 0xcc, 0x5e, 0xbc, 0x48, 0x93, 0x4e, 0xd3, 0x40,
	0xda, 0x29, 0x9b, 0x2d, 0x98, 0x7f, 0x2f, 0x1b, 0x88, 0xe8, 0x6d, 0x66, 0xbe, 0xf7, 0x0e, 0xdf,
	0xb0, 0xcb, 0x4d, 0xdd, 0x3a, 0xac, 0xd6, 0xb5, 0x2c, 0xc8, 0xa2, 0xc4, 0x6f, 0x2c, 0x8e, 0xae,
	0xa2, 0x7d, 0x7c, 0xb0, 0xe4, 0x48, 0x4c, 0x7a, 0x1c, 0x7b, 0x7c, 0xfd, 0xc4, 0x2e, 0xa0, 0x4f,
	0x80, 0xb5, 0x64, 0x85, 0x60, 0xc3, 0x82, 0xd6, 0x18, 0x05, 0x57, 0xc1, 0xcd, 0x38, 0xed, 0x66,
	0x11, 0xb1, 0xd1, 0x0e, 0x9b, 0x66, 0x55, 0x62, 0x34, 0xe8, 0xce, 0xfd, 0x7a, 0x4b, 0x7f, 0xfa,
	0x6f, 0xdb, 0x55, 0x83, 0x62, 0xc2, 0xc6, 0x46, 0x2b, 0x58, 0x24, 0x1a, 0x14, 0x3f, 0x11, 0xe7,
	0x6c, 0x94, 0x1a, 0xad, 0x13, 0xfd, 0xcc, 0x03, 0xcf, 0x3e, 0xcc, 0x7c, 0x0e, 0xa0, 0x40, 0xf1,
	0x81, 0x60, 0x2c, 0x5c, 0x4c, 0x93, 0x17, 0x50, 0xfc, 0xd4, 0xa3, 0x2c, 0x79, 0x05, 0xf5, 0xb5,
	0x34, 0x19, 0x1f, 0xfa, 0xda, 0x74, 0xb6, 0x4c, 0x33, 0x50, 0xfc, 0xcc, 0xe7, 0xde, 0x0d, 0x18,
	0x50, 0x3c, 0x9c, 0x3d, 0x7c, 0xde, 0x97, 0x95, 0xdb, 0x1e, 0xf3, 0xb8, 0xa0, 0x9d, 0xac, 0xdb,
	0x8d, 0x93, 0xbf, 0xc2, 0x25, 0xee, 0xe5, 0x21, 0xbf, 0x2b, 0x49, 0xfe, 0xfb, 0x41, 0x1e, 0x76,
	0xea, 0x8f, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x75, 0xe2, 0x3b, 0xa6, 0x1b, 0x01, 0x00, 0x00,
}
